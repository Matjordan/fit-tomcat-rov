

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Fri Apr 11 14:55:20 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           	psect	smallconst
    52  001000                     __psmallconst:
    53                           	opt stack 0
    54  001000                     _dpowers:
    55                           	opt stack 0
    56  001000  0001               	dw	1
    57  001002  000A               	dw	10
    58  001004  0064               	dw	100
    59  001006  03E8               	dw	1000
    60  001008  2710               	dw	10000
    61  00100A                     __end_of_dpowers:
    62                           	opt stack 0
    63  00100A                     atan@coeff_a:
    64                           	opt stack 0
    65  00100A  3C                 	db	60
    66  00100B  04                 	db	4
    67  00100C  42                 	db	66
    68  00100D  9F                 	db	159
    69  00100E  6A                 	db	106
    70  00100F  42                 	db	66
    71  001010  90                 	db	144
    72  001011  01                 	db	1
    73  001012  42                 	db	66
    74  001013  4D                 	db	77
    75  001014  BB                 	db	187
    76  001015  40                 	db	64
    77  001016  EC                 	db	236
    78  001017  47                 	db	71
    79  001018  3E                 	db	62
    80  001019  8E                 	db	142
    81  00101A  1F                 	db	31
    82  00101B  BB                 	db	187
    83  00101C                     __end_ofatan@coeff_a:
    84                           	opt stack 0
    85  00101C                     atan@coeff_b:
    86                           	opt stack 0
    87  00101C  3C                 	db	60
    88  00101D  04                 	db	4
    89  00101E  42                 	db	66
    90  00101F  5A                 	db	90
    91  001020  8B                 	db	139
    92  001021  42                 	db	66
    93  001022  04                 	db	4
    94  001023  44                 	db	68
    95  001024  42                 	db	66
    96  001025  9C                 	db	156
    97  001026  4F                 	db	79
    98  001027  41                 	db	65
    99  001028  00                 	db	0
   100  001029  80                 	db	128
   101  00102A  3F                 	db	63
   102  00102B                     __end_ofatan@coeff_b:
   103                           	opt stack 0
   104  0000                     _ANSELC	set	3898
   105  0000                     _CCP1CON	set	4029
   106  0000                     _CCP2CON	set	3942
   107  0000                     _CCP3CON	set	3933
   108  0000                     _CCP4CON	set	3927
   109  0000                     _CCPR1L	set	4030
   110  0000                     _CCPR2L	set	3943
   111  0000                     _CCPR3L	set	3934
   112  0000                     _CCPR4L	set	3928
   113  0000                     _LATCbits	set	3979
   114  0000                     _PIE1bits	set	3997
   115  0000                     _PIR1bits	set	3998
   116  0000                     _PIR2bits	set	4001
   117  0000                     _RCSTA1	set	4011
   118  0000                     _RCSTA1bits	set	4011
   119  0000                     _SPBRG1	set	4015
   120  0000                     _SPBRGH1	set	4016
   121  0000                     _SSP1ADD	set	4040
   122  0000                     _SSP1BUF	set	4041
   123  0000                     _SSP1CON1	set	4038
   124  0000                     _SSP1CON1bits	set	4038
   125  0000                     _SSP1CON2	set	4037
   126  0000                     _SSP1CON2bits	set	4037
   127  0000                     _SSP1STAT	set	4039
   128  0000                     _SSP1STATbits	set	4039
   129  0000                     _TXREG1	set	4013
   130  0000                     _TXSTA1	set	4012
   131  0000                     _TXSTA1bits	set	4012
   132  00102B                     __stringdata:
   133                           	opt stack 0
   134  00102B                     STR_1:
   135  00102B  48                 	db	72	;'H'
   136  00102C  44                 	db	68	;'D'
   137  00102D  47                 	db	71	;'G'
   138  00102E  3A                 	db	58	;':'
   139  00102F  25                 	db	37
   140  001030  64                 	db	100	;'d'
   141  001031  20                 	db	32
   142  001032  64                 	db	100	;'d'
   143  001033  65                 	db	101	;'e'
   144  001034  67                 	db	103	;'g'
   145  001035  0A                 	db	10
   146  001036  00                 	db	0
   147  001037                     __end_of__stringdata:
   148                           	opt stack 0
   149                           
   150                           ; #config settings
   151  001037  00                 	db	0	; dummy byte at the end
   152  0000                     
   153                           	psect	cinit
   154  002626                     __pcinit:
   155                           	opt stack 0
   156  002626                     start_initialization:
   157                           	opt stack 0
   158  002626                     __initialization:
   159                           	opt stack 0
   160                           
   161                           ; Clear objects allocated to COMRAM (3 bytes)
   162  002626  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   163  002628  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   164  00262A  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   165  00262C                     end_of_initialization:
   166                           	opt stack 0
   167  00262C                     __end_of__initialization:
   168                           	opt stack 0
   169  00262C  0100               	movlb	0
   170  00262E  EF1C  F008         	goto	_main	;jump to C main() function
   171                           
   172                           	psect	bssCOMRAM
   173  00005A                     __pbssCOMRAM:
   174                           	opt stack 0
   175  00005A                     _USART1_Status:
   176                           	opt stack 0
   177  00005A                     	ds	1
   178  00005B                     __gaddress:
   179                           	opt stack 0
   180  00005B                     	ds	1
   181  00005C                     __xmaddress:
   182                           	opt stack 0
   183  00005C                     	ds	1
   184                           
   185                           	psect	cstackBANK0
   186  000060                     __pcstackBANK0:
   187                           	opt stack 0
   188  000060                     atan@y:
   189                           	opt stack 0
   190                           
   191                           ; 3 bytes @ 0x0
   192  000060                     	ds	3
   193  000063                     atan@x:
   194                           	opt stack 0
   195                           
   196                           ; 3 bytes @ 0x3
   197  000063                     	ds	3
   198  000066                     atan@recip:
   199                           	opt stack 0
   200                           
   201                           ; 1 bytes @ 0x6
   202  000066                     	ds	1
   203  000067                     atan@val_squared:
   204                           	opt stack 0
   205                           
   206                           ; 3 bytes @ 0x7
   207  000067                     	ds	3
   208  00006A                     atan@val:
   209                           	opt stack 0
   210                           
   211                           ; 3 bytes @ 0xA
   212  00006A                     	ds	3
   213  00006D                     main@buff:
   214                           	opt stack 0
   215                           
   216                           ; 30 bytes @ 0xD
   217  00006D                     	ds	30
   218  00008B                     main@HDG:
   219                           	opt stack 0
   220                           
   221                           ; 3 bytes @ 0x2B
   222  00008B                     	ds	3
   223  00008E                     main@a:
   224                           	opt stack 0
   225                           
   226                           ; 2 bytes @ 0x2E
   227  00008E                     	ds	2
   228  000090                     main@gyro:
   229                           	opt stack 0
   230                           
   231                           ; 6 bytes @ 0x30
   232  000090                     	ds	6
   233  000096                     main@accel:
   234                           	opt stack 0
   235                           
   236                           ; 6 bytes @ 0x36
   237  000096                     	ds	6
   238  00009C                     main@ii:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x3C
   242  00009C                     	ds	2
   243  00009E                     _main$2275:
   244                           	opt stack 0
   245                           
   246                           ; 3 bytes @ 0x3E
   247  00009E                     	ds	3
   248  0000A1                     _main$2276:
   249                           	opt stack 0
   250                           
   251                           ; 3 bytes @ 0x41
   252  0000A1                     	ds	3
   253  0000A4                     main@mag:
   254                           	opt stack 0
   255                           
   256                           ; 6 bytes @ 0x44
   257  0000A4                     	ds	6
   258  0000AA                     main@hdg:
   259                           	opt stack 0
   260                           
   261                           ; 2 bytes @ 0x4A
   262  0000AA                     	ds	2
   263                           
   264                           	psect	cstackCOMRAM
   265  000001                     __pcstackCOMRAM:
   266                           	opt stack 0
   267  000001                     ?_Write1USART:
   268                           	opt stack 0
   269  000001                     ?_OpenI2C1:
   270                           	opt stack 0
   271  000001                     ?_Open1USART:
   272                           	opt stack 0
   273  000001                     ?___ftge:
   274                           	opt stack 0
   275  000001                     ?_WriteI2C1:
   276                           	opt stack 0
   277  000001                     ?___awdiv:
   278                           	opt stack 0
   279  000001                     ?___awmod:
   280                           	opt stack 0
   281  000001                     ?___lwdiv:
   282                           	opt stack 0
   283  000001                     ?___ftpack:
   284                           	opt stack 0
   285  000001                     Open1USART@config:
   286                           	opt stack 0
   287  000001                     Write1USART@data:
   288                           	opt stack 0
   289  000001                     OpenI2C1@sync_mode:
   290                           	opt stack 0
   291  000001                     WriteI2C1@data_out:
   292                           	opt stack 0
   293  000001                     ___awdiv@dividend:
   294                           	opt stack 0
   295  000001                     ___awmod@dividend:
   296                           	opt stack 0
   297  000001                     ___lwdiv@dividend:
   298                           	opt stack 0
   299  000001                     ___ftpack@arg:
   300                           	opt stack 0
   301  000001                     ___ftge@ff1:
   302                           	opt stack 0
   303                           
   304                           ; 3 bytes @ 0x0
   305  000001                     	ds	1
   306  000002                     ?_putrs1USART:
   307                           	opt stack 0
   308  000002                     ??_WriteI2C1:
   309  000002                     OpenI2C1@slew:
   310                           	opt stack 0
   311  000002                     Open1USART@spbrg:
   312                           	opt stack 0
   313  000002                     putrs1USART@data:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x1
   317  000002                     	ds	1
   318  000003                     ?_xmWriteByte:
   319                           	opt stack 0
   320  000003                     ?_gWriteByte:
   321                           	opt stack 0
   322  000003                     ?_I2CReadByte:
   323                           	opt stack 0
   324  000003                     gWriteByte@subadd:
   325                           	opt stack 0
   326  000003                     xmWriteByte@subadd:
   327                           	opt stack 0
   328  000003                     I2CReadByte@add:
   329                           	opt stack 0
   330  000003                     ___awdiv@divisor:
   331                           	opt stack 0
   332  000003                     ___awmod@divisor:
   333                           	opt stack 0
   334  000003                     ___lwdiv@divisor:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x2
   338  000003                     	ds	1
   339  000004                     ??_Tomcat_Setup:
   340  000004                     gWriteByte@data:
   341                           	opt stack 0
   342  000004                     xmWriteByte@data:
   343                           	opt stack 0
   344  000004                     I2CReadByte@subadd:
   345                           	opt stack 0
   346  000004                     ___ftpack@exp:
   347                           	opt stack 0
   348  000004                     ___ftge@ff2:
   349                           	opt stack 0
   350                           
   351                           ; 3 bytes @ 0x3
   352  000004                     	ds	1
   353  000005                     ??_openLSM9_accel:
   354  000005                     ??_openLSM9_gyro:
   355  000005                     ??_openLSM9_mag:
   356  000005                     ??_I2CReadByte:
   357  000005                     ??___awdiv:
   358  000005                     ??___awmod:
   359  000005                     ??___lwdiv:
   360  000005                     ___ftpack@sign:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x4
   364  000005                     	ds	1
   365  000006                     ??___ftpack:
   366  000006                     I2CReadByte@_temp:
   367                           	opt stack 0
   368  000006                     ___awdiv@counter:
   369                           	opt stack 0
   370  000006                     ___awmod@counter:
   371                           	opt stack 0
   372  000006                     ___lwdiv@quotient:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x5
   376  000006                     	ds	1
   377  000007                     ??___ftge:
   378  000007                     ?_xmReadByte:
   379                           	opt stack 0
   380  000007                     ?_gReadByte:
   381                           	opt stack 0
   382  000007                     gReadByte@subadd:
   383                           	opt stack 0
   384  000007                     xmReadByte@subadd:
   385                           	opt stack 0
   386  000007                     ___awdiv@sign:
   387                           	opt stack 0
   388  000007                     ___awmod@sign:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x6
   392  000007                     	ds	1
   393  000008                     ?_readLSM9_accel:
   394                           	opt stack 0
   395  000008                     ?_readLSM9_gyro:
   396                           	opt stack 0
   397  000008                     ?_readLSM9_mag:
   398                           	opt stack 0
   399  000008                     ?_openLSM9:
   400                           	opt stack 0
   401  000008                     openLSM9@_xmadd:
   402                           	opt stack 0
   403  000008                     ___lwdiv@counter:
   404                           	opt stack 0
   405  000008                     readLSM9_accel@dest:
   406                           	opt stack 0
   407  000008                     readLSM9_mag@dest:
   408                           	opt stack 0
   409  000008                     readLSM9_gyro@dest:
   410                           	opt stack 0
   411  000008                     ___awdiv@quotient:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x7
   415  000008                     	ds	1
   416  000009                     ?___lwmod:
   417                           	opt stack 0
   418  000009                     openLSM9@_gadd:
   419                           	opt stack 0
   420  000009                     ___lwmod@dividend:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x8
   424  000009                     	ds	1
   425  00000A                     ??_openLSM9:
   426  00000A                     ??_readLSM9_accel:
   427  00000A                     ??_readLSM9_gyro:
   428  00000A                     ??_readLSM9_mag:
   429  00000A                     ?___wmul:
   430                           	opt stack 0
   431  00000A                     ___wmul@multiplier:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x9
   435  00000A                     	ds	1
   436  00000B                     ___lwmod@divisor:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0xA
   440  00000B                     	ds	1
   441  00000C                     openLSM9@gtest:
   442                           	opt stack 0
   443  00000C                     ___wmul@multiplicand:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0xB
   447  00000C                     	ds	1
   448  00000D                     ??___lwmod:
   449  00000D                     openLSM9@xmtest:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0xC
   453  00000D                     	ds	1
   454  00000E                     ___lwmod@counter:
   455                           	opt stack 0
   456  00000E                     ___wmul@product:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0xD
   460  00000E                     	ds	1
   461  00000F                     ?_sprintf:
   462                           	opt stack 0
   463  00000F                     sprintf@sp:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0xE
   467  00000F                     	ds	1
   468  000010                     ?___ftneg:
   469                           	opt stack 0
   470  000010                     ___ftneg@f1:
   471                           	opt stack 0
   472                           
   473                           ; 3 bytes @ 0xF
   474  000010                     	ds	1
   475  000011                     sprintf@f:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x10
   479  000011                     	ds	2
   480  000013                     ?___fttol:
   481                           	opt stack 0
   482  000013                     ___fttol@f1:
   483                           	opt stack 0
   484                           
   485                           ; 3 bytes @ 0x12
   486  000013                     	ds	2
   487  000015                     ??_sprintf:
   488                           
   489                           ; 0 bytes @ 0x14
   490  000015                     	ds	2
   491  000017                     ??___fttol:
   492  000017                     sprintf@ap:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x16
   496  000017                     	ds	2
   497  000019                     sprintf@flag:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x18
   501  000019                     	ds	1
   502  00001A                     sprintf@prec:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x19
   506  00001A                     	ds	1
   507  00001B                     sprintf@_val:
   508                           	opt stack 0
   509                           
   510                           ; 5 bytes @ 0x1A
   511  00001B                     	ds	1
   512  00001C                     ___fttol@sign1:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x1B
   516  00001C                     	ds	1
   517  00001D                     ___fttol@lval:
   518                           	opt stack 0
   519                           
   520                           ; 4 bytes @ 0x1C
   521  00001D                     	ds	3
   522  000020                     sprintf@c:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x1F
   526  000020                     	ds	1
   527  000021                     ___fttol@exp1:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x20
   531  000021                     	ds	1
   532  000022                     ?___ftmul:
   533                           	opt stack 0
   534  000022                     ?_fabs:
   535                           	opt stack 0
   536  000022                     ?___awtoft:
   537                           	opt stack 0
   538  000022                     ___awtoft@c:
   539                           	opt stack 0
   540  000022                     fabs@d:
   541                           	opt stack 0
   542  000022                     ___ftmul@f1:
   543                           	opt stack 0
   544                           
   545                           ; 3 bytes @ 0x21
   546  000022                     	ds	3
   547  000025                     ??___awtoft:
   548  000025                     ___ftmul@f2:
   549                           	opt stack 0
   550                           
   551                           ; 3 bytes @ 0x24
   552  000025                     	ds	1
   553  000026                     ___awtoft@sign:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x25
   557  000026                     	ds	1
   558  000027                     ?___ftdiv:
   559                           	opt stack 0
   560  000027                     ___ftdiv@f1:
   561                           	opt stack 0
   562                           
   563                           ; 3 bytes @ 0x26
   564  000027                     	ds	1
   565  000028                     ??___ftmul:
   566                           
   567                           ; 0 bytes @ 0x27
   568  000028                     	ds	2
   569  00002A                     ___ftdiv@f2:
   570                           	opt stack 0
   571                           
   572                           ; 3 bytes @ 0x29
   573  00002A                     	ds	3
   574  00002D                     ??___ftdiv:
   575  00002D                     ___ftmul@exp:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x2C
   579  00002D                     	ds	1
   580  00002E                     ___ftmul@f3_as_product:
   581                           	opt stack 0
   582                           
   583                           ; 3 bytes @ 0x2D
   584  00002E                     	ds	3
   585  000031                     ___ftmul@cntr:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x30
   589  000031                     	ds	1
   590  000032                     ___ftdiv@cntr:
   591                           	opt stack 0
   592  000032                     ___ftmul@sign:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x31
   596  000032                     	ds	1
   597  000033                     ___ftdiv@f3:
   598                           	opt stack 0
   599                           
   600                           ; 3 bytes @ 0x32
   601  000033                     	ds	3
   602  000036                     ___ftdiv@exp:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x35
   606  000036                     	ds	1
   607  000037                     ___ftdiv@sign:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x36
   611  000037                     	ds	1
   612  000038                     ?___ftadd:
   613                           	opt stack 0
   614  000038                     ?___asftmul:
   615                           	opt stack 0
   616  000038                     ___asftmul@f1p:
   617                           	opt stack 0
   618  000038                     ___ftadd@f1:
   619                           	opt stack 0
   620                           
   621                           ; 3 bytes @ 0x37
   622  000038                     	ds	2
   623  00003A                     ___asftmul@f2:
   624                           	opt stack 0
   625                           
   626                           ; 3 bytes @ 0x39
   627  00003A                     	ds	1
   628  00003B                     ___ftadd@f2:
   629                           	opt stack 0
   630                           
   631                           ; 3 bytes @ 0x3A
   632  00003B                     	ds	2
   633  00003D                     
   634                           ; 0 bytes @ 0x3C
   635  00003D                     	ds	1
   636  00003E                     ??___ftadd:
   637                           
   638                           ; 0 bytes @ 0x3D
   639  00003E                     	ds	5
   640  000043                     ___ftadd@sign:
   641                           	opt stack 0
   642                           
   643                           ; 1 bytes @ 0x42
   644  000043                     	ds	1
   645  000044                     ___ftadd@exp2:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x43
   649  000044                     	ds	1
   650  000045                     ___ftadd@exp1:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x44
   654  000045                     	ds	1
   655  000046                     ?_eval_poly:
   656                           	opt stack 0
   657  000046                     eval_poly@x:
   658                           	opt stack 0
   659                           
   660                           ; 3 bytes @ 0x45
   661  000046                     	ds	3
   662  000049                     eval_poly@d:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x48
   666  000049                     	ds	2
   667  00004B                     eval_poly@n:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x4A
   671  00004B                     	ds	2
   672  00004D                     ??_eval_poly:
   673                           
   674                           ; 0 bytes @ 0x4C
   675  00004D                     	ds	5
   676  000052                     eval_poly@res:
   677                           	opt stack 0
   678                           
   679                           ; 3 bytes @ 0x51
   680  000052                     	ds	3
   681  000055                     ?_atan:
   682                           	opt stack 0
   683  000055                     atan@f:
   684                           	opt stack 0
   685                           
   686                           ; 3 bytes @ 0x54
   687  000055                     	ds	3
   688  000058                     ??_main:
   689                           
   690                           ; 0 bytes @ 0x57
   691  000058                     	ds	2
   692                           
   693 ;;
   694 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   695 ;;
   696 ;; *************** function _main *****************
   697 ;; Defined at:
   698 ;;		line 10 in file "IMU_Main.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;  ii              2   60[BANK0 ] unsigned int 
   703 ;;  buff           30   13[BANK0 ] unsigned char [30]
   704 ;;  mag             6   68[BANK0 ] int [3]
   705 ;;  accel           6   54[BANK0 ] int [3]
   706 ;;  gyro            6   48[BANK0 ] int [3]
   707 ;;  HDG             3   43[BANK0 ] unsigned char [3]
   708 ;;  hdg             2   74[BANK0 ] int 
   709 ;;  a               2   46[BANK0 ] int 
   710 ;; Return value:  Size  Location     Type
   711 ;;		None               void
   712 ;; Registers used:
   713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   720 ;;      Locals:         0      63       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   722 ;;      Totals:         2      63       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;Total ram usage:       65 bytes
   724 ;; Hardware stack levels required when called:    4
   725 ;; This function calls:
   726 ;;		_Tomcat_Setup
   727 ;;		_openLSM9
   728 ;;		_readLSM9_accel
   729 ;;		_readLSM9_gyro
   730 ;;		_readLSM9_mag
   731 ;;		_atan
   732 ;;		_sprintf
   733 ;;		_putrs1USART
   734 ;;		_Write1USART
   735 ;;		___ftadd
   736 ;;		___ftdiv
   737 ;;		___awdiv
   738 ;;		___awmod
   739 ;;		___awtoft
   740 ;;		___ftneg
   741 ;;		___fttol
   742 ;;		___wmul
   743 ;; This function is called by:
   744 ;;		Startup code after reset
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           	psect	text0
   749  001038                     __ptext0:
   750                           	opt stack 0
   751  001038                     _main:
   752                           	opt stack 26
   753                           
   754                           ;IMU_Main.c: 11: int a=0;
   755                           
   756                           ;incstack = 0
   757                           ;incstack = 0
   758  001038  0E00               	movlw	0
   759  00103A  0100               	movlb	0	; () banked
   760  00103C  0100               	movlb	0	; () banked
   761  00103E  6F8F               	movwf	(main@a+1)& (0+255),b
   762  001040  0E00               	movlw	0
   763  001042  0100               	movlb	0	; () banked
   764  001044  6F8E               	movwf	main@a& (0+255),b
   765                           
   766                           ;IMU_Main.c: 12: int accel[3];
   767                           ;IMU_Main.c: 13: int gyro[3];
   768                           ;IMU_Main.c: 14: int mag[3];
   769                           ;IMU_Main.c: 15: char buff[30];
   770                           ;IMU_Main.c: 16: int hdg = 0;
   771  001046  0E00               	movlw	0
   772  001048  0100               	movlb	0	; () banked
   773  00104A  0100               	movlb	0	; () banked
   774  00104C  6FAB               	movwf	(main@hdg+1)& (0+255),b
   775  00104E  0E00               	movlw	0
   776  001050  0100               	movlb	0	; () banked
   777  001052  6FAA               	movwf	main@hdg& (0+255),b
   778                           
   779                           ; BSR set to: 0
   780                           ;IMU_Main.c: 17: char HDG[3];
   781                           ;IMU_Main.c: 18: Tomcat_Setup();
   782  001054  EC78  F012         	call	_Tomcat_Setup	;wreg free
   783                           
   784                           ;IMU_Main.c: 20: a=openLSM9(0x1D,0x6B);
   785  001058  6E58               	movwf	??_main& (0+255),c
   786  00105A  0E1D               	movlw	29
   787  00105C  6E08               	movwf	?_openLSM9,c
   788  00105E  5058               	movf	??_main& (0+255),w,c
   789  001060  6E59               	movwf	(??_main+1)& (0+255),c
   790  001062  0E6B               	movlw	107
   791  001064  6E09               	movwf	?_openLSM9+1,c
   792  001066  5059               	movf	(??_main+1)& (0+255),w,c
   793  001068  EC31  F011         	call	_openLSM9	;wreg free
   794  00106C  C008  F08E         	movff	?_openLSM9,main@a
   795  001070  C009  F08F         	movff	?_openLSM9+1,main@a+1
   796  001074  F000               	nop		;# 
   797                           
   798                           ;IMU_Main.c: 22: readLSM9_accel(accel);
   799  001076  0100               	movlb	0	; () banked
   800  001078  0E00               	movlw	high main@accel
   801  00107A  6E09               	movwf	?_readLSM9_accel+1,c
   802  00107C  0100               	movlb	0	; () banked
   803  00107E  0E96               	movlw	low main@accel
   804  001080  6E08               	movwf	?_readLSM9_accel,c
   805  001082  EC3E  F00F         	call	_readLSM9_accel	;wreg free
   806  001086  F000               	nop		;# 
   807  001088                     l27:
   808  001088  F000               	nop		;# 
   809                           
   810                           ;IMU_Main.c: 27: readLSM9_accel(accel);
   811  00108A  0100               	movlb	0	; () banked
   812  00108C  0E00               	movlw	high main@accel
   813  00108E  6E09               	movwf	?_readLSM9_accel+1,c
   814  001090  0100               	movlb	0	; () banked
   815  001092  0E96               	movlw	low main@accel
   816  001094  6E08               	movwf	?_readLSM9_accel,c
   817  001096  EC3E  F00F         	call	_readLSM9_accel	;wreg free
   818                           
   819                           ;IMU_Main.c: 28: readLSM9_gyro(gyro);
   820  00109A  0100               	movlb	0	; () banked
   821  00109C  0E00               	movlw	high main@gyro
   822  00109E  6E09               	movwf	?_readLSM9_gyro+1,c
   823  0010A0  0100               	movlb	0	; () banked
   824  0010A2  0E90               	movlw	low main@gyro
   825  0010A4  6E08               	movwf	?_readLSM9_gyro,c
   826  0010A6  ECE2  F00E         	call	_readLSM9_gyro	;wreg free
   827                           
   828                           ;IMU_Main.c: 29: readLSM9_mag(mag);
   829  0010AA  0100               	movlb	0	; () banked
   830  0010AC  0E00               	movlw	high main@mag
   831  0010AE  6E09               	movwf	?_readLSM9_mag+1,c
   832  0010B0  0100               	movlb	0	; () banked
   833  0010B2  0EA4               	movlw	low main@mag
   834  0010B4  6E08               	movwf	?_readLSM9_mag,c
   835  0010B6  EC86  F00E         	call	_readLSM9_mag	;wreg free
   836                           
   837                           ;IMU_Main.c: 39: if (mag[0] < 0) {
   838  0010BA  0100               	movlb	0	; () banked
   839  0010BC  0100               	movlb	0	; () banked
   840  0010BE  AFA5               	btfss	(main@mag+1)& (0+255),7,b
   841  0010C0  D05B               	goto	l3312
   842                           
   843                           ; BSR set to: 0
   844                           ;IMU_Main.c: 40: hdg = 270 - atan((mag[1] / mag[0])*180 / 3.14159265358979323846);
   845  0010C2  0E10               	movlw	16
   846  0010C4  6E2A               	movwf	?___ftdiv+3,c
   847  0010C6  0E49               	movlw	73
   848  0010C8  6E2B               	movwf	?___ftdiv+4,c
   849  0010CA  0E40               	movlw	64
   850  0010CC  6E2C               	movwf	?___ftdiv+5,c
   851  0010CE  0E00               	movlw	0
   852  0010D0  6E0D               	movwf	?___wmul+3,c
   853  0010D2  0EB4               	movlw	180
   854  0010D4  6E0C               	movwf	?___wmul+2,c
   855  0010D6  C0A4  F003         	movff	main@mag,?___awdiv+2
   856  0010DA  C0A5  F004         	movff	main@mag+1,?___awdiv+3
   857  0010DE  C0A6  F001         	movff	main@mag+2,?___awdiv
   858  0010E2  C0A7  F002         	movff	main@mag+3,?___awdiv+1
   859  0010E6  EC9A  F00F         	call	___awdiv	;wreg free
   860  0010EA  C001  F00A         	movff	?___awdiv,?___wmul
   861  0010EE  C002  F00B         	movff	?___awdiv+1,?___wmul+1
   862  0010F2  EC5B  F012         	call	___wmul	;wreg free
   863  0010F6  C00A  F022         	movff	?___wmul,?___awtoft
   864  0010FA  C00B  F023         	movff	?___wmul+1,?___awtoft+1
   865  0010FE  ECFA  F011         	call	___awtoft	;wreg free
   866  001102  C024  F029         	movff	?___awtoft+2,?___ftdiv+2
   867  001106  C023  F028         	movff	?___awtoft+1,?___ftdiv+1
   868  00110A  C022  F027         	movff	?___awtoft,?___ftdiv
   869  00110E  ECAF  F00C         	call	___ftdiv	;wreg free
   870  001112  C029  F0A0         	movff	?___ftdiv+2,_main$2275+2
   871  001116  C028  F09F         	movff	?___ftdiv+1,_main$2275+1
   872  00111A  C027  F09E         	movff	?___ftdiv,_main$2275
   873                           
   874                           ;IMU_Main.c: 40: hdg = 270 - atan((mag[1] / mag[0])*180 / 3.14159265358979323846);
   875  00111E  C09E  F055         	movff	_main$2275,?_atan
   876  001122  C09F  F056         	movff	_main$2275+1,?_atan+1
   877  001126  C0A0  F057         	movff	_main$2275+2,?_atan+2
   878  00112A  EC96  F009         	call	_atan	;wreg free
   879  00112E  C057  F0A3         	movff	?_atan+2,_main$2276+2
   880  001132  C056  F0A2         	movff	?_atan+1,_main$2276+1
   881  001136  C055  F0A1         	movff	?_atan,_main$2276
   882                           
   883                           ;IMU_Main.c: 40: hdg = 270 - atan((mag[1] / mag[0])*180 / 3.14159265358979323846);
   884  00113A  0E00               	movlw	0
   885  00113C  6E3B               	movwf	?___ftadd+3,c
   886  00113E  0E87               	movlw	135
   887  001140  6E3C               	movwf	?___ftadd+4,c
   888  001142  0E43               	movlw	67
   889  001144  6E3D               	movwf	?___ftadd+5,c
   890  001146  C0A1  F010         	movff	_main$2276,?___ftneg
   891  00114A  C0A2  F011         	movff	_main$2276+1,?___ftneg+1
   892  00114E  C0A3  F012         	movff	_main$2276+2,?___ftneg+2
   893  001152  ECCE  F012         	call	___ftneg	;wreg free
   894  001156  C012  F03A         	movff	?___ftneg+2,?___ftadd+2
   895  00115A  C011  F039         	movff	?___ftneg+1,?___ftadd+1
   896  00115E  C010  F038         	movff	?___ftneg,?___ftadd
   897  001162  EC80  F00A         	call	___ftadd	;wreg free
   898  001166  C03A  F015         	movff	?___ftadd+2,?___fttol+2
   899  00116A  C039  F014         	movff	?___ftadd+1,?___fttol+1
   900  00116E  C038  F013         	movff	?___ftadd,?___fttol
   901  001172  EC34  F00D         	call	___fttol	;wreg free
   902  001176  D05A               	goto	L1
   903  001178                     l3312:
   904                           
   905                           ;IMU_Main.c: 42: hdg = 90 - atan((mag[1] / mag[0])*180 / 3.14159265358979323846);
   906  001178  0E10               	movlw	16
   907  00117A  6E2A               	movwf	?___ftdiv+3,c
   908  00117C  0E49               	movlw	73
   909  00117E  6E2B               	movwf	?___ftdiv+4,c
   910  001180  0E40               	movlw	64
   911  001182  6E2C               	movwf	?___ftdiv+5,c
   912  001184  0E00               	movlw	0
   913  001186  6E0D               	movwf	?___wmul+3,c
   914  001188  0EB4               	movlw	180
   915  00118A  6E0C               	movwf	?___wmul+2,c
   916  00118C  C0A4  F003         	movff	main@mag,?___awdiv+2
   917  001190  C0A5  F004         	movff	main@mag+1,?___awdiv+3
   918  001194  C0A6  F001         	movff	main@mag+2,?___awdiv
   919  001198  C0A7  F002         	movff	main@mag+3,?___awdiv+1
   920  00119C  EC9A  F00F         	call	___awdiv	;wreg free
   921  0011A0  C001  F00A         	movff	?___awdiv,?___wmul
   922  0011A4  C002  F00B         	movff	?___awdiv+1,?___wmul+1
   923  0011A8  EC5B  F012         	call	___wmul	;wreg free
   924  0011AC  C00A  F022         	movff	?___wmul,?___awtoft
   925  0011B0  C00B  F023         	movff	?___wmul+1,?___awtoft+1
   926  0011B4  ECFA  F011         	call	___awtoft	;wreg free
   927  0011B8  C024  F029         	movff	?___awtoft+2,?___ftdiv+2
   928  0011BC  C023  F028         	movff	?___awtoft+1,?___ftdiv+1
   929  0011C0  C022  F027         	movff	?___awtoft,?___ftdiv
   930  0011C4  ECAF  F00C         	call	___ftdiv	;wreg free
   931  0011C8  C029  F0A0         	movff	?___ftdiv+2,_main$2275+2
   932  0011CC  C028  F09F         	movff	?___ftdiv+1,_main$2275+1
   933  0011D0  C027  F09E         	movff	?___ftdiv,_main$2275
   934                           
   935                           ;IMU_Main.c: 42: hdg = 90 - atan((mag[1] / mag[0])*180 / 3.14159265358979323846);
   936  0011D4  C09E  F055         	movff	_main$2275,?_atan
   937  0011D8  C09F  F056         	movff	_main$2275+1,?_atan+1
   938  0011DC  C0A0  F057         	movff	_main$2275+2,?_atan+2
   939  0011E0  EC96  F009         	call	_atan	;wreg free
   940  0011E4  C057  F0A3         	movff	?_atan+2,_main$2276+2
   941  0011E8  C056  F0A2         	movff	?_atan+1,_main$2276+1
   942  0011EC  C055  F0A1         	movff	?_atan,_main$2276
   943                           
   944                           ;IMU_Main.c: 42: hdg = 90 - atan((mag[1] / mag[0])*180 / 3.14159265358979323846);
   945  0011F0  0E00               	movlw	0
   946  0011F2  6E3B               	movwf	?___ftadd+3,c
   947  0011F4  0EB4               	movlw	180
   948  0011F6  6E3C               	movwf	?___ftadd+4,c
   949  0011F8  0E42               	movlw	66
   950  0011FA  6E3D               	movwf	?___ftadd+5,c
   951  0011FC  C0A1  F010         	movff	_main$2276,?___ftneg
   952  001200  C0A2  F011         	movff	_main$2276+1,?___ftneg+1
   953  001204  C0A3  F012         	movff	_main$2276+2,?___ftneg+2
   954  001208  ECCE  F012         	call	___ftneg	;wreg free
   955  00120C  C012  F03A         	movff	?___ftneg+2,?___ftadd+2
   956  001210  C011  F039         	movff	?___ftneg+1,?___ftadd+1
   957  001214  C010  F038         	movff	?___ftneg,?___ftadd
   958  001218  EC80  F00A         	call	___ftadd	;wreg free
   959  00121C  C03A  F015         	movff	?___ftadd+2,?___fttol+2
   960  001220  C039  F014         	movff	?___ftadd+1,?___fttol+1
   961  001224  C038  F013         	movff	?___ftadd,?___fttol
   962  001228  EC34  F00D         	call	___fttol	;wreg free
   963  00122C                     L1:
   964  00122C  C013  F0AA         	movff	?___fttol,main@hdg
   965  001230  C014  F0AB         	movff	?___fttol+1,main@hdg+1
   966                           
   967                           ;IMU_Main.c: 43: }
   968                           ;IMU_Main.c: 45: unsigned int ii = 3;
   969  001234  0E00               	movlw	0
   970  001236  0100               	movlb	0	; () banked
   971  001238  0100               	movlb	0	; () banked
   972  00123A  6F9D               	movwf	(main@ii+1)& (0+255),b
   973  00123C  0E03               	movlw	3
   974  00123E  0100               	movlb	0	; () banked
   975  001240  6F9C               	movwf	main@ii& (0+255),b
   976                           
   977                           ;IMU_Main.c: 46: while (ii--) {
   978  001242  D026               	goto	l3324
   979  001244                     l3320:
   980                           
   981                           ; BSR set to: 0
   982                           ;IMU_Main.c: 47: HDG[ii] = hdg % 10;
   983  001244  0100               	movlb	0	; () banked
   984  001246  0E8B               	movlw	low main@HDG
   985  001248  0100               	movlb	0	; () banked
   986  00124A  0100               	movlb	0	; () banked
   987  00124C  259C               	addwf	main@ii& (0+255),w,b
   988  00124E  6ED9               	movwf	fsr2l,c
   989  001250  0100               	movlb	0	; () banked
   990  001252  0E00               	movlw	high main@HDG
   991  001254  0100               	movlb	0	; () banked
   992  001256  0100               	movlb	0	; () banked
   993  001258  219D               	addwfc	(main@ii+1)& (0+255),w,b
   994  00125A  6EDA               	movwf	fsr2h,c
   995  00125C  C0AA  F001         	movff	main@hdg,?___awmod
   996  001260  C0AB  F002         	movff	main@hdg+1,?___awmod+1
   997  001264  0E00               	movlw	0
   998  001266  6E04               	movwf	?___awmod+3,c
   999  001268  0E0A               	movlw	10
  1000  00126A  6E03               	movwf	?___awmod+2,c
  1001  00126C  EC2A  F010         	call	___awmod	;wreg free
  1002  001270  5001               	movf	?___awmod,w,c
  1003  001272  6EDF               	movwf	indf2,c
  1004                           
  1005                           ;IMU_Main.c: 48: hdg /= 10;
  1006  001274  C0AA  F001         	movff	main@hdg,?___awdiv
  1007  001278  C0AB  F002         	movff	main@hdg+1,?___awdiv+1
  1008  00127C  0E00               	movlw	0
  1009  00127E  6E04               	movwf	?___awdiv+3,c
  1010  001280  0E0A               	movlw	10
  1011  001282  6E03               	movwf	?___awdiv+2,c
  1012  001284  EC9A  F00F         	call	___awdiv	;wreg free
  1013  001288  C001  F0AA         	movff	?___awdiv,main@hdg
  1014  00128C  C002  F0AB         	movff	?___awdiv+1,main@hdg+1
  1015  001290                     l3324:
  1016  001290  0100               	movlb	0	; () banked
  1017  001292  0100               	movlb	0	; () banked
  1018  001294  079C               	decf	main@ii& (0+255),f,b
  1019  001296  A0D8               	btfss	status,0,c
  1020  001298  079D               	decf	(main@ii+1)& (0+255),f,b
  1021  00129A  0100               	movlb	0	; () banked
  1022  00129C  299C               	incf	main@ii& (0+255),w,b
  1023  00129E  B4D8               	btfsc	status,2,c
  1024  0012A0  299D               	incf	(main@ii+1)& (0+255),w,b
  1025  0012A2  A4D8               	btfss	status,2,c
  1026  0012A4  D7CF               	goto	l3320
  1027                           
  1028                           ; BSR set to: 0
  1029                           ;IMU_Main.c: 49: }
  1030                           ;IMU_Main.c: 51: sprintf(buff, "HDG:%d deg\n", hdg);
  1031                           
  1032                           ; BSR set to: 0
  1033  0012A6  0100               	movlb	0	; () banked
  1034  0012A8  0E00               	movlw	high main@buff
  1035  0012AA  6E10               	movwf	?_sprintf+1,c
  1036  0012AC  0100               	movlb	0	; () banked
  1037  0012AE  0E6D               	movlw	low main@buff
  1038  0012B0  6E0F               	movwf	?_sprintf,c
  1039  0012B2  0E10               	movlw	high STR_1
  1040  0012B4  6E12               	movwf	?_sprintf+3,c
  1041  0012B6  0E2B               	movlw	low STR_1
  1042  0012B8  6E11               	movwf	?_sprintf+2,c
  1043  0012BA  C0AA  F013         	movff	main@hdg,?_sprintf+4
  1044  0012BE  C0AB  F014         	movff	main@hdg+1,?_sprintf+5
  1045  0012C2  EC66  F00B         	call	_sprintf	;wreg free
  1046                           
  1047                           ;IMU_Main.c: 52: putrs1USART(buff);
  1048  0012C6  0100               	movlb	0	; () banked
  1049  0012C8  0E00               	movlw	high main@buff
  1050  0012CA  6E03               	movwf	?_putrs1USART+1,c
  1051  0012CC  0100               	movlb	0	; () banked
  1052  0012CE  0E6D               	movlw	low main@buff
  1053  0012D0  6E02               	movwf	?_putrs1USART,c
  1054  0012D2  EC94  F012         	call	_putrs1USART	;wreg free
  1055                           
  1056                           ;IMU_Main.c: 53: sprintf(buff,"\n");
  1057  0012D6  0100               	movlb	0	; () banked
  1058  0012D8  0E00               	movlw	high main@buff
  1059  0012DA  6E10               	movwf	?_sprintf+1,c
  1060  0012DC  0100               	movlb	0	; () banked
  1061  0012DE  0E6D               	movlw	low main@buff
  1062  0012E0  6E0F               	movwf	?_sprintf,c
  1063  0012E2  0E10               	movlw	high (STR_1+10)
  1064  0012E4  6E12               	movwf	?_sprintf+3,c
  1065  0012E6  0E35               	movlw	low (STR_1+10)
  1066  0012E8  6E11               	movwf	?_sprintf+2,c
  1067  0012EA  EC66  F00B         	call	_sprintf	;wreg free
  1068                           
  1069                           ;IMU_Main.c: 54: Write1USART(0x01);
  1070  0012EE  6E58               	movwf	??_main& (0+255),c
  1071  0012F0  0E01               	movlw	1
  1072  0012F2  6E01               	movwf	?_Write1USART,c
  1073  0012F4  5058               	movf	??_main& (0+255),w,c
  1074  0012F6  ECFB  F012         	call	_Write1USART	;wreg free
  1075                           
  1076                           ;IMU_Main.c: 56: _delay(100000);
  1077  0012FA  0E82               	movlw	130
  1078  0012FC  6E58               	movwf	??_main& (0+255),c
  1079  0012FE  0EDD               	movlw	221
  1080  001300                     u3057:
  1081  001300  2EE8               	decfsz	wreg,f,c
  1082  001302  D7FE               	goto	u3057
  1083  001304  2E58               	decfsz	??_main& (0+255),f,c
  1084  001306  D7FC               	goto	u3057
  1085  001308  D000               	nop2	
  1086                           
  1087                           ;IMU_Main.c: 57: _delay(100000);
  1088  00130A  0E82               	movlw	130
  1089  00130C  6E58               	movwf	??_main& (0+255),c
  1090  00130E  0EDD               	movlw	221
  1091  001310                     u3067:
  1092  001310  2EE8               	decfsz	wreg,f,c
  1093  001312  D7FE               	goto	u3067
  1094  001314  2E58               	decfsz	??_main& (0+255),f,c
  1095  001316  D7FC               	goto	u3067
  1096  001318  D000               	nop2	
  1097                           
  1098                           ;IMU_Main.c: 58: _delay(100000);
  1099  00131A  0E82               	movlw	130
  1100  00131C  6E58               	movwf	??_main& (0+255),c
  1101  00131E  0EDD               	movlw	221
  1102  001320                     u3077:
  1103  001320  2EE8               	decfsz	wreg,f,c
  1104  001322  D7FE               	goto	u3077
  1105  001324  2E58               	decfsz	??_main& (0+255),f,c
  1106  001326  D7FC               	goto	u3077
  1107  001328  D000               	nop2	
  1108  00132A  D6AE               	goto	l27
  1109  00132C                     __end_of_main:
  1110                           	opt stack 0
  1111                           wreg	equ	0xFE8
  1112                           indf2	equ	0xFDF
  1113                           fsr2h	equ	0xFDA
  1114                           fsr2l	equ	0xFD9
  1115                           status	equ	0xFD8
  1116                           
  1117 ;; *************** function ___fttol *****************
  1118 ;; Defined at:
  1119 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fttol.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  f1              3   18[COMRAM] float 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  lval            4   28[COMRAM] unsigned long 
  1124 ;;  exp1            1   32[COMRAM] unsigned char 
  1125 ;;  sign1           1   27[COMRAM] unsigned char 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  4   18[COMRAM] long 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1135 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1138 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1139 ;;Total ram usage:       15 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text1
  1149  001A68                     __ptext1:
  1150                           	opt stack 0
  1151  001A68                     ___fttol:
  1152                           	opt stack 29
  1153                           
  1154                           ;incstack = 0
  1155                           ;incstack = 0
  1156  001A68  0E0F               	movlw	15
  1157  001A6A  6E17               	movwf	??___fttol& (0+255),c
  1158  001A6C  C013  F018         	movff	___fttol@f1,??___fttol+1
  1159  001A70  C014  F019         	movff	___fttol@f1+1,??___fttol+2
  1160  001A74  C015  F01A         	movff	___fttol@f1+2,??___fttol+3
  1161  001A78  2817               	incf	??___fttol,w,c
  1162  001A7A  6E1B               	movwf	(??___fttol+4)& (0+255),c
  1163  001A7C  D004               	goto	u2680
  1164  001A7E                     u2685:
  1165  001A7E  90D8               	bcf	status,0,c
  1166  001A80  321A               	rrcf	??___fttol+3,f,c
  1167  001A82  3219               	rrcf	??___fttol+2,f,c
  1168  001A84  3218               	rrcf	??___fttol+1,f,c
  1169  001A86                     u2680:
  1170  001A86  2E1B               	decfsz	(??___fttol+4)& (0+255),f,c
  1171  001A88  D7FA               	goto	u2685
  1172  001A8A  5018               	movf	??___fttol+1,w,c
  1173  001A8C  6E21               	movwf	___fttol@exp1,c
  1174  001A8E  6621               	tstfsz	___fttol@exp1& (0+255),c
  1175  001A90  D009               	goto	l3142
  1176  001A92  0E00               	movlw	0
  1177  001A94  6E13               	movwf	?___fttol,c
  1178  001A96  0E00               	movlw	0
  1179  001A98  6E14               	movwf	?___fttol+1,c
  1180  001A9A  0E00               	movlw	0
  1181  001A9C  6E15               	movwf	?___fttol+2,c
  1182  001A9E  0E00               	movlw	0
  1183  001AA0  6E16               	movwf	?___fttol+3,c
  1184  001AA2  0012               	return	
  1185  001AA4                     l3142:
  1186  001AA4  0E17               	movlw	23
  1187  001AA6  6E17               	movwf	??___fttol& (0+255),c
  1188  001AA8  C013  F018         	movff	___fttol@f1,??___fttol+1
  1189  001AAC  C014  F019         	movff	___fttol@f1+1,??___fttol+2
  1190  001AB0  C015  F01A         	movff	___fttol@f1+2,??___fttol+3
  1191  001AB4  2817               	incf	??___fttol,w,c
  1192  001AB6  6E1B               	movwf	(??___fttol+4)& (0+255),c
  1193  001AB8  D004               	goto	u2700
  1194  001ABA                     u2705:
  1195  001ABA  90D8               	bcf	status,0,c
  1196  001ABC  321A               	rrcf	??___fttol+3,f,c
  1197  001ABE  3219               	rrcf	??___fttol+2,f,c
  1198  001AC0  3218               	rrcf	??___fttol+1,f,c
  1199  001AC2                     u2700:
  1200  001AC2  2E1B               	decfsz	(??___fttol+4)& (0+255),f,c
  1201  001AC4  D7FA               	goto	u2705
  1202  001AC6  5018               	movf	??___fttol+1,w,c
  1203  001AC8  6E1C               	movwf	___fttol@sign1,c
  1204  001ACA  8E14               	bsf	___fttol@f1+1,7,c
  1205  001ACC  0EFF               	movlw	255
  1206  001ACE  1613               	andwf	___fttol@f1,f,c
  1207  001AD0  0EFF               	movlw	255
  1208  001AD2  1614               	andwf	___fttol@f1+1,f,c
  1209  001AD4  0E00               	movlw	0
  1210  001AD6  1615               	andwf	___fttol@f1+2,f,c
  1211  001AD8  5013               	movf	___fttol@f1,w,c
  1212  001ADA  6E1D               	movwf	___fttol@lval,c
  1213  001ADC  5014               	movf	___fttol@f1+1,w,c
  1214  001ADE  6E1E               	movwf	___fttol@lval+1,c
  1215  001AE0  5015               	movf	___fttol@f1+2,w,c
  1216  001AE2  6E1F               	movwf	___fttol@lval+2,c
  1217  001AE4  6A20               	clrf	___fttol@lval+3,c
  1218  001AE6  0E8E               	movlw	142
  1219  001AE8  5E21               	subwf	___fttol@exp1,f,c
  1220  001AEA  AE21               	btfss	___fttol@exp1,7,c
  1221  001AEC  D016               	goto	l3164
  1222  001AEE  5021               	movf	___fttol@exp1,w,c
  1223  001AF0  0A80               	xorlw	128
  1224  001AF2  0F8F               	addlw	143
  1225  001AF4  B0D8               	btfsc	status,0,c
  1226  001AF6  D009               	goto	l3160
  1227  001AF8  0E00               	movlw	0
  1228  001AFA  6E13               	movwf	?___fttol,c
  1229  001AFC  0E00               	movlw	0
  1230  001AFE  6E14               	movwf	?___fttol+1,c
  1231  001B00  0E00               	movlw	0
  1232  001B02  6E15               	movwf	?___fttol+2,c
  1233  001B04  0E00               	movlw	0
  1234  001B06  6E16               	movwf	?___fttol+3,c
  1235  001B08  0012               	return	
  1236  001B0A                     l3160:
  1237  001B0A  90D8               	bcf	status,0,c
  1238  001B0C  3220               	rrcf	___fttol@lval+3,f,c
  1239  001B0E  321F               	rrcf	___fttol@lval+2,f,c
  1240  001B10  321E               	rrcf	___fttol@lval+1,f,c
  1241  001B12  321D               	rrcf	___fttol@lval,f,c
  1242  001B14  3E21               	incfsz	___fttol@exp1,f,c
  1243  001B16  D7F9               	goto	l3160
  1244  001B18  D014               	goto	l3174
  1245  001B1A                     l3164:
  1246  001B1A  0E17               	movlw	23
  1247  001B1C  6421               	cpfsgt	___fttol@exp1,c
  1248  001B1E  D00F               	goto	l3172
  1249  001B20  0E00               	movlw	0
  1250  001B22  6E13               	movwf	?___fttol,c
  1251  001B24  0E00               	movlw	0
  1252  001B26  6E14               	movwf	?___fttol+1,c
  1253  001B28  0E00               	movlw	0
  1254  001B2A  6E15               	movwf	?___fttol+2,c
  1255  001B2C  0E00               	movlw	0
  1256  001B2E  6E16               	movwf	?___fttol+3,c
  1257  001B30  0012               	return	
  1258  001B32                     l3170:
  1259  001B32  90D8               	bcf	status,0,c
  1260  001B34  361D               	rlcf	___fttol@lval,f,c
  1261  001B36  361E               	rlcf	___fttol@lval+1,f,c
  1262  001B38  361F               	rlcf	___fttol@lval+2,f,c
  1263  001B3A  3620               	rlcf	___fttol@lval+3,f,c
  1264  001B3C  0621               	decf	___fttol@exp1,f,c
  1265  001B3E                     l3172:
  1266  001B3E  6621               	tstfsz	___fttol@exp1,c
  1267  001B40  D7F8               	goto	l3170
  1268  001B42                     l3174:
  1269  001B42  501C               	movf	___fttol@sign1,w,c
  1270  001B44  B4D8               	btfsc	status,2,c
  1271  001B46  D008               	goto	l3178
  1272  001B48  1E20               	comf	___fttol@lval+3,f,c
  1273  001B4A  1E1F               	comf	___fttol@lval+2,f,c
  1274  001B4C  1E1E               	comf	___fttol@lval+1,f,c
  1275  001B4E  6C1D               	negf	___fttol@lval,c
  1276  001B50  0E00               	movlw	0
  1277  001B52  221E               	addwfc	___fttol@lval+1,f,c
  1278  001B54  221F               	addwfc	___fttol@lval+2,f,c
  1279  001B56  2220               	addwfc	___fttol@lval+3,f,c
  1280  001B58                     l3178:
  1281  001B58  C01D  F013         	movff	___fttol@lval,?___fttol
  1282  001B5C  C01E  F014         	movff	___fttol@lval+1,?___fttol+1
  1283  001B60  C01F  F015         	movff	___fttol@lval+2,?___fttol+2
  1284  001B64  C020  F016         	movff	___fttol@lval+3,?___fttol+3
  1285  001B68  0012               	return	
  1286  001B6A                     __end_of___fttol:
  1287                           	opt stack 0
  1288                           wreg	equ	0xFE8
  1289                           indf2	equ	0xFDF
  1290                           fsr2h	equ	0xFDA
  1291                           fsr2l	equ	0xFD9
  1292                           status	equ	0xFD8
  1293                           
  1294 ;; *************** function ___awtoft *****************
  1295 ;; Defined at:
  1296 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\awtoft.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  c               2   33[COMRAM] int 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  sign            1   37[COMRAM] unsigned char 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  3   33[COMRAM] float 
  1303 ;; Registers used:
  1304 ;;		wreg, status,2, status,0, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1310 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;Total ram usage:        5 bytes
  1315 ;; Hardware stack levels used:    1
  1316 ;; Hardware stack levels required when called:    1
  1317 ;; This function calls:
  1318 ;;		___ftpack
  1319 ;; This function is called by:
  1320 ;;		_main
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text2
  1325  0023F4                     __ptext2:
  1326                           	opt stack 0
  1327  0023F4                     ___awtoft:
  1328                           	opt stack 28
  1329                           
  1330                           ;incstack = 0
  1331                           ;incstack = 0
  1332  0023F4  6E25               	movwf	??___awtoft& (0+255),c
  1333  0023F6  0E00               	movlw	0
  1334  0023F8  6E26               	movwf	___awtoft@sign,c
  1335  0023FA  5025               	movf	??___awtoft& (0+255),w,c
  1336  0023FC  AE23               	btfss	___awtoft@c+1,7,c
  1337  0023FE  D008               	goto	l3132
  1338  002400  6C22               	negf	___awtoft@c,c
  1339  002402  1E23               	comf	___awtoft@c+1,f,c
  1340  002404  B0D8               	btfsc	status,0,c
  1341  002406  2A23               	incf	___awtoft@c+1,f,c
  1342  002408  6E25               	movwf	??___awtoft& (0+255),c
  1343  00240A  0E01               	movlw	1
  1344  00240C  6E26               	movwf	___awtoft@sign,c
  1345  00240E  5025               	movf	??___awtoft& (0+255),w,c
  1346  002410                     l3132:
  1347  002410  C022  F001         	movff	___awtoft@c,?___ftpack
  1348  002414  C023  F002         	movff	___awtoft@c+1,?___ftpack+1
  1349  002418  6A03               	clrf	?___ftpack+2,c
  1350  00241A  6E25               	movwf	??___awtoft& (0+255),c
  1351  00241C  0E8E               	movlw	142
  1352  00241E  6E04               	movwf	?___ftpack+3,c
  1353  002420  5025               	movf	??___awtoft& (0+255),w,c
  1354  002422  C026  F005         	movff	___awtoft@sign,?___ftpack+4
  1355  002426  EC2A  F00E         	call	___ftpack	;wreg free
  1356  00242A  C003  F024         	movff	?___ftpack+2,?___awtoft+2
  1357  00242E  C002  F023         	movff	?___ftpack+1,?___awtoft+1
  1358  002432  C001  F022         	movff	?___ftpack,?___awtoft
  1359  002436  0012               	return	
  1360  002438                     __end_of___awtoft:
  1361                           	opt stack 0
  1362                           wreg	equ	0xFE8
  1363                           indf2	equ	0xFDF
  1364                           fsr2h	equ	0xFDA
  1365                           fsr2l	equ	0xFD9
  1366                           status	equ	0xFD8
  1367                           
  1368 ;; *************** function ___awmod *****************
  1369 ;; Defined at:
  1370 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\awmod.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  dividend        2    0[COMRAM] int 
  1373 ;;  divisor         2    2[COMRAM] int 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  sign            1    6[COMRAM] unsigned char 
  1376 ;;  counter         1    5[COMRAM] unsigned char 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  2    0[COMRAM] int 
  1379 ;; Registers used:
  1380 ;;		wreg, status,2, status,0
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1386 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;Total ram usage:        7 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text3
  1400  002054                     __ptext3:
  1401                           	opt stack 0
  1402  002054                     ___awmod:
  1403                           	opt stack 29
  1404                           
  1405                           ;incstack = 0
  1406                           ;incstack = 0
  1407  002054  6E05               	movwf	??___awmod& (0+255),c
  1408  002056  0E00               	movlw	0
  1409  002058  6E07               	movwf	___awmod@sign,c
  1410  00205A  5005               	movf	??___awmod& (0+255),w,c
  1411  00205C  AE02               	btfss	___awmod@dividend+1,7,c
  1412  00205E  D008               	goto	l2786
  1413  002060  6C01               	negf	___awmod@dividend,c
  1414  002062  1E02               	comf	___awmod@dividend+1,f,c
  1415  002064  B0D8               	btfsc	status,0,c
  1416  002066  2A02               	incf	___awmod@dividend+1,f,c
  1417  002068  6E05               	movwf	??___awmod& (0+255),c
  1418  00206A  0E01               	movlw	1
  1419  00206C  6E07               	movwf	___awmod@sign,c
  1420  00206E  5005               	movf	??___awmod& (0+255),w,c
  1421  002070                     l2786:
  1422  002070  AE04               	btfss	___awmod@divisor+1,7,c
  1423  002072  D004               	goto	l2790
  1424  002074  6C03               	negf	___awmod@divisor,c
  1425  002076  1E04               	comf	___awmod@divisor+1,f,c
  1426  002078  B0D8               	btfsc	status,0,c
  1427  00207A  2A04               	incf	___awmod@divisor+1,f,c
  1428  00207C                     l2790:
  1429  00207C  5004               	movf	___awmod@divisor+1,w,c
  1430  00207E  1003               	iorwf	___awmod@divisor,w,c
  1431  002080  B4D8               	btfsc	status,2,c
  1432  002082  D01A               	goto	l2806
  1433  002084  6E05               	movwf	??___awmod& (0+255),c
  1434  002086  0E01               	movlw	1
  1435  002088  6E06               	movwf	___awmod@counter,c
  1436  00208A  5005               	movf	??___awmod& (0+255),w,c
  1437  00208C  D004               	goto	l2796
  1438  00208E                     l2794:
  1439  00208E  90D8               	bcf	status,0,c
  1440  002090  3603               	rlcf	___awmod@divisor,f,c
  1441  002092  3604               	rlcf	___awmod@divisor+1,f,c
  1442  002094  2A06               	incf	___awmod@counter,f,c
  1443  002096                     l2796:
  1444  002096  AE04               	btfss	___awmod@divisor+1,7,c
  1445  002098  D7FA               	goto	l2794
  1446  00209A                     l2798:
  1447  00209A  5003               	movf	___awmod@divisor,w,c
  1448  00209C  5C01               	subwf	___awmod@dividend,w,c
  1449  00209E  5004               	movf	___awmod@divisor+1,w,c
  1450  0020A0  5802               	subwfb	___awmod@dividend+1,w,c
  1451  0020A2  A0D8               	btfss	status,0,c
  1452  0020A4  D004               	goto	l2802
  1453  0020A6  5003               	movf	___awmod@divisor,w,c
  1454  0020A8  5E01               	subwf	___awmod@dividend,f,c
  1455  0020AA  5004               	movf	___awmod@divisor+1,w,c
  1456  0020AC  5A02               	subwfb	___awmod@dividend+1,f,c
  1457  0020AE                     l2802:
  1458  0020AE  90D8               	bcf	status,0,c
  1459  0020B0  3204               	rrcf	___awmod@divisor+1,f,c
  1460  0020B2  3203               	rrcf	___awmod@divisor,f,c
  1461  0020B4  2E06               	decfsz	___awmod@counter,f,c
  1462  0020B6  D7F1               	goto	l2798
  1463  0020B8                     l2806:
  1464  0020B8  5007               	movf	___awmod@sign,w,c
  1465  0020BA  B4D8               	btfsc	status,2,c
  1466  0020BC  D004               	goto	l2810
  1467  0020BE  6C01               	negf	___awmod@dividend,c
  1468  0020C0  1E02               	comf	___awmod@dividend+1,f,c
  1469  0020C2  B0D8               	btfsc	status,0,c
  1470  0020C4  2A02               	incf	___awmod@dividend+1,f,c
  1471  0020C6                     l2810:
  1472  0020C6  C001  F001         	movff	___awmod@dividend,?___awmod
  1473  0020CA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1474  0020CE  0012               	return	
  1475  0020D0                     __end_of___awmod:
  1476                           	opt stack 0
  1477                           wreg	equ	0xFE8
  1478                           indf2	equ	0xFDF
  1479                           fsr2h	equ	0xFDA
  1480                           fsr2l	equ	0xFD9
  1481                           status	equ	0xFD8
  1482                           
  1483 ;; *************** function ___awdiv *****************
  1484 ;; Defined at:
  1485 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\awdiv.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  dividend        2    0[COMRAM] int 
  1488 ;;  divisor         2    2[COMRAM] int 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  quotient        2    7[COMRAM] int 
  1491 ;;  sign            1    6[COMRAM] unsigned char 
  1492 ;;  counter         1    5[COMRAM] unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  2    0[COMRAM] int 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;Total ram usage:        9 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;;		_Thruster_Driver
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text4
  1517  001F34                     __ptext4:
  1518                           	opt stack 0
  1519  001F34                     ___awdiv:
  1520                           	opt stack 29
  1521                           
  1522                           ;incstack = 0
  1523                           ;incstack = 0
  1524  001F34  6E05               	movwf	??___awdiv& (0+255),c
  1525  001F36  0E00               	movlw	0
  1526  001F38  6E07               	movwf	___awdiv@sign,c
  1527  001F3A  5005               	movf	??___awdiv& (0+255),w,c
  1528  001F3C  AE04               	btfss	___awdiv@divisor+1,7,c
  1529  001F3E  D008               	goto	l2742
  1530  001F40  6C03               	negf	___awdiv@divisor,c
  1531  001F42  1E04               	comf	___awdiv@divisor+1,f,c
  1532  001F44  B0D8               	btfsc	status,0,c
  1533  001F46  2A04               	incf	___awdiv@divisor+1,f,c
  1534  001F48  6E05               	movwf	??___awdiv& (0+255),c
  1535  001F4A  0E01               	movlw	1
  1536  001F4C  6E07               	movwf	___awdiv@sign,c
  1537  001F4E  5005               	movf	??___awdiv& (0+255),w,c
  1538  001F50                     l2742:
  1539  001F50  AE02               	btfss	___awdiv@dividend+1,7,c
  1540  001F52  D006               	goto	l2748
  1541  001F54  6C01               	negf	___awdiv@dividend,c
  1542  001F56  1E02               	comf	___awdiv@dividend+1,f,c
  1543  001F58  B0D8               	btfsc	status,0,c
  1544  001F5A  2A02               	incf	___awdiv@dividend+1,f,c
  1545  001F5C  0E01               	movlw	1
  1546  001F5E  1A07               	xorwf	___awdiv@sign,f,c
  1547  001F60                     l2748:
  1548  001F60  0E00               	movlw	0
  1549  001F62  6E09               	movwf	___awdiv@quotient+1,c
  1550  001F64  0E00               	movlw	0
  1551  001F66  6E08               	movwf	___awdiv@quotient,c
  1552  001F68  5004               	movf	___awdiv@divisor+1,w,c
  1553  001F6A  1003               	iorwf	___awdiv@divisor,w,c
  1554  001F6C  B4D8               	btfsc	status,2,c
  1555  001F6E  D01E               	goto	l2770
  1556  001F70  6E05               	movwf	??___awdiv& (0+255),c
  1557  001F72  0E01               	movlw	1
  1558  001F74  6E06               	movwf	___awdiv@counter,c
  1559  001F76  5005               	movf	??___awdiv& (0+255),w,c
  1560  001F78  D004               	goto	l2756
  1561  001F7A                     l2754:
  1562  001F7A  90D8               	bcf	status,0,c
  1563  001F7C  3603               	rlcf	___awdiv@divisor,f,c
  1564  001F7E  3604               	rlcf	___awdiv@divisor+1,f,c
  1565  001F80  2A06               	incf	___awdiv@counter,f,c
  1566  001F82                     l2756:
  1567  001F82  AE04               	btfss	___awdiv@divisor+1,7,c
  1568  001F84  D7FA               	goto	l2754
  1569  001F86                     l2758:
  1570  001F86  90D8               	bcf	status,0,c
  1571  001F88  3608               	rlcf	___awdiv@quotient,f,c
  1572  001F8A  3609               	rlcf	___awdiv@quotient+1,f,c
  1573  001F8C  5003               	movf	___awdiv@divisor,w,c
  1574  001F8E  5C01               	subwf	___awdiv@dividend,w,c
  1575  001F90  5004               	movf	___awdiv@divisor+1,w,c
  1576  001F92  5802               	subwfb	___awdiv@dividend+1,w,c
  1577  001F94  A0D8               	btfss	status,0,c
  1578  001F96  D005               	goto	l2766
  1579  001F98  5003               	movf	___awdiv@divisor,w,c
  1580  001F9A  5E01               	subwf	___awdiv@dividend,f,c
  1581  001F9C  5004               	movf	___awdiv@divisor+1,w,c
  1582  001F9E  5A02               	subwfb	___awdiv@dividend+1,f,c
  1583  001FA0  8008               	bsf	___awdiv@quotient,0,c
  1584  001FA2                     l2766:
  1585  001FA2  90D8               	bcf	status,0,c
  1586  001FA4  3204               	rrcf	___awdiv@divisor+1,f,c
  1587  001FA6  3203               	rrcf	___awdiv@divisor,f,c
  1588  001FA8  2E06               	decfsz	___awdiv@counter,f,c
  1589  001FAA  D7ED               	goto	l2758
  1590  001FAC                     l2770:
  1591  001FAC  5007               	movf	___awdiv@sign,w,c
  1592  001FAE  B4D8               	btfsc	status,2,c
  1593  001FB0  D004               	goto	l2774
  1594  001FB2  6C08               	negf	___awdiv@quotient,c
  1595  001FB4  1E09               	comf	___awdiv@quotient+1,f,c
  1596  001FB6  B0D8               	btfsc	status,0,c
  1597  001FB8  2A09               	incf	___awdiv@quotient+1,f,c
  1598  001FBA                     l2774:
  1599  001FBA  C008  F001         	movff	___awdiv@quotient,?___awdiv
  1600  001FBE  C009  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1601  001FC2  0012               	return	
  1602  001FC4                     __end_of___awdiv:
  1603                           	opt stack 0
  1604                           wreg	equ	0xFE8
  1605                           indf2	equ	0xFDF
  1606                           fsr2h	equ	0xFDA
  1607                           fsr2l	equ	0xFD9
  1608                           status	equ	0xFD8
  1609                           
  1610 ;; *************** function _putrs1USART *****************
  1611 ;; Defined at:
  1612 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\u1putrs.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  data            2    1[COMRAM] PTR const unsigned char 
  1615 ;;		 -> main@buff(30), 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;		None               void
  1620 ;; Registers used:
  1621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;Total ram usage:        2 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    1
  1634 ;; This function calls:
  1635 ;;		_Write1USART
  1636 ;; This function is called by:
  1637 ;;		_main
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text5
  1642  002528                     __ptext5:
  1643                           	opt stack 0
  1644  002528                     _putrs1USART:
  1645                           	opt stack 28
  1646  002528                     l331:
  1647  002528  A2AC               	btfss	4012,1,c	;volatile
  1648  00252A  D7FE               	goto	l331
  1649  00252C  C002  FFD9         	movff	putrs1USART@data,fsr2l
  1650  002530  C003  FFDA         	movff	putrs1USART@data+1,fsr2h
  1651  002534  50DF               	movf	indf2,w,c
  1652  002536  6E01               	movwf	?_Write1USART,c
  1653  002538  ECFB  F012         	call	_Write1USART	;wreg free
  1654  00253C  C002  FFD9         	movff	putrs1USART@data,fsr2l
  1655  002540  C003  FFDA         	movff	putrs1USART@data+1,fsr2h
  1656  002544  4A02               	infsnz	putrs1USART@data,f,c
  1657  002546  2A03               	incf	putrs1USART@data+1,f,c
  1658  002548  50DF               	movf	indf2,w,c
  1659  00254A  B4D8               	btfsc	status,2,c
  1660  00254C  0012               	return	
  1661  00254E  D7EC               	goto	l331
  1662  002550                     __end_of_putrs1USART:
  1663                           	opt stack 0
  1664                           wreg	equ	0xFE8
  1665                           indf2	equ	0xFDF
  1666                           fsr2h	equ	0xFDA
  1667                           fsr2l	equ	0xFD9
  1668                           status	equ	0xFD8
  1669                           
  1670 ;; *************** function _Write1USART *****************
  1671 ;; Defined at:
  1672 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\u1write.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  data            1    0[COMRAM] unsigned char 
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;		None
  1677 ;; Return value:  Size  Location     Type
  1678 ;;		None               void
  1679 ;; Registers used:
  1680 ;;		None
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1686 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;Total ram usage:        1 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_main
  1696 ;;		_putrs1USART
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text6
  1701  0025F6                     __ptext6:
  1702                           	opt stack 0
  1703  0025F6                     _Write1USART:
  1704                           	opt stack 29
  1705                           
  1706                           ;incstack = 0
  1707                           ;incstack = 0
  1708  0025F6  ACAC               	btfss	4012,6,c	;volatile
  1709  0025F8  D003               	goto	l344
  1710  0025FA  90AC               	bcf	4012,0,c	;volatile
  1711  0025FC  B25A               	btfsc	_USART1_Status,1,c
  1712  0025FE  80AC               	bsf	4012,0,c	;volatile
  1713  002600                     l344:
  1714  002600  C001  FFAD         	movff	Write1USART@data,4013	;volatile
  1715  002604  0012               	return	
  1716  002606                     __end_of_Write1USART:
  1717                           	opt stack 0
  1718                           wreg	equ	0xFE8
  1719                           indf2	equ	0xFDF
  1720                           fsr2h	equ	0xFDA
  1721                           fsr2l	equ	0xFD9
  1722                           status	equ	0xFD8
  1723                           
  1724 ;; *************** function _sprintf *****************
  1725 ;; Defined at:
  1726 ;;		line 493 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\doprnt.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  sp              2   14[COMRAM] PTR unsigned char 
  1729 ;;		 -> main@buff(30), 
  1730 ;;  f               2   16[COMRAM] PTR const unsigned char 
  1731 ;;		 -> STR_2(2), STR_1(12), 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  _val            5   26[COMRAM] struct .
  1734 ;;  ap              2   22[COMRAM] PTR void [1]
  1735 ;;		 -> ?_sprintf(2), 
  1736 ;;  c               1   31[COMRAM] char 
  1737 ;;  prec            1   25[COMRAM] char 
  1738 ;;  flag            1   24[COMRAM] unsigned char 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  2   14[COMRAM] int 
  1741 ;; Registers used:
  1742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1748 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1749 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1751 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1752 ;;Total ram usage:       18 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    1
  1755 ;; This function calls:
  1756 ;;		___lwdiv
  1757 ;;		___lwmod
  1758 ;; This function is called by:
  1759 ;;		_main
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text7
  1764  0016CC                     __ptext7:
  1765                           	opt stack 0
  1766  0016CC                     _sprintf:
  1767                           	opt stack 28
  1768                           
  1769                           ;doprnt.c: 494: va_list ap;
  1770                           ;doprnt.c: 499: signed char c;
  1771                           ;doprnt.c: 506: signed char prec;
  1772                           ;doprnt.c: 508: unsigned char flag;
  1773                           ;doprnt.c: 527: union {
  1774                           ;doprnt.c: 528: unsigned int _val;
  1775                           ;doprnt.c: 529: struct {
  1776                           ;doprnt.c: 530: const char * _cp;
  1777                           ;doprnt.c: 531: unsigned _len;
  1778                           ;doprnt.c: 532: } _str;
  1779                           ;doprnt.c: 533: } _val;
  1780                           ;doprnt.c: 542: *ap = __va_start();
  1781                           
  1782                           ;incstack = 0
  1783                           ;incstack = 0
  1784  0016CC  0E00               	movlw	high (?_sprintf+4)
  1785  0016CE  6E18               	movwf	sprintf@ap+1,c
  1786  0016D0  0E13               	movlw	low (?_sprintf+4)
  1787  0016D2  6E17               	movwf	sprintf@ap,c
  1788                           
  1789                           ;doprnt.c: 545: while(c = *f++) {
  1790  0016D4  D09E               	goto	l3024
  1791  0016D6                     l2972:
  1792                           
  1793                           ;doprnt.c: 547: if(c != '%')
  1794  0016D6  5020               	movf	sprintf@c,w,c
  1795  0016D8  0A25               	xorlw	37
  1796  0016DA  B4D8               	btfsc	status,2,c
  1797  0016DC  D009               	goto	l2978
  1798                           
  1799                           ;doprnt.c: 549: {
  1800                           ;doprnt.c: 550: ((*sp++ = (c)));
  1801  0016DE  C00F  FFD9         	movff	sprintf@sp,fsr2l
  1802  0016E2  C010  FFDA         	movff	sprintf@sp+1,fsr2h
  1803  0016E6  C020  FFDF         	movff	sprintf@c,indf2
  1804  0016EA  4A0F               	infsnz	sprintf@sp,f,c
  1805  0016EC  2A10               	incf	sprintf@sp+1,f,c
  1806                           
  1807                           ;doprnt.c: 551: continue;
  1808  0016EE  D091               	goto	l3024
  1809  0016F0                     l2978:
  1810                           
  1811                           ;doprnt.c: 552: }
  1812                           ;doprnt.c: 557: flag = 0;
  1813  0016F0  6E15               	movwf	??_sprintf& (0+255),c
  1814  0016F2  0E00               	movlw	0
  1815  0016F4  6E19               	movwf	sprintf@flag,c
  1816  0016F6  5015               	movf	??_sprintf& (0+255),w,c
  1817                           
  1818                           ;doprnt.c: 831: }
  1819                           
  1820                           ;doprnt.c: 822: continue;
  1821                           
  1822                           ;doprnt.c: 811: default:
  1823                           
  1824                           ;doprnt.c: 707: case 'i':
  1825                           ;doprnt.c: 708: break;
  1826                           
  1827                           ;doprnt.c: 706: case 'd':
  1828                           
  1829                           ;doprnt.c: 647: goto alldone;
  1830                           
  1831                           ;doprnt.c: 646: case 0:
  1832                           
  1833                           ;doprnt.c: 644: switch(c = *f++) {
  1834  0016F8  5011               	movf	sprintf@f,w,c
  1835  0016FA  6E15               	movwf	??_sprintf& (0+255),c
  1836  0016FC  5012               	movf	sprintf@f+1,w,c
  1837  0016FE  6E16               	movwf	(??_sprintf+1)& (0+255),c
  1838  001700  4A11               	infsnz	sprintf@f,f,c
  1839  001702  2A12               	incf	sprintf@f+1,f,c
  1840  001704  C015  FFF6         	movff	??_sprintf,tblptrl
  1841  001708  C016  FFF7         	movff	??_sprintf+1,tblptrh
  1842  00170C  0E00               	movlw	low (__mediumconst shr (0+16))
  1843  00170E  6EF8               	movwf	tblptru,c
  1844  001710  0008               	tblrd		*
  1845  001712  CFF5 F020          	movff	tablat,sprintf@c
  1846  001716  5020               	movf	sprintf@c& (0+255),w,c
  1847                           
  1848                           ; Switch size 1, requested type "space"
  1849                           ; Number of cases is 3, Range of values is 0 to 105
  1850                           ; switch strategies available:
  1851                           ; Name         Instructions Cycles
  1852                           ; simple_byte           10     6 (average)
  1853                           ;	Chosen strategy is simple_byte
  1854  001718  0A00               	xorlw	0	; case 0
  1855  00171A  B4D8               	btfsc	status,2,c
  1856  00171C  D08B               	goto	l3026
  1857  00171E  0A64               	xorlw	100	; case 100
  1858  001720  B4D8               	btfsc	status,2,c
  1859  001722  D003               	goto	l2984
  1860  001724  0A0D               	xorlw	13	; case 105
  1861  001726  A4D8               	btfss	status,2,c
  1862  001728  D074               	goto	l3024
  1863  00172A                     l2984:
  1864                           
  1865                           ;doprnt.c: 1260: {
  1866                           ;doprnt.c: 1266: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1867  00172A  C017  FFD9         	movff	sprintf@ap,fsr2l
  1868  00172E  C018  FFDA         	movff	sprintf@ap+1,fsr2h
  1869  001732  CFDE F01B          	movff	postinc2,sprintf@_val
  1870  001736  CFDD F01C          	movff	postdec2,sprintf@_val+1
  1871  00173A  0E02               	movlw	2
  1872  00173C  2617               	addwf	sprintf@ap,f,c
  1873  00173E  0E00               	movlw	0
  1874  001740  2218               	addwfc	sprintf@ap+1,f,c
  1875                           
  1876                           ;doprnt.c: 1268: if((int)_val._val < 0) {
  1877  001742  AE1C               	btfss	sprintf@_val+1,7,c
  1878  001744  D006               	goto	l2994
  1879                           
  1880                           ;doprnt.c: 1269: flag |= 0x03;
  1881  001746  0E03               	movlw	3
  1882  001748  1219               	iorwf	sprintf@flag,f,c
  1883                           
  1884                           ;doprnt.c: 1270: _val._val = -_val._val;
  1885  00174A  6C1B               	negf	sprintf@_val,c
  1886  00174C  1E1C               	comf	sprintf@_val+1,f,c
  1887  00174E  B0D8               	btfsc	status,0,c
  1888  001750  2A1C               	incf	sprintf@_val+1,f,c
  1889  001752                     l2994:
  1890                           
  1891                           ;doprnt.c: 1271: }
  1892                           ;doprnt.c: 1273: }
  1893                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1894  001752  6E15               	movwf	??_sprintf& (0+255),c
  1895  001754  0E01               	movlw	1
  1896  001756  6E20               	movwf	sprintf@c,c
  1897  001758  5015               	movf	??_sprintf& (0+255),w,c
  1898  00175A  5020               	movf	sprintf@c,w,c
  1899  00175C  0A05               	xorlw	5
  1900  00175E  B4D8               	btfsc	status,2,c
  1901  001760  D019               	goto	l3008
  1902                           
  1903                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
  1904  001762  5020               	movf	sprintf@c,w,c
  1905  001764  0D02               	mullw	2
  1906  001766  0E00               	movlw	low _dpowers
  1907  001768  24F3               	addwf	prodl,w,c
  1908  00176A  6EF6               	movwf	tblptrl,c
  1909  00176C  0E10               	movlw	high _dpowers
  1910  00176E  20F4               	addwfc	prodh,w,c
  1911  001770  6EF7               	movwf	tblptrh,c
  1912  001772  6AF8               	clrf	tblptru,c
  1913  001774  0E00               	movlw	low (__mediumconst shr (0+16))
  1914  001776  22F8               	addwfc	tblptru,f,c
  1915  001778  0009               	tblrd		*+
  1916  00177A  CFF5 F015          	movff	tablat,??_sprintf
  1917  00177E  0009               	tblrd		*+
  1918  001780  CFF5 F016          	movff	tablat,??_sprintf+1
  1919  001784  5015               	movf	??_sprintf,w,c
  1920  001786  5C1B               	subwf	sprintf@_val,w,c
  1921  001788  5016               	movf	??_sprintf+1,w,c
  1922  00178A  581C               	subwfb	sprintf@_val+1,w,c
  1923  00178C  A0D8               	btfss	status,0,c
  1924  00178E  D002               	goto	l3008
  1925                           
  1926                           ;doprnt.c: 1314: break;
  1927  001790  2A20               	incf	sprintf@c,f,c
  1928  001792  D7E3               	goto	L2
  1929  001794                     l3008:
  1930                           
  1931                           ;doprnt.c: 1429: {
  1932                           ;doprnt.c: 1445: if(flag & 0x03)
  1933  001794  5019               	movf	sprintf@flag,w,c
  1934  001796  0B03               	andlw	3
  1935  001798  B4D8               	btfsc	status,2,c
  1936  00179A  D008               	goto	l3014
  1937                           
  1938                           ;doprnt.c: 1446: ((*sp++ = ('-')));
  1939  00179C  C00F  FFD9         	movff	sprintf@sp,fsr2l
  1940  0017A0  C010  FFDA         	movff	sprintf@sp+1,fsr2h
  1941  0017A4  0E2D               	movlw	45
  1942  0017A6  6EDF               	movwf	indf2,c
  1943  0017A8  4A0F               	infsnz	sprintf@sp,f,c
  1944  0017AA  2A10               	incf	sprintf@sp+1,f,c
  1945  0017AC                     l3014:
  1946                           
  1947                           ;doprnt.c: 1476: }
  1948                           ;doprnt.c: 1479: prec = c;
  1949  0017AC  C020  F01A         	movff	sprintf@c,sprintf@prec
  1950                           
  1951                           ;doprnt.c: 1481: while(prec--) {
  1952  0017B0  D02C               	goto	l3022
  1953  0017B2                     l3016:
  1954                           
  1955                           ;doprnt.c: 1485: {
  1956                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
  1957  0017B2  501A               	movf	sprintf@prec,w,c
  1958  0017B4  0D02               	mullw	2
  1959  0017B6  0E00               	movlw	low _dpowers
  1960  0017B8  24F3               	addwf	prodl,w,c
  1961  0017BA  6EF6               	movwf	tblptrl,c
  1962  0017BC  0E10               	movlw	high _dpowers
  1963  0017BE  20F4               	addwfc	prodh,w,c
  1964  0017C0  6EF7               	movwf	tblptrh,c
  1965  0017C2  6AF8               	clrf	tblptru,c
  1966  0017C4  0E00               	movlw	low (__mediumconst shr (0+16))
  1967  0017C6  22F8               	addwfc	tblptru,f,c
  1968  0017C8  0009               	tblrd		*+
  1969  0017CA  CFF5 F003          	movff	tablat,?___lwdiv+2
  1970  0017CE  000A               	tblrd		*-
  1971  0017D0  CFF5 F004          	movff	tablat,?___lwdiv+3
  1972  0017D4  C01B  F001         	movff	sprintf@_val,?___lwdiv
  1973  0017D8  C01C  F002         	movff	sprintf@_val+1,?___lwdiv+1
  1974  0017DC  EC5D  F011         	call	___lwdiv	;wreg free
  1975  0017E0  C001  F009         	movff	?___lwdiv,?___lwmod
  1976  0017E4  C002  F00A         	movff	?___lwdiv+1,?___lwmod+1
  1977  0017E8  0E00               	movlw	0
  1978  0017EA  6E0C               	movwf	?___lwmod+3,c
  1979  0017EC  0E0A               	movlw	10
  1980  0017EE  6E0B               	movwf	?___lwmod+2,c
  1981  0017F0  ECD7  F011         	call	___lwmod	;wreg free
  1982  0017F4  5009               	movf	?___lwmod,w,c
  1983  0017F6  0F30               	addlw	48
  1984  0017F8  6E20               	movwf	sprintf@c,c
  1985                           
  1986                           ;doprnt.c: 1530: }
  1987                           ;doprnt.c: 1531: ((*sp++ = (c)));
  1988  0017FA  C00F  FFD9         	movff	sprintf@sp,fsr2l
  1989  0017FE  C010  FFDA         	movff	sprintf@sp+1,fsr2h
  1990  001802  C020  FFDF         	movff	sprintf@c,indf2
  1991  001806  4A0F               	infsnz	sprintf@sp,f,c
  1992  001808  2A10               	incf	sprintf@sp+1,f,c
  1993  00180A                     l3022:
  1994  00180A  061A               	decf	sprintf@prec,f,c
  1995  00180C  281A               	incf	sprintf@prec& (0+255),w,c
  1996  00180E  A4D8               	btfss	status,2,c
  1997  001810  D7D0               	goto	l3016
  1998  001812                     l3024:
  1999  001812  5011               	movf	sprintf@f,w,c
  2000  001814  6E15               	movwf	??_sprintf& (0+255),c
  2001  001816  5012               	movf	sprintf@f+1,w,c
  2002  001818  6E16               	movwf	(??_sprintf+1)& (0+255),c
  2003  00181A  4A11               	infsnz	sprintf@f,f,c
  2004  00181C  2A12               	incf	sprintf@f+1,f,c
  2005  00181E  C015  FFF6         	movff	??_sprintf,tblptrl
  2006  001822  C016  FFF7         	movff	??_sprintf+1,tblptrh
  2007  001826  0E00               	movlw	low (__mediumconst shr (0+16))
  2008  001828  6EF8               	movwf	tblptru,c
  2009  00182A  0008               	tblrd		*
  2010  00182C  CFF5 F020          	movff	tablat,sprintf@c
  2011  001830  6620               	tstfsz	sprintf@c& (0+255),c
  2012  001832  D751               	goto	l2972
  2013  001834                     l3026:
  2014                           
  2015                           ;doprnt.c: 1545: *sp = 0;
  2016  001834  C00F  FFD9         	movff	sprintf@sp,fsr2l
  2017  001838  C010  FFDA         	movff	sprintf@sp+1,fsr2h
  2018  00183C  0E00               	movlw	0
  2019  00183E  6EDF               	movwf	indf2,c
  2020  001840  0012               	return	
  2021  001842                     __end_of_sprintf:
  2022                           	opt stack 0
  2023                           tblptru	equ	0xFF8
  2024                           tblptrh	equ	0xFF7
  2025                           tblptrl	equ	0xFF6
  2026                           tablat	equ	0xFF5
  2027                           prodh	equ	0xFF4
  2028                           prodl	equ	0xFF3
  2029                           wreg	equ	0xFE8
  2030                           indf2	equ	0xFDF
  2031                           postinc2	equ	0xFDE
  2032                           postdec2	equ	0xFDD
  2033                           fsr2h	equ	0xFDA
  2034                           fsr2l	equ	0xFD9
  2035                           status	equ	0xFD8
  2036                           
  2037 ;; *************** function ___lwmod *****************
  2038 ;; Defined at:
  2039 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lwmod.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  dividend        2    8[COMRAM] unsigned int 
  2042 ;;  divisor         2   10[COMRAM] unsigned int 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  counter         1   13[COMRAM] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  2    8[COMRAM] unsigned int 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, status,0
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;Total ram usage:        6 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_sprintf
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text8
  2068  0023AE                     __ptext8:
  2069                           	opt stack 0
  2070  0023AE                     ___lwmod:
  2071                           	opt stack 28
  2072                           
  2073                           ;incstack = 0
  2074                           ;incstack = 0
  2075  0023AE  500C               	movf	___lwmod@divisor+1,w,c
  2076  0023B0  100B               	iorwf	___lwmod@divisor,w,c
  2077  0023B2  B4D8               	btfsc	status,2,c
  2078  0023B4  D01A               	goto	l978
  2079  0023B6  6E0D               	movwf	??___lwmod& (0+255),c
  2080  0023B8  0E01               	movlw	1
  2081  0023BA  6E0E               	movwf	___lwmod@counter,c
  2082  0023BC  500D               	movf	??___lwmod& (0+255),w,c
  2083  0023BE  D004               	goto	l2954
  2084  0023C0                     l2952:
  2085  0023C0  90D8               	bcf	status,0,c
  2086  0023C2  360B               	rlcf	___lwmod@divisor,f,c
  2087  0023C4  360C               	rlcf	___lwmod@divisor+1,f,c
  2088  0023C6  2A0E               	incf	___lwmod@counter,f,c
  2089  0023C8                     l2954:
  2090  0023C8  AE0C               	btfss	___lwmod@divisor+1,7,c
  2091  0023CA  D7FA               	goto	l2952
  2092  0023CC                     l2956:
  2093  0023CC  500B               	movf	___lwmod@divisor,w,c
  2094  0023CE  5C09               	subwf	___lwmod@dividend,w,c
  2095  0023D0  500C               	movf	___lwmod@divisor+1,w,c
  2096  0023D2  580A               	subwfb	___lwmod@dividend+1,w,c
  2097  0023D4  A0D8               	btfss	status,0,c
  2098  0023D6  D004               	goto	l2960
  2099  0023D8  500B               	movf	___lwmod@divisor,w,c
  2100  0023DA  5E09               	subwf	___lwmod@dividend,f,c
  2101  0023DC  500C               	movf	___lwmod@divisor+1,w,c
  2102  0023DE  5A0A               	subwfb	___lwmod@dividend+1,f,c
  2103  0023E0                     l2960:
  2104  0023E0  90D8               	bcf	status,0,c
  2105  0023E2  320C               	rrcf	___lwmod@divisor+1,f,c
  2106  0023E4  320B               	rrcf	___lwmod@divisor,f,c
  2107  0023E6  2E0E               	decfsz	___lwmod@counter,f,c
  2108  0023E8  D7F1               	goto	l2956
  2109  0023EA                     l978:
  2110  0023EA  C009  F009         	movff	___lwmod@dividend,?___lwmod
  2111  0023EE  C00A  F00A         	movff	___lwmod@dividend+1,?___lwmod+1
  2112  0023F2  0012               	return	
  2113  0023F4                     __end_of___lwmod:
  2114                           	opt stack 0
  2115                           tblptru	equ	0xFF8
  2116                           tblptrh	equ	0xFF7
  2117                           tblptrl	equ	0xFF6
  2118                           tablat	equ	0xFF5
  2119                           prodh	equ	0xFF4
  2120                           prodl	equ	0xFF3
  2121                           wreg	equ	0xFE8
  2122                           indf2	equ	0xFDF
  2123                           postinc2	equ	0xFDE
  2124                           postdec2	equ	0xFDD
  2125                           fsr2h	equ	0xFDA
  2126                           fsr2l	equ	0xFD9
  2127                           status	equ	0xFD8
  2128                           
  2129 ;; *************** function ___lwdiv *****************
  2130 ;; Defined at:
  2131 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lwdiv.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  dividend        2    0[COMRAM] unsigned int 
  2134 ;;  divisor         2    2[COMRAM] unsigned int 
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;  quotient        2    5[COMRAM] unsigned int 
  2137 ;;  counter         1    7[COMRAM] unsigned char 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  2    0[COMRAM] unsigned int 
  2140 ;; Registers used:
  2141 ;;		wreg, status,2, status,0
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2147 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2148 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2149 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2150 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;Total ram usage:        8 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; This function calls:
  2154 ;;		Nothing
  2155 ;; This function is called by:
  2156 ;;		_sprintf
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text9
  2161  0022BA                     __ptext9:
  2162                           	opt stack 0
  2163  0022BA                     ___lwdiv:
  2164                           	opt stack 28
  2165                           
  2166                           ;incstack = 0
  2167                           ;incstack = 0
  2168  0022BA  0E00               	movlw	0
  2169  0022BC  6E07               	movwf	___lwdiv@quotient+1,c
  2170  0022BE  0E00               	movlw	0
  2171  0022C0  6E06               	movwf	___lwdiv@quotient,c
  2172  0022C2  5004               	movf	___lwdiv@divisor+1,w,c
  2173  0022C4  1003               	iorwf	___lwdiv@divisor,w,c
  2174  0022C6  B4D8               	btfsc	status,2,c
  2175  0022C8  D01E               	goto	l968
  2176  0022CA  6E05               	movwf	??___lwdiv& (0+255),c
  2177  0022CC  0E01               	movlw	1
  2178  0022CE  6E08               	movwf	___lwdiv@counter,c
  2179  0022D0  5005               	movf	??___lwdiv& (0+255),w,c
  2180  0022D2  D004               	goto	l2840
  2181  0022D4                     l2838:
  2182  0022D4  90D8               	bcf	status,0,c
  2183  0022D6  3603               	rlcf	___lwdiv@divisor,f,c
  2184  0022D8  3604               	rlcf	___lwdiv@divisor+1,f,c
  2185  0022DA  2A08               	incf	___lwdiv@counter,f,c
  2186  0022DC                     l2840:
  2187  0022DC  AE04               	btfss	___lwdiv@divisor+1,7,c
  2188  0022DE  D7FA               	goto	l2838
  2189  0022E0                     l2842:
  2190  0022E0  90D8               	bcf	status,0,c
  2191  0022E2  3606               	rlcf	___lwdiv@quotient,f,c
  2192  0022E4  3607               	rlcf	___lwdiv@quotient+1,f,c
  2193  0022E6  5003               	movf	___lwdiv@divisor,w,c
  2194  0022E8  5C01               	subwf	___lwdiv@dividend,w,c
  2195  0022EA  5004               	movf	___lwdiv@divisor+1,w,c
  2196  0022EC  5802               	subwfb	___lwdiv@dividend+1,w,c
  2197  0022EE  A0D8               	btfss	status,0,c
  2198  0022F0  D005               	goto	l2850
  2199  0022F2  5003               	movf	___lwdiv@divisor,w,c
  2200  0022F4  5E01               	subwf	___lwdiv@dividend,f,c
  2201  0022F6  5004               	movf	___lwdiv@divisor+1,w,c
  2202  0022F8  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2203  0022FA  8006               	bsf	___lwdiv@quotient,0,c
  2204  0022FC                     l2850:
  2205  0022FC  90D8               	bcf	status,0,c
  2206  0022FE  3204               	rrcf	___lwdiv@divisor+1,f,c
  2207  002300  3203               	rrcf	___lwdiv@divisor,f,c
  2208  002302  2E08               	decfsz	___lwdiv@counter,f,c
  2209  002304  D7ED               	goto	l2842
  2210  002306                     l968:
  2211  002306  C006  F001         	movff	___lwdiv@quotient,?___lwdiv
  2212  00230A  C007  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2213  00230E  0012               	return	
  2214  002310                     __end_of___lwdiv:
  2215                           	opt stack 0
  2216                           tblptru	equ	0xFF8
  2217                           tblptrh	equ	0xFF7
  2218                           tblptrl	equ	0xFF6
  2219                           tablat	equ	0xFF5
  2220                           prodh	equ	0xFF4
  2221                           prodl	equ	0xFF3
  2222                           wreg	equ	0xFE8
  2223                           indf2	equ	0xFDF
  2224                           postinc2	equ	0xFDE
  2225                           postdec2	equ	0xFDD
  2226                           fsr2h	equ	0xFDA
  2227                           fsr2l	equ	0xFD9
  2228                           status	equ	0xFD8
  2229                           
  2230 ;; *************** function _atan *****************
  2231 ;; Defined at:
  2232 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\atan.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  f               3   84[COMRAM] unsigned int 
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;  val             3   10[BANK0 ] unsigned int 
  2237 ;;  val_squared     3    7[BANK0 ] unsigned int 
  2238 ;;  x               3    3[BANK0 ] unsigned int 
  2239 ;;  y               3    0[BANK0 ] unsigned int 
  2240 ;;  recip           1    6[BANK0 ] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  3   84[COMRAM] unsigned char 
  2243 ;; Registers used:
  2244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2250 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;      Totals:         3      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;Total ram usage:       16 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:    3
  2257 ;; This function calls:
  2258 ;;		___ftadd
  2259 ;;		___ftdiv
  2260 ;;		___asftmul
  2261 ;;		___ftmul
  2262 ;;		_fabs
  2263 ;;		_eval_poly
  2264 ;;		___ftge
  2265 ;;		___ftneg
  2266 ;; This function is called by:
  2267 ;;		_main
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text10
  2272  00132C                     __ptext10:
  2273                           	opt stack 0
  2274  00132C                     _atan:
  2275                           	opt stack 26
  2276                           
  2277                           ;incstack = 0
  2278                           ;incstack = 0
  2279  00132C  C055  F022         	movff	atan@f,?_fabs
  2280  001330  C056  F023         	movff	atan@f+1,?_fabs+1
  2281  001334  C057  F024         	movff	atan@f+2,?_fabs+2
  2282  001338  EC1C  F012         	call	_fabs	;wreg free
  2283  00133C  C024  F06C         	movff	?_fabs+2,atan@val+2
  2284  001340  C023  F06B         	movff	?_fabs+1,atan@val+1
  2285  001344  C022  F06A         	movff	?_fabs,atan@val
  2286  001348  0E7F               	movlw	127
  2287  00134A  0100               	movlb	0	; () banked
  2288  00134C  156C               	andwf	(atan@val+2)& (0+255),w,b
  2289  00134E  0100               	movlb	0	; () banked
  2290  001350  116B               	iorwf	(atan@val+1)& (0+255),w,b
  2291  001352  0100               	movlb	0	; () banked
  2292  001354  116A               	iorwf	atan@val& (0+255),w,b
  2293  001356  A4D8               	btfss	status,2,c
  2294  001358  D007               	goto	l3268
  2295                           
  2296                           ; BSR set to: 0
  2297  00135A  0E00               	movlw	0
  2298  00135C  6E55               	movwf	?_atan,c
  2299  00135E  0E00               	movlw	0
  2300  001360  6E56               	movwf	?_atan+1,c
  2301  001362  0E00               	movlw	0
  2302  001364  6E57               	movwf	?_atan+2,c
  2303  001366  0012               	return	
  2304  001368                     l3268:
  2305                           
  2306                           ; BSR set to: 0
  2307  001368  0E00               	movlw	0
  2308  00136A  6E01               	movwf	?___ftge,c
  2309  00136C  0E80               	movlw	128
  2310  00136E  6E02               	movwf	?___ftge+1,c
  2311  001370  0E3F               	movlw	63
  2312  001372  6E03               	movwf	?___ftge+2,c
  2313  001374  C06A  F004         	movff	atan@val,?___ftge+3
  2314  001378  C06B  F005         	movff	atan@val+1,?___ftge+4
  2315  00137C  C06C  F006         	movff	atan@val+2,?___ftge+5
  2316  001380  ECE2  F00F         	call	___ftge	;wreg free
  2317  001384  B0D8               	btfsc	status,0,c
  2318  001386  D002               	goto	u2990
  2319  001388  0E01               	movlw	1
  2320  00138A  D001               	goto	u2996
  2321  00138C                     u2990:
  2322  00138C  0E00               	movlw	0
  2323  00138E                     u2996:
  2324  00138E  0100               	movlb	0	; () banked
  2325  001390  0100               	movlb	0	; () banked
  2326  001392  6F66               	movwf	atan@recip& (0+255),b
  2327  001394  0100               	movlb	0	; () banked
  2328  001396  5166               	movf	atan@recip& (0+255),w,b
  2329  001398  B4D8               	btfsc	status,2,c
  2330  00139A  D014               	goto	l571
  2331                           
  2332                           ; BSR set to: 0
  2333  00139C  0E00               	movlw	0
  2334  00139E  6E27               	movwf	?___ftdiv,c
  2335  0013A0  0E80               	movlw	128
  2336  0013A2  6E28               	movwf	?___ftdiv+1,c
  2337  0013A4  0E3F               	movlw	63
  2338  0013A6  6E29               	movwf	?___ftdiv+2,c
  2339  0013A8  C06A  F02A         	movff	atan@val,?___ftdiv+3
  2340  0013AC  C06B  F02B         	movff	atan@val+1,?___ftdiv+4
  2341  0013B0  C06C  F02C         	movff	atan@val+2,?___ftdiv+5
  2342  0013B4  ECAF  F00C         	call	___ftdiv	;wreg free
  2343  0013B8  C029  F06C         	movff	?___ftdiv+2,atan@val+2
  2344  0013BC  C028  F06B         	movff	?___ftdiv+1,atan@val+1
  2345  0013C0  C027  F06A         	movff	?___ftdiv,atan@val
  2346  0013C4                     l571:
  2347  0013C4  C06A  F022         	movff	atan@val,?___ftmul
  2348  0013C8  C06B  F023         	movff	atan@val+1,?___ftmul+1
  2349  0013CC  C06C  F024         	movff	atan@val+2,?___ftmul+2
  2350  0013D0  C06A  F025         	movff	atan@val,?___ftmul+3
  2351  0013D4  C06B  F026         	movff	atan@val+1,?___ftmul+4
  2352  0013D8  C06C  F027         	movff	atan@val+2,?___ftmul+5
  2353  0013DC  EC21  F00C         	call	___ftmul	;wreg free
  2354  0013E0  C024  F069         	movff	?___ftmul+2,atan@val_squared+2
  2355  0013E4  C023  F068         	movff	?___ftmul+1,atan@val_squared+1
  2356  0013E8  C022  F067         	movff	?___ftmul,atan@val_squared
  2357  0013EC  C067  F046         	movff	atan@val_squared,?_eval_poly
  2358  0013F0  C068  F047         	movff	atan@val_squared+1,?_eval_poly+1
  2359  0013F4  C069  F048         	movff	atan@val_squared+2,?_eval_poly+2
  2360  0013F8  0E10               	movlw	high atan@coeff_b
  2361  0013FA  6E4A               	movwf	?_eval_poly+4,c
  2362  0013FC  0E1C               	movlw	low atan@coeff_b
  2363  0013FE  6E49               	movwf	?_eval_poly+3,c
  2364  001400  0E00               	movlw	0
  2365  001402  6E4C               	movwf	?_eval_poly+6,c
  2366  001404  0E04               	movlw	4
  2367  001406  6E4B               	movwf	?_eval_poly+5,c
  2368  001408  ECB5  F00D         	call	_eval_poly	;wreg free
  2369  00140C  C048  F062         	movff	?_eval_poly+2,atan@y+2
  2370  001410  C047  F061         	movff	?_eval_poly+1,atan@y+1
  2371  001414  C046  F060         	movff	?_eval_poly,atan@y
  2372  001418  C067  F046         	movff	atan@val_squared,?_eval_poly
  2373  00141C  C068  F047         	movff	atan@val_squared+1,?_eval_poly+1
  2374  001420  C069  F048         	movff	atan@val_squared+2,?_eval_poly+2
  2375  001424  0E10               	movlw	high atan@coeff_a
  2376  001426  6E4A               	movwf	?_eval_poly+4,c
  2377  001428  0E0A               	movlw	low atan@coeff_a
  2378  00142A  6E49               	movwf	?_eval_poly+3,c
  2379  00142C  0E00               	movlw	0
  2380  00142E  6E4C               	movwf	?_eval_poly+6,c
  2381  001430  0E05               	movlw	5
  2382  001432  6E4B               	movwf	?_eval_poly+5,c
  2383  001434  ECB5  F00D         	call	_eval_poly	;wreg free
  2384  001438  C048  F065         	movff	?_eval_poly+2,atan@x+2
  2385  00143C  C047  F064         	movff	?_eval_poly+1,atan@x+1
  2386  001440  C046  F063         	movff	?_eval_poly,atan@x
  2387  001444  0100               	movlb	0	; () banked
  2388  001446  0E00               	movlw	high atan@val
  2389  001448  6E39               	movwf	?___asftmul+1,c
  2390  00144A  0100               	movlb	0	; () banked
  2391  00144C  0E6A               	movlw	low atan@val
  2392  00144E  6E38               	movwf	?___asftmul,c
  2393  001450  C060  F02A         	movff	atan@y,?___ftdiv+3
  2394  001454  C061  F02B         	movff	atan@y+1,?___ftdiv+4
  2395  001458  C062  F02C         	movff	atan@y+2,?___ftdiv+5
  2396  00145C  C063  F027         	movff	atan@x,?___ftdiv
  2397  001460  C064  F028         	movff	atan@x+1,?___ftdiv+1
  2398  001464  C065  F029         	movff	atan@x+2,?___ftdiv+2
  2399  001468  ECAF  F00C         	call	___ftdiv	;wreg free
  2400  00146C  C029  F03C         	movff	?___ftdiv+2,?___asftmul+4
  2401  001470  C028  F03B         	movff	?___ftdiv+1,?___asftmul+3
  2402  001474  C027  F03A         	movff	?___ftdiv,?___asftmul+2
  2403  001478  EC3D  F012         	call	___asftmul	;wreg free
  2404  00147C  0100               	movlb	0	; () banked
  2405  00147E  0100               	movlb	0	; () banked
  2406  001480  5166               	movf	atan@recip& (0+255),w,b
  2407  001482  B4D8               	btfsc	status,2,c
  2408  001484  D01C               	goto	l3282
  2409                           
  2410                           ; BSR set to: 0
  2411  001486  C06A  F010         	movff	atan@val,?___ftneg
  2412  00148A  C06B  F011         	movff	atan@val+1,?___ftneg+1
  2413  00148E  C06C  F012         	movff	atan@val+2,?___ftneg+2
  2414  001492  ECCE  F012         	call	___ftneg	;wreg free
  2415  001496  C012  F03A         	movff	?___ftneg+2,?___ftadd+2
  2416  00149A  C011  F039         	movff	?___ftneg+1,?___ftadd+1
  2417  00149E  C010  F038         	movff	?___ftneg,?___ftadd
  2418  0014A2  0E10               	movlw	16
  2419  0014A4  6E3B               	movwf	?___ftadd+3,c
  2420  0014A6  0EC9               	movlw	201
  2421  0014A8  6E3C               	movwf	?___ftadd+4,c
  2422  0014AA  0E3F               	movlw	63
  2423  0014AC  6E3D               	movwf	?___ftadd+5,c
  2424  0014AE  EC80  F00A         	call	___ftadd	;wreg free
  2425  0014B2  C03A  F06C         	movff	?___ftadd+2,atan@val+2
  2426  0014B6  C039  F06B         	movff	?___ftadd+1,atan@val+1
  2427  0014BA  C038  F06A         	movff	?___ftadd,atan@val
  2428  0014BE                     l3282:
  2429  0014BE  5057               	movf	atan@f+2,w,c
  2430  0014C0  0A80               	xorlw	128
  2431  0014C2  0F80               	addlw	128
  2432  0014C4  E105               	bnz	u3025
  2433  0014C6  0E00               	movlw	0
  2434  0014C8  5C56               	subwf	atan@f+1,w,c
  2435  0014CA  E102               	bnz	u3025
  2436  0014CC  0E00               	movlw	0
  2437  0014CE  5C55               	subwf	atan@f,w,c
  2438  0014D0                     u3025:
  2439  0014D0  A0D8               	btfss	status,0,c
  2440  0014D2  D007               	goto	l3286
  2441  0014D4  C06A  F055         	movff	atan@val,?_atan
  2442  0014D8  C06B  F056         	movff	atan@val+1,?_atan+1
  2443  0014DC  C06C  F057         	movff	atan@val+2,?_atan+2
  2444  0014E0  0012               	return	
  2445  0014E2                     l3286:
  2446  0014E2  C06A  F010         	movff	atan@val,?___ftneg
  2447  0014E6  C06B  F011         	movff	atan@val+1,?___ftneg+1
  2448  0014EA  C06C  F012         	movff	atan@val+2,?___ftneg+2
  2449  0014EE  ECCE  F012         	call	___ftneg	;wreg free
  2450  0014F2  C012  F057         	movff	?___ftneg+2,?_atan+2
  2451  0014F6  C011  F056         	movff	?___ftneg+1,?_atan+1
  2452  0014FA  C010  F055         	movff	?___ftneg,?_atan
  2453  0014FE  0012               	return	
  2454  001500                     __end_of_atan:
  2455                           	opt stack 0
  2456                           tblptru	equ	0xFF8
  2457                           tblptrh	equ	0xFF7
  2458                           tblptrl	equ	0xFF6
  2459                           tablat	equ	0xFF5
  2460                           prodh	equ	0xFF4
  2461                           prodl	equ	0xFF3
  2462                           wreg	equ	0xFE8
  2463                           indf2	equ	0xFDF
  2464                           postinc2	equ	0xFDE
  2465                           postdec2	equ	0xFDD
  2466                           fsr2h	equ	0xFDA
  2467                           fsr2l	equ	0xFD9
  2468                           status	equ	0xFD8
  2469                           
  2470 ;; *************** function _eval_poly *****************
  2471 ;; Defined at:
  2472 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\evalpoly.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  x               3   69[COMRAM] unsigned char 
  2475 ;;  d               2   72[COMRAM] PTR const 
  2476 ;;		 -> atan@coeff_a(18), atan@coeff_b(15), 
  2477 ;;  n               2   74[COMRAM] int 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;  res             3   81[COMRAM] int 
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  3   69[COMRAM] int 
  2482 ;; Registers used:
  2483 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2489 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;Total ram usage:       15 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; Hardware stack levels required when called:    2
  2496 ;; This function calls:
  2497 ;;		___ftadd
  2498 ;;		___ftmul
  2499 ;;		___wmul
  2500 ;; This function is called by:
  2501 ;;		_atan
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text11
  2506  001B6A                     __ptext11:
  2507                           	opt stack 0
  2508  001B6A                     _eval_poly:
  2509                           	opt stack 26
  2510                           
  2511                           ;incstack = 0
  2512                           ;incstack = 0
  2513  001B6A  C04B  F00A         	movff	eval_poly@n,?___wmul
  2514  001B6E  C04C  F00B         	movff	eval_poly@n+1,?___wmul+1
  2515  001B72  0E00               	movlw	0
  2516  001B74  6E0D               	movwf	?___wmul+3,c
  2517  001B76  0E03               	movlw	3
  2518  001B78  6E0C               	movwf	?___wmul+2,c
  2519  001B7A  EC5B  F012         	call	___wmul	;wreg free
  2520  001B7E  500A               	movf	?___wmul,w,c
  2521  001B80  2449               	addwf	eval_poly@d,w,c
  2522  001B82  6E4D               	movwf	??_eval_poly& (0+255),c
  2523  001B84  500B               	movf	?___wmul+1,w,c
  2524  001B86  204A               	addwfc	eval_poly@d+1,w,c
  2525  001B88  6E4E               	movwf	(??_eval_poly+1)& (0+255),c
  2526  001B8A  C04D  FFF6         	movff	??_eval_poly,tblptrl
  2527  001B8E  C04E  FFF7         	movff	??_eval_poly+1,tblptrh
  2528  001B92  0E00               	movlw	low (__mediumconst shr (0+16))
  2529  001B94  6EF8               	movwf	tblptru,c
  2530  001B96  0009               	tblrd		*+
  2531  001B98  CFF5 F04F          	movff	tablat,??_eval_poly+2
  2532  001B9C  0009               	tblrd		*+
  2533  001B9E  CFF5 F050          	movff	tablat,??_eval_poly+3
  2534  001BA2  0009               	tblrd		*+
  2535  001BA4  CFF5 F051          	movff	tablat,??_eval_poly+4
  2536  001BA8  C051  F054         	movff	??_eval_poly+4,eval_poly@res+2
  2537  001BAC  C050  F053         	movff	??_eval_poly+3,eval_poly@res+1
  2538  001BB0  C04F  F052         	movff	??_eval_poly+2,eval_poly@res
  2539  001BB4  D044               	goto	l3260
  2540  001BB6                     l3258:
  2541  001BB6  C052  F025         	movff	eval_poly@res,?___ftmul+3
  2542  001BBA  C053  F026         	movff	eval_poly@res+1,?___ftmul+4
  2543  001BBE  C054  F027         	movff	eval_poly@res+2,?___ftmul+5
  2544  001BC2  C046  F022         	movff	eval_poly@x,?___ftmul
  2545  001BC6  C047  F023         	movff	eval_poly@x+1,?___ftmul+1
  2546  001BCA  C048  F024         	movff	eval_poly@x+2,?___ftmul+2
  2547  001BCE  EC21  F00C         	call	___ftmul	;wreg free
  2548  001BD2  C024  F03A         	movff	?___ftmul+2,?___ftadd+2
  2549  001BD6  C023  F039         	movff	?___ftmul+1,?___ftadd+1
  2550  001BDA  C022  F038         	movff	?___ftmul,?___ftadd
  2551  001BDE  0E00               	movlw	0
  2552  001BE0  6E0D               	movwf	?___wmul+3,c
  2553  001BE2  0E03               	movlw	3
  2554  001BE4  6E0C               	movwf	?___wmul+2,c
  2555  001BE6  064B               	decf	eval_poly@n,f,c
  2556  001BE8  A0D8               	btfss	status,0,c
  2557  001BEA  064C               	decf	eval_poly@n+1,f,c
  2558  001BEC  C04B  F00A         	movff	eval_poly@n,?___wmul
  2559  001BF0  C04C  F00B         	movff	eval_poly@n+1,?___wmul+1
  2560  001BF4  EC5B  F012         	call	___wmul	;wreg free
  2561  001BF8  500A               	movf	?___wmul,w,c
  2562  001BFA  2449               	addwf	eval_poly@d,w,c
  2563  001BFC  6E4D               	movwf	??_eval_poly& (0+255),c
  2564  001BFE  500B               	movf	?___wmul+1,w,c
  2565  001C00  204A               	addwfc	eval_poly@d+1,w,c
  2566  001C02  6E4E               	movwf	(??_eval_poly+1)& (0+255),c
  2567  001C04  C04D  FFF6         	movff	??_eval_poly,tblptrl
  2568  001C08  C04E  FFF7         	movff	??_eval_poly+1,tblptrh
  2569  001C0C  0E00               	movlw	low (__mediumconst shr (0+16))
  2570  001C0E  6EF8               	movwf	tblptru,c
  2571  001C10  0009               	tblrd		*+
  2572  001C12  CFF5 F04F          	movff	tablat,??_eval_poly+2
  2573  001C16  0009               	tblrd		*+
  2574  001C18  CFF5 F050          	movff	tablat,??_eval_poly+3
  2575  001C1C  0009               	tblrd		*+
  2576  001C1E  CFF5 F051          	movff	tablat,??_eval_poly+4
  2577  001C22  C051  F03D         	movff	??_eval_poly+4,?___ftadd+5
  2578  001C26  C050  F03C         	movff	??_eval_poly+3,?___ftadd+4
  2579  001C2A  C04F  F03B         	movff	??_eval_poly+2,?___ftadd+3
  2580  001C2E  EC80  F00A         	call	___ftadd	;wreg free
  2581  001C32  C03A  F054         	movff	?___ftadd+2,eval_poly@res+2
  2582  001C36  C039  F053         	movff	?___ftadd+1,eval_poly@res+1
  2583  001C3A  C038  F052         	movff	?___ftadd,eval_poly@res
  2584  001C3E                     l3260:
  2585  001C3E  504C               	movf	eval_poly@n+1,w,c
  2586  001C40  104B               	iorwf	eval_poly@n,w,c
  2587  001C42  A4D8               	btfss	status,2,c
  2588  001C44  D7B8               	goto	l3258
  2589  001C46  C052  F046         	movff	eval_poly@res,?_eval_poly
  2590  001C4A  C053  F047         	movff	eval_poly@res+1,?_eval_poly+1
  2591  001C4E  C054  F048         	movff	eval_poly@res+2,?_eval_poly+2
  2592  001C52  0012               	return	
  2593  001C54                     __end_of_eval_poly:
  2594                           	opt stack 0
  2595                           tblptru	equ	0xFF8
  2596                           tblptrh	equ	0xFF7
  2597                           tblptrl	equ	0xFF6
  2598                           tablat	equ	0xFF5
  2599                           prodh	equ	0xFF4
  2600                           prodl	equ	0xFF3
  2601                           wreg	equ	0xFE8
  2602                           indf2	equ	0xFDF
  2603                           postinc2	equ	0xFDE
  2604                           postdec2	equ	0xFDD
  2605                           fsr2h	equ	0xFDA
  2606                           fsr2l	equ	0xFD9
  2607                           status	equ	0xFD8
  2608                           
  2609 ;; *************** function ___ftadd *****************
  2610 ;; Defined at:
  2611 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\ftadd.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  f1              3   55[COMRAM] float 
  2614 ;;  f2              3   58[COMRAM] float 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  exp1            1   68[COMRAM] unsigned char 
  2617 ;;  exp2            1   67[COMRAM] unsigned char 
  2618 ;;  sign            1   66[COMRAM] unsigned char 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  3   55[COMRAM] float 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2628 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2629 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;Total ram usage:       14 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    1
  2635 ;; This function calls:
  2636 ;;		___ftpack
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;;		_atan
  2640 ;;		_eval_poly
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text12
  2645  001500                     __ptext12:
  2646                           	opt stack 0
  2647  001500                     ___ftadd:
  2648                           	opt stack 28
  2649                           
  2650                           ;incstack = 0
  2651                           ;incstack = 0
  2652  001500  0E0F               	movlw	15
  2653  001502  6E3E               	movwf	??___ftadd& (0+255),c
  2654  001504  C038  F03F         	movff	___ftadd@f1,??___ftadd+1
  2655  001508  C039  F040         	movff	___ftadd@f1+1,??___ftadd+2
  2656  00150C  C03A  F041         	movff	___ftadd@f1+2,??___ftadd+3
  2657  001510  283E               	incf	??___ftadd,w,c
  2658  001512  6E42               	movwf	(??___ftadd+4)& (0+255),c
  2659  001514  D004               	goto	u2760
  2660  001516                     u2765:
  2661  001516  90D8               	bcf	status,0,c
  2662  001518  3241               	rrcf	??___ftadd+3,f,c
  2663  00151A  3240               	rrcf	??___ftadd+2,f,c
  2664  00151C  323F               	rrcf	??___ftadd+1,f,c
  2665  00151E                     u2760:
  2666  00151E  2E42               	decfsz	(??___ftadd+4)& (0+255),f,c
  2667  001520  D7FA               	goto	u2765
  2668  001522  503F               	movf	??___ftadd+1,w,c
  2669  001524  6E45               	movwf	___ftadd@exp1,c
  2670  001526  0E0F               	movlw	15
  2671  001528  6E3E               	movwf	??___ftadd& (0+255),c
  2672  00152A  C03B  F03F         	movff	___ftadd@f2,??___ftadd+1
  2673  00152E  C03C  F040         	movff	___ftadd@f2+1,??___ftadd+2
  2674  001532  C03D  F041         	movff	___ftadd@f2+2,??___ftadd+3
  2675  001536  283E               	incf	??___ftadd,w,c
  2676  001538  6E42               	movwf	(??___ftadd+4)& (0+255),c
  2677  00153A  D004               	goto	u2770
  2678  00153C                     u2775:
  2679  00153C  90D8               	bcf	status,0,c
  2680  00153E  3241               	rrcf	??___ftadd+3,f,c
  2681  001540  3240               	rrcf	??___ftadd+2,f,c
  2682  001542  323F               	rrcf	??___ftadd+1,f,c
  2683  001544                     u2770:
  2684  001544  2E42               	decfsz	(??___ftadd+4)& (0+255),f,c
  2685  001546  D7FA               	goto	u2775
  2686  001548  503F               	movf	??___ftadd+1,w,c
  2687  00154A  6E44               	movwf	___ftadd@exp2,c
  2688  00154C  5045               	movf	___ftadd@exp1,w,c
  2689  00154E  B4D8               	btfsc	status,2,c
  2690  001550  D00B               	goto	l793
  2691  001552  5044               	movf	___ftadd@exp2,w,c
  2692  001554  6045               	cpfslt	___ftadd@exp1,c
  2693  001556  D00F               	goto	l3190
  2694  001558  5045               	movf	___ftadd@exp1,w,c
  2695  00155A  0800               	sublw	0
  2696  00155C  2444               	addwf	___ftadd@exp2,w,c
  2697  00155E  6E3E               	movwf	??___ftadd& (0+255),c
  2698  001560  0E19               	movlw	25
  2699  001562  5C3E               	subwf	??___ftadd,w,c
  2700  001564  A0D8               	btfss	status,0,c
  2701  001566  D007               	goto	l3190
  2702  001568                     l793:
  2703  001568  C03B  F038         	movff	___ftadd@f2,?___ftadd
  2704  00156C  C03C  F039         	movff	___ftadd@f2+1,?___ftadd+1
  2705  001570  C03D  F03A         	movff	___ftadd@f2+2,?___ftadd+2
  2706  001574  0012               	return	
  2707  001576                     l3190:
  2708  001576  5044               	movf	___ftadd@exp2,w,c
  2709  001578  B4D8               	btfsc	status,2,c
  2710  00157A  D00B               	goto	l797
  2711  00157C  5045               	movf	___ftadd@exp1,w,c
  2712  00157E  6044               	cpfslt	___ftadd@exp2,c
  2713  001580  D00F               	goto	l3196
  2714  001582  5044               	movf	___ftadd@exp2,w,c
  2715  001584  0800               	sublw	0
  2716  001586  2445               	addwf	___ftadd@exp1,w,c
  2717  001588  6E3E               	movwf	??___ftadd& (0+255),c
  2718  00158A  0E19               	movlw	25
  2719  00158C  5C3E               	subwf	??___ftadd,w,c
  2720  00158E  A0D8               	btfss	status,0,c
  2721  001590  D007               	goto	l3196
  2722  001592                     l797:
  2723  001592  C038  F038         	movff	___ftadd@f1,?___ftadd
  2724  001596  C039  F039         	movff	___ftadd@f1+1,?___ftadd+1
  2725  00159A  C03A  F03A         	movff	___ftadd@f1+2,?___ftadd+2
  2726  00159E  0012               	return	
  2727  0015A0                     l3196:
  2728  0015A0  6E3E               	movwf	??___ftadd& (0+255),c
  2729  0015A2  0E06               	movlw	6
  2730  0015A4  6E43               	movwf	___ftadd@sign,c
  2731  0015A6  503E               	movf	??___ftadd& (0+255),w,c
  2732  0015A8  BE3A               	btfsc	___ftadd@f1+2,7,c
  2733  0015AA  8E43               	bsf	___ftadd@sign,7,c
  2734  0015AC  BE3D               	btfsc	___ftadd@f2+2,7,c
  2735  0015AE  8C43               	bsf	___ftadd@sign,6,c
  2736  0015B0  8E39               	bsf	___ftadd@f1+1,7,c
  2737  0015B2  0EFF               	movlw	255
  2738  0015B4  1638               	andwf	___ftadd@f1,f,c
  2739  0015B6  0EFF               	movlw	255
  2740  0015B8  1639               	andwf	___ftadd@f1+1,f,c
  2741  0015BA  0E00               	movlw	0
  2742  0015BC  163A               	andwf	___ftadd@f1+2,f,c
  2743  0015BE  8E3C               	bsf	___ftadd@f2+1,7,c
  2744  0015C0  0EFF               	movlw	255
  2745  0015C2  163B               	andwf	___ftadd@f2,f,c
  2746  0015C4  0EFF               	movlw	255
  2747  0015C6  163C               	andwf	___ftadd@f2+1,f,c
  2748  0015C8  0E00               	movlw	0
  2749  0015CA  163D               	andwf	___ftadd@f2+2,f,c
  2750  0015CC  5044               	movf	___ftadd@exp2,w,c
  2751  0015CE  6045               	cpfslt	___ftadd@exp1,c
  2752  0015D0  D018               	goto	l3222
  2753  0015D2                     l3212:
  2754  0015D2  90D8               	bcf	status,0,c
  2755  0015D4  363B               	rlcf	___ftadd@f2,f,c
  2756  0015D6  363C               	rlcf	___ftadd@f2+1,f,c
  2757  0015D8  363D               	rlcf	___ftadd@f2+2,f,c
  2758  0015DA  0644               	decf	___ftadd@exp2,f,c
  2759  0015DC  5044               	movf	___ftadd@exp2,w,c
  2760  0015DE  1845               	xorwf	___ftadd@exp1,w,c
  2761  0015E0  B4D8               	btfsc	status,2,c
  2762  0015E2  D00B               	goto	l3220
  2763  0015E4  0643               	decf	___ftadd@sign,f,c
  2764  0015E6  5043               	movf	___ftadd@sign& (0+255),w,c
  2765  0015E8  0B07               	andlw	7
  2766  0015EA  B4D8               	btfsc	status,2,c
  2767  0015EC  D006               	goto	l3220
  2768  0015EE  D7F1               	goto	l3212
  2769  0015F0                     l3218:
  2770  0015F0  90D8               	bcf	status,0,c
  2771  0015F2  323A               	rrcf	___ftadd@f1+2,f,c
  2772  0015F4  3239               	rrcf	___ftadd@f1+1,f,c
  2773  0015F6  3238               	rrcf	___ftadd@f1,f,c
  2774  0015F8  2A45               	incf	___ftadd@exp1,f,c
  2775  0015FA                     l3220:
  2776  0015FA  5044               	movf	___ftadd@exp2,w,c
  2777  0015FC  6245               	cpfseq	___ftadd@exp1,c
  2778  0015FE  D7F8               	goto	l3218
  2779  001600  D01A               	goto	l808
  2780  001602                     l3222:
  2781  001602  5045               	movf	___ftadd@exp1,w,c
  2782  001604  6044               	cpfslt	___ftadd@exp2,c
  2783  001606  D017               	goto	l808
  2784  001608                     l3224:
  2785  001608  90D8               	bcf	status,0,c
  2786  00160A  3638               	rlcf	___ftadd@f1,f,c
  2787  00160C  3639               	rlcf	___ftadd@f1+1,f,c
  2788  00160E  363A               	rlcf	___ftadd@f1+2,f,c
  2789  001610  0645               	decf	___ftadd@exp1,f,c
  2790  001612  5044               	movf	___ftadd@exp2,w,c
  2791  001614  1845               	xorwf	___ftadd@exp1,w,c
  2792  001616  B4D8               	btfsc	status,2,c
  2793  001618  D00B               	goto	l3232
  2794  00161A  0643               	decf	___ftadd@sign,f,c
  2795  00161C  5043               	movf	___ftadd@sign& (0+255),w,c
  2796  00161E  0B07               	andlw	7
  2797  001620  B4D8               	btfsc	status,2,c
  2798  001622  D006               	goto	l3232
  2799  001624  D7F1               	goto	l3224
  2800  001626                     l3230:
  2801  001626  90D8               	bcf	status,0,c
  2802  001628  323D               	rrcf	___ftadd@f2+2,f,c
  2803  00162A  323C               	rrcf	___ftadd@f2+1,f,c
  2804  00162C  323B               	rrcf	___ftadd@f2,f,c
  2805  00162E  2A44               	incf	___ftadd@exp2,f,c
  2806  001630                     l3232:
  2807  001630  5044               	movf	___ftadd@exp2,w,c
  2808  001632  6245               	cpfseq	___ftadd@exp1,c
  2809  001634  D7F8               	goto	l3230
  2810  001636                     l808:
  2811  001636  AE43               	btfss	___ftadd@sign,7,c
  2812  001638  D00C               	goto	l817
  2813  00163A  0EFF               	movlw	255
  2814  00163C  1A38               	xorwf	___ftadd@f1,f,c
  2815  00163E  0EFF               	movlw	255
  2816  001640  1A39               	xorwf	___ftadd@f1+1,f,c
  2817  001642  0EFF               	movlw	255
  2818  001644  1A3A               	xorwf	___ftadd@f1+2,f,c
  2819  001646  0E01               	movlw	1
  2820  001648  2638               	addwf	___ftadd@f1,f,c
  2821  00164A  0E00               	movlw	0
  2822  00164C  2239               	addwfc	___ftadd@f1+1,f,c
  2823  00164E  0E00               	movlw	0
  2824  001650  223A               	addwfc	___ftadd@f1+2,f,c
  2825  001652                     l817:
  2826  001652  AC43               	btfss	___ftadd@sign,6,c
  2827  001654  D00C               	goto	l3238
  2828  001656  0EFF               	movlw	255
  2829  001658  1A3B               	xorwf	___ftadd@f2,f,c
  2830  00165A  0EFF               	movlw	255
  2831  00165C  1A3C               	xorwf	___ftadd@f2+1,f,c
  2832  00165E  0EFF               	movlw	255
  2833  001660  1A3D               	xorwf	___ftadd@f2+2,f,c
  2834  001662  0E01               	movlw	1
  2835  001664  263B               	addwf	___ftadd@f2,f,c
  2836  001666  0E00               	movlw	0
  2837  001668  223C               	addwfc	___ftadd@f2+1,f,c
  2838  00166A  0E00               	movlw	0
  2839  00166C  223D               	addwfc	___ftadd@f2+2,f,c
  2840  00166E                     l3238:
  2841  00166E  6E3E               	movwf	??___ftadd& (0+255),c
  2842  001670  0E00               	movlw	0
  2843  001672  6E43               	movwf	___ftadd@sign,c
  2844  001674  503E               	movf	??___ftadd& (0+255),w,c
  2845  001676  5038               	movf	___ftadd@f1,w,c
  2846  001678  263B               	addwf	___ftadd@f2,f,c
  2847  00167A  5039               	movf	___ftadd@f1+1,w,c
  2848  00167C  223C               	addwfc	___ftadd@f2+1,f,c
  2849  00167E  503A               	movf	___ftadd@f1+2,w,c
  2850  001680  223D               	addwfc	___ftadd@f2+2,f,c
  2851  001682  AE3D               	btfss	___ftadd@f2+2,7,c
  2852  001684  D010               	goto	l3248
  2853  001686  0EFF               	movlw	255
  2854  001688  1A3B               	xorwf	___ftadd@f2,f,c
  2855  00168A  0EFF               	movlw	255
  2856  00168C  1A3C               	xorwf	___ftadd@f2+1,f,c
  2857  00168E  0EFF               	movlw	255
  2858  001690  1A3D               	xorwf	___ftadd@f2+2,f,c
  2859  001692  0E01               	movlw	1
  2860  001694  263B               	addwf	___ftadd@f2,f,c
  2861  001696  0E00               	movlw	0
  2862  001698  223C               	addwfc	___ftadd@f2+1,f,c
  2863  00169A  0E00               	movlw	0
  2864  00169C  223D               	addwfc	___ftadd@f2+2,f,c
  2865  00169E  6E3E               	movwf	??___ftadd& (0+255),c
  2866  0016A0  0E01               	movlw	1
  2867  0016A2  6E43               	movwf	___ftadd@sign,c
  2868  0016A4  503E               	movf	??___ftadd& (0+255),w,c
  2869  0016A6                     l3248:
  2870  0016A6  C03B  F001         	movff	___ftadd@f2,?___ftpack
  2871  0016AA  C03C  F002         	movff	___ftadd@f2+1,?___ftpack+1
  2872  0016AE  C03D  F003         	movff	___ftadd@f2+2,?___ftpack+2
  2873  0016B2  C045  F004         	movff	___ftadd@exp1,?___ftpack+3
  2874  0016B6  C043  F005         	movff	___ftadd@sign,?___ftpack+4
  2875  0016BA  EC2A  F00E         	call	___ftpack	;wreg free
  2876  0016BE  C003  F03A         	movff	?___ftpack+2,?___ftadd+2
  2877  0016C2  C002  F039         	movff	?___ftpack+1,?___ftadd+1
  2878  0016C6  C001  F038         	movff	?___ftpack,?___ftadd
  2879  0016CA  0012               	return	
  2880  0016CC                     __end_of___ftadd:
  2881                           	opt stack 0
  2882                           tblptru	equ	0xFF8
  2883                           tblptrh	equ	0xFF7
  2884                           tblptrl	equ	0xFF6
  2885                           tablat	equ	0xFF5
  2886                           prodh	equ	0xFF4
  2887                           prodl	equ	0xFF3
  2888                           wreg	equ	0xFE8
  2889                           indf2	equ	0xFDF
  2890                           postinc2	equ	0xFDE
  2891                           postdec2	equ	0xFDD
  2892                           fsr2h	equ	0xFDA
  2893                           fsr2l	equ	0xFD9
  2894                           status	equ	0xFD8
  2895                           
  2896 ;; *************** function _fabs *****************
  2897 ;; Defined at:
  2898 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fabs.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  d               3   33[COMRAM] float 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  3   33[COMRAM] float 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2912 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;Total ram usage:        3 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    1
  2919 ;; This function calls:
  2920 ;;		___ftneg
  2921 ;; This function is called by:
  2922 ;;		_atan
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text13
  2927  002438                     __ptext13:
  2928                           	opt stack 0
  2929  002438                     _fabs:
  2930                           	opt stack 27
  2931                           
  2932                           ;incstack = 0
  2933                           ;incstack = 0
  2934  002438  5024               	movf	fabs@d+2,w,c
  2935  00243A  0A80               	xorlw	128
  2936  00243C  0F80               	addlw	128
  2937  00243E  E105               	bnz	u2665
  2938  002440  0E00               	movlw	0
  2939  002442  5C23               	subwf	fabs@d+1,w,c
  2940  002444  E102               	bnz	u2665
  2941  002446  0E00               	movlw	0
  2942  002448  5C22               	subwf	fabs@d,w,c
  2943  00244A                     u2665:
  2944  00244A  B0D8               	btfsc	status,0,c
  2945  00244C  D00F               	goto	l684
  2946  00244E  C022  F010         	movff	fabs@d,?___ftneg
  2947  002452  C023  F011         	movff	fabs@d+1,?___ftneg+1
  2948  002456  C024  F012         	movff	fabs@d+2,?___ftneg+2
  2949  00245A  ECCE  F012         	call	___ftneg	;wreg free
  2950  00245E  C012  F024         	movff	?___ftneg+2,?_fabs+2
  2951  002462  C011  F023         	movff	?___ftneg+1,?_fabs+1
  2952  002466  C010  F022         	movff	?___ftneg,?_fabs
  2953  00246A  0012               	return	
  2954  00246C                     l684:
  2955  00246C  C022  F022         	movff	fabs@d,?_fabs
  2956  002470  C023  F023         	movff	fabs@d+1,?_fabs+1
  2957  002474  C024  F024         	movff	fabs@d+2,?_fabs+2
  2958  002478  0012               	return	
  2959  00247A                     __end_of_fabs:
  2960                           	opt stack 0
  2961                           tblptru	equ	0xFF8
  2962                           tblptrh	equ	0xFF7
  2963                           tblptrl	equ	0xFF6
  2964                           tablat	equ	0xFF5
  2965                           prodh	equ	0xFF4
  2966                           prodl	equ	0xFF3
  2967                           wreg	equ	0xFE8
  2968                           indf2	equ	0xFDF
  2969                           postinc2	equ	0xFDE
  2970                           postdec2	equ	0xFDD
  2971                           fsr2h	equ	0xFDA
  2972                           fsr2l	equ	0xFD9
  2973                           status	equ	0xFD8
  2974                           
  2975 ;; *************** function ___asftmul *****************
  2976 ;; Defined at:
  2977 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asftmul.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  f1p             2   55[COMRAM] PTR float 
  2980 ;;		 -> atan@val(3), 
  2981 ;;  f2              3   57[COMRAM] float 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;		None
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  3   55[COMRAM] float 
  2986 ;; Registers used:
  2987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2993 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2997 ;;Total ram usage:        5 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    2
  3000 ;; This function calls:
  3001 ;;		___ftmul
  3002 ;; This function is called by:
  3003 ;;		_atan
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text14
  3008  00247A                     __ptext14:
  3009                           	opt stack 0
  3010  00247A                     ___asftmul:
  3011                           	opt stack 26
  3012                           
  3013                           ;	Return value of ___asftmul is never used
  3014                           
  3015                           ;incstack = 0
  3016                           ;incstack = 0
  3017  00247A  C038  FFD9         	movff	___asftmul@f1p,fsr2l
  3018  00247E  C039  FFDA         	movff	___asftmul@f1p+1,fsr2h
  3019  002482  CFDE F022          	movff	postinc2,?___ftmul
  3020  002486  CFDE F023          	movff	postinc2,?___ftmul+1
  3021  00248A  CFDD F024          	movff	postdec2,?___ftmul+2
  3022  00248E  C03A  F025         	movff	___asftmul@f2,?___ftmul+3
  3023  002492  C03B  F026         	movff	___asftmul@f2+1,?___ftmul+4
  3024  002496  C03C  F027         	movff	___asftmul@f2+2,?___ftmul+5
  3025  00249A  EC21  F00C         	call	___ftmul	;wreg free
  3026  00249E  C038  FFD9         	movff	___asftmul@f1p,fsr2l
  3027  0024A2  C039  FFDA         	movff	___asftmul@f1p+1,fsr2h
  3028  0024A6  C022  FFDE         	movff	?___ftmul,postinc2
  3029  0024AA  C023  FFDE         	movff	?___ftmul+1,postinc2
  3030  0024AE  C024  FFDD         	movff	?___ftmul+2,postdec2
  3031  0024B2  52DD               	movf	postdec2,f,c
  3032  0024B4  0012               	return	
  3033  0024B6                     __end_of___asftmul:
  3034                           	opt stack 0
  3035                           tblptru	equ	0xFF8
  3036                           tblptrh	equ	0xFF7
  3037                           tblptrl	equ	0xFF6
  3038                           tablat	equ	0xFF5
  3039                           prodh	equ	0xFF4
  3040                           prodl	equ	0xFF3
  3041                           wreg	equ	0xFE8
  3042                           indf2	equ	0xFDF
  3043                           postinc2	equ	0xFDE
  3044                           postdec2	equ	0xFDD
  3045                           fsr2h	equ	0xFDA
  3046                           fsr2l	equ	0xFD9
  3047                           status	equ	0xFD8
  3048                           
  3049 ;; *************** function ___ftdiv *****************
  3050 ;; Defined at:
  3051 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\ftdiv.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  f1              3   38[COMRAM] float 
  3054 ;;  f2              3   41[COMRAM] float 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  f3              3   50[COMRAM] float 
  3057 ;;  sign            1   54[COMRAM] unsigned char 
  3058 ;;  exp             1   53[COMRAM] unsigned char 
  3059 ;;  cntr            1   49[COMRAM] unsigned char 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  3   38[COMRAM] float 
  3062 ;; Registers used:
  3063 ;;		wreg, status,2, status,0, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3069 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3073 ;;Total ram usage:       17 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:    1
  3076 ;; This function calls:
  3077 ;;		___ftpack
  3078 ;; This function is called by:
  3079 ;;		_main
  3080 ;;		_atan
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text15
  3085  00195E                     __ptext15:
  3086                           	opt stack 0
  3087  00195E                     ___ftdiv:
  3088                           	opt stack 28
  3089                           
  3090                           ;incstack = 0
  3091                           ;incstack = 0
  3092  00195E  0E0F               	movlw	15
  3093  001960  6E2D               	movwf	??___ftdiv& (0+255),c
  3094  001962  C027  F02E         	movff	___ftdiv@f1,??___ftdiv+1
  3095  001966  C028  F02F         	movff	___ftdiv@f1+1,??___ftdiv+2
  3096  00196A  C029  F030         	movff	___ftdiv@f1+2,??___ftdiv+3
  3097  00196E  282D               	incf	??___ftdiv,w,c
  3098  001970  6E31               	movwf	(??___ftdiv+4)& (0+255),c
  3099  001972  D004               	goto	u2610
  3100  001974                     u2615:
  3101  001974  90D8               	bcf	status,0,c
  3102  001976  3230               	rrcf	??___ftdiv+3,f,c
  3103  001978  322F               	rrcf	??___ftdiv+2,f,c
  3104  00197A  322E               	rrcf	??___ftdiv+1,f,c
  3105  00197C                     u2610:
  3106  00197C  2E31               	decfsz	(??___ftdiv+4)& (0+255),f,c
  3107  00197E  D7FA               	goto	u2615
  3108  001980  502E               	movf	??___ftdiv+1,w,c
  3109  001982  6E36               	movwf	___ftdiv@exp,c
  3110  001984  6636               	tstfsz	___ftdiv@exp& (0+255),c
  3111  001986  D007               	goto	l3080
  3112  001988  0E00               	movlw	0
  3113  00198A  6E27               	movwf	?___ftdiv,c
  3114  00198C  0E00               	movlw	0
  3115  00198E  6E28               	movwf	?___ftdiv+1,c
  3116  001990  0E00               	movlw	0
  3117  001992  6E29               	movwf	?___ftdiv+2,c
  3118  001994  0012               	return	
  3119  001996                     l3080:
  3120  001996  0E0F               	movlw	15
  3121  001998  6E2D               	movwf	??___ftdiv& (0+255),c
  3122  00199A  C02A  F02E         	movff	___ftdiv@f2,??___ftdiv+1
  3123  00199E  C02B  F02F         	movff	___ftdiv@f2+1,??___ftdiv+2
  3124  0019A2  C02C  F030         	movff	___ftdiv@f2+2,??___ftdiv+3
  3125  0019A6  282D               	incf	??___ftdiv,w,c
  3126  0019A8  6E31               	movwf	(??___ftdiv+4)& (0+255),c
  3127  0019AA  D004               	goto	u2630
  3128  0019AC                     u2635:
  3129  0019AC  90D8               	bcf	status,0,c
  3130  0019AE  3230               	rrcf	??___ftdiv+3,f,c
  3131  0019B0  322F               	rrcf	??___ftdiv+2,f,c
  3132  0019B2  322E               	rrcf	??___ftdiv+1,f,c
  3133  0019B4                     u2630:
  3134  0019B4  2E31               	decfsz	(??___ftdiv+4)& (0+255),f,c
  3135  0019B6  D7FA               	goto	u2635
  3136  0019B8  502E               	movf	??___ftdiv+1,w,c
  3137  0019BA  6E37               	movwf	___ftdiv@sign,c
  3138  0019BC  6637               	tstfsz	___ftdiv@sign& (0+255),c
  3139  0019BE  D007               	goto	l3086
  3140  0019C0  0E00               	movlw	0
  3141  0019C2  6E27               	movwf	?___ftdiv,c
  3142  0019C4  0E00               	movlw	0
  3143  0019C6  6E28               	movwf	?___ftdiv+1,c
  3144  0019C8  0E00               	movlw	0
  3145  0019CA  6E29               	movwf	?___ftdiv+2,c
  3146  0019CC  0012               	return	
  3147  0019CE                     l3086:
  3148  0019CE  0E00               	movlw	0
  3149  0019D0  6E33               	movwf	___ftdiv@f3,c
  3150  0019D2  0E00               	movlw	0
  3151  0019D4  6E34               	movwf	___ftdiv@f3+1,c
  3152  0019D6  0E00               	movlw	0
  3153  0019D8  6E35               	movwf	___ftdiv@f3+2,c
  3154  0019DA  5037               	movf	___ftdiv@sign,w,c
  3155  0019DC  0F89               	addlw	137
  3156  0019DE  5E36               	subwf	___ftdiv@exp,f,c
  3157  0019E0  C029  F037         	movff	___ftdiv@f1+2,___ftdiv@sign
  3158  0019E4  502C               	movf	(___ftdiv@f2+2)& (0+255),w,c
  3159  0019E6  1A37               	xorwf	___ftdiv@sign,f,c
  3160  0019E8  0E80               	movlw	128
  3161  0019EA  1637               	andwf	___ftdiv@sign,f,c
  3162  0019EC  8E28               	bsf	___ftdiv@f1+1,7,c
  3163  0019EE  0EFF               	movlw	255
  3164  0019F0  1627               	andwf	___ftdiv@f1,f,c
  3165  0019F2  0EFF               	movlw	255
  3166  0019F4  1628               	andwf	___ftdiv@f1+1,f,c
  3167  0019F6  0E00               	movlw	0
  3168  0019F8  1629               	andwf	___ftdiv@f1+2,f,c
  3169  0019FA  8E2B               	bsf	___ftdiv@f2+1,7,c
  3170  0019FC  0EFF               	movlw	255
  3171  0019FE  162A               	andwf	___ftdiv@f2,f,c
  3172  001A00  0EFF               	movlw	255
  3173  001A02  162B               	andwf	___ftdiv@f2+1,f,c
  3174  001A04  0E00               	movlw	0
  3175  001A06  162C               	andwf	___ftdiv@f2+2,f,c
  3176  001A08  6E2D               	movwf	??___ftdiv& (0+255),c
  3177  001A0A  0E18               	movlw	24
  3178  001A0C  6E32               	movwf	___ftdiv@cntr,c
  3179  001A0E  502D               	movf	??___ftdiv& (0+255),w,c
  3180  001A10                     l827:
  3181  001A10  90D8               	bcf	status,0,c
  3182  001A12  3633               	rlcf	___ftdiv@f3,f,c
  3183  001A14  3634               	rlcf	___ftdiv@f3+1,f,c
  3184  001A16  3635               	rlcf	___ftdiv@f3+2,f,c
  3185  001A18  502A               	movf	___ftdiv@f2,w,c
  3186  001A1A  5C27               	subwf	___ftdiv@f1,w,c
  3187  001A1C  502B               	movf	___ftdiv@f2+1,w,c
  3188  001A1E  5828               	subwfb	___ftdiv@f1+1,w,c
  3189  001A20  502C               	movf	___ftdiv@f2+2,w,c
  3190  001A22  5829               	subwfb	___ftdiv@f1+2,w,c
  3191  001A24  A0D8               	btfss	status,0,c
  3192  001A26  D007               	goto	l828
  3193  001A28  502A               	movf	___ftdiv@f2,w,c
  3194  001A2A  5E27               	subwf	___ftdiv@f1,f,c
  3195  001A2C  502B               	movf	___ftdiv@f2+1,w,c
  3196  001A2E  5A28               	subwfb	___ftdiv@f1+1,f,c
  3197  001A30  502C               	movf	___ftdiv@f2+2,w,c
  3198  001A32  5A29               	subwfb	___ftdiv@f1+2,f,c
  3199  001A34  8033               	bsf	___ftdiv@f3,0,c
  3200  001A36                     l828:
  3201  001A36  90D8               	bcf	status,0,c
  3202  001A38  3627               	rlcf	___ftdiv@f1,f,c
  3203  001A3A  3628               	rlcf	___ftdiv@f1+1,f,c
  3204  001A3C  3629               	rlcf	___ftdiv@f1+2,f,c
  3205  001A3E  2E32               	decfsz	___ftdiv@cntr,f,c
  3206  001A40  D7E7               	goto	l827
  3207  001A42  C033  F001         	movff	___ftdiv@f3,?___ftpack
  3208  001A46  C034  F002         	movff	___ftdiv@f3+1,?___ftpack+1
  3209  001A4A  C035  F003         	movff	___ftdiv@f3+2,?___ftpack+2
  3210  001A4E  C036  F004         	movff	___ftdiv@exp,?___ftpack+3
  3211  001A52  C037  F005         	movff	___ftdiv@sign,?___ftpack+4
  3212  001A56  EC2A  F00E         	call	___ftpack	;wreg free
  3213  001A5A  C003  F029         	movff	?___ftpack+2,?___ftdiv+2
  3214  001A5E  C002  F028         	movff	?___ftpack+1,?___ftdiv+1
  3215  001A62  C001  F027         	movff	?___ftpack,?___ftdiv
  3216  001A66  0012               	return	
  3217  001A68                     __end_of___ftdiv:
  3218                           	opt stack 0
  3219                           tblptru	equ	0xFF8
  3220                           tblptrh	equ	0xFF7
  3221                           tblptrl	equ	0xFF6
  3222                           tablat	equ	0xFF5
  3223                           prodh	equ	0xFF4
  3224                           prodl	equ	0xFF3
  3225                           wreg	equ	0xFE8
  3226                           indf2	equ	0xFDF
  3227                           postinc2	equ	0xFDE
  3228                           postdec2	equ	0xFDD
  3229                           fsr2h	equ	0xFDA
  3230                           fsr2l	equ	0xFD9
  3231                           status	equ	0xFD8
  3232                           
  3233 ;; *************** function ___ftpack *****************
  3234 ;; Defined at:
  3235 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\float.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;  arg             3    0[COMRAM] unsigned um
  3238 ;;  exp             1    3[COMRAM] unsigned char 
  3239 ;;  sign            1    4[COMRAM] unsigned char 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;		None
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  3    0[COMRAM] float 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3251 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;Total ram usage:        8 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		___awtoft
  3261 ;;		___ftadd
  3262 ;;		___ftdiv
  3263 ;;		___ftmul
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text16
  3268  001C54                     __ptext16:
  3269                           	opt stack 0
  3270  001C54                     ___ftpack:
  3271                           	opt stack 28
  3272                           
  3273                           ;incstack = 0
  3274                           ;incstack = 0
  3275  001C54  5004               	movf	___ftpack@exp,w,c
  3276  001C56  B4D8               	btfsc	status,2,c
  3277  001C58  D005               	goto	l2704
  3278  001C5A  5001               	movf	___ftpack@arg,w,c
  3279  001C5C  1002               	iorwf	___ftpack@arg+1,w,c
  3280  001C5E  1003               	iorwf	___ftpack@arg+2,w,c
  3281  001C60  A4D8               	btfss	status,2,c
  3282  001C62  D00C               	goto	l2710
  3283  001C64                     l2704:
  3284  001C64  0E00               	movlw	0
  3285  001C66  6E01               	movwf	?___ftpack,c
  3286  001C68  0E00               	movlw	0
  3287  001C6A  6E02               	movwf	?___ftpack+1,c
  3288  001C6C  0E00               	movlw	0
  3289  001C6E  6E03               	movwf	?___ftpack+2,c
  3290  001C70  0012               	return	
  3291  001C72                     l2708:
  3292  001C72  2A04               	incf	___ftpack@exp,f,c
  3293  001C74  90D8               	bcf	status,0,c
  3294  001C76  3203               	rrcf	___ftpack@arg+2,f,c
  3295  001C78  3202               	rrcf	___ftpack@arg+1,f,c
  3296  001C7A  3201               	rrcf	___ftpack@arg,f,c
  3297  001C7C                     l2710:
  3298  001C7C  0E00               	movlw	0
  3299  001C7E  1401               	andwf	___ftpack@arg,w,c
  3300  001C80  6E06               	movwf	??___ftpack& (0+255),c
  3301  001C82  0E00               	movlw	0
  3302  001C84  1402               	andwf	___ftpack@arg+1,w,c
  3303  001C86  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3304  001C88  0EFE               	movlw	254
  3305  001C8A  1403               	andwf	___ftpack@arg+2,w,c
  3306  001C8C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3307  001C8E  5006               	movf	??___ftpack,w,c
  3308  001C90  1007               	iorwf	??___ftpack+1,w,c
  3309  001C92  1008               	iorwf	??___ftpack+2,w,c
  3310  001C94  B4D8               	btfsc	status,2,c
  3311  001C96  D00C               	goto	l2716
  3312  001C98  D7EC               	goto	l2708
  3313  001C9A                     l2712:
  3314  001C9A  2A04               	incf	___ftpack@exp,f,c
  3315  001C9C  0E01               	movlw	1
  3316  001C9E  2601               	addwf	___ftpack@arg,f,c
  3317  001CA0  0E00               	movlw	0
  3318  001CA2  2202               	addwfc	___ftpack@arg+1,f,c
  3319  001CA4  0E00               	movlw	0
  3320  001CA6  2203               	addwfc	___ftpack@arg+2,f,c
  3321  001CA8  90D8               	bcf	status,0,c
  3322  001CAA  3203               	rrcf	___ftpack@arg+2,f,c
  3323  001CAC  3202               	rrcf	___ftpack@arg+1,f,c
  3324  001CAE  3201               	rrcf	___ftpack@arg,f,c
  3325  001CB0                     l2716:
  3326  001CB0  0E00               	movlw	0
  3327  001CB2  1401               	andwf	___ftpack@arg,w,c
  3328  001CB4  6E06               	movwf	??___ftpack& (0+255),c
  3329  001CB6  0E00               	movlw	0
  3330  001CB8  1402               	andwf	___ftpack@arg+1,w,c
  3331  001CBA  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3332  001CBC  0EFF               	movlw	255
  3333  001CBE  1403               	andwf	___ftpack@arg+2,w,c
  3334  001CC0  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3335  001CC2  5006               	movf	??___ftpack,w,c
  3336  001CC4  1007               	iorwf	??___ftpack+1,w,c
  3337  001CC6  1008               	iorwf	??___ftpack+2,w,c
  3338  001CC8  B4D8               	btfsc	status,2,c
  3339  001CCA  D006               	goto	l2720
  3340  001CCC  D7E6               	goto	l2712
  3341  001CCE                     l2718:
  3342  001CCE  0604               	decf	___ftpack@exp,f,c
  3343  001CD0  90D8               	bcf	status,0,c
  3344  001CD2  3601               	rlcf	___ftpack@arg,f,c
  3345  001CD4  3602               	rlcf	___ftpack@arg+1,f,c
  3346  001CD6  3603               	rlcf	___ftpack@arg+2,f,c
  3347  001CD8                     l2720:
  3348  001CD8  AE02               	btfss	___ftpack@arg+1,7,c
  3349  001CDA  D7F9               	goto	l2718
  3350  001CDC  A004               	btfss	___ftpack@exp,0,c
  3351  001CDE  9E02               	bcf	___ftpack@arg+1,7,c
  3352  001CE0  90D8               	bcf	status,0,c
  3353  001CE2  3204               	rrcf	___ftpack@exp,f,c
  3354  001CE4  5004               	movf	___ftpack@exp,w,c
  3355  001CE6  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3356  001CE8  6A07               	clrf	(??___ftpack+1)& (0+255),c
  3357  001CEA  6A06               	clrf	??___ftpack& (0+255),c
  3358  001CEC  5006               	movf	??___ftpack,w,c
  3359  001CEE  1201               	iorwf	___ftpack@arg,f,c
  3360  001CF0  5007               	movf	??___ftpack+1,w,c
  3361  001CF2  1202               	iorwf	___ftpack@arg+1,f,c
  3362  001CF4  5008               	movf	??___ftpack+2,w,c
  3363  001CF6  1203               	iorwf	___ftpack@arg+2,f,c
  3364  001CF8  5005               	movf	___ftpack@sign,w,c
  3365  001CFA  A4D8               	btfss	status,2,c
  3366  001CFC  8E03               	bsf	___ftpack@arg+2,7,c
  3367  001CFE  C001  F001         	movff	___ftpack@arg,?___ftpack
  3368  001D02  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3369  001D06  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3370  001D0A  0012               	return	
  3371  001D0C                     __end_of___ftpack:
  3372                           	opt stack 0
  3373                           tblptru	equ	0xFF8
  3374                           tblptrh	equ	0xFF7
  3375                           tblptrl	equ	0xFF6
  3376                           tablat	equ	0xFF5
  3377                           prodh	equ	0xFF4
  3378                           prodl	equ	0xFF3
  3379                           wreg	equ	0xFE8
  3380                           indf2	equ	0xFDF
  3381                           postinc2	equ	0xFDE
  3382                           postdec2	equ	0xFDD
  3383                           fsr2h	equ	0xFDA
  3384                           fsr2l	equ	0xFD9
  3385                           status	equ	0xFD8
  3386                           
  3387 ;; *************** function _readLSM9_mag *****************
  3388 ;; Defined at:
  3389 ;;		line 181 in file "LSM9DS0.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  dest            2    7[COMRAM] PTR unsigned int 
  3392 ;;		 -> main@mag(6), 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;		None               void
  3397 ;; Registers used:
  3398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;Total ram usage:        8 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:    3
  3411 ;; This function calls:
  3412 ;;		_xmReadByte
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text17
  3419  001D0C                     __ptext17:
  3420                           	opt stack 0
  3421  001D0C                     _readLSM9_mag:
  3422                           	opt stack 26
  3423                           
  3424                           ;LSM9DS0.c: 183: dest[0] = (xmReadByte(0x09) << 8) | xmReadByte(0x08);
  3425                           
  3426                           ;incstack = 0
  3427                           ;incstack = 0
  3428  001D0C  6E0A               	movwf	??_readLSM9_mag& (0+255),c
  3429  001D0E  0E09               	movlw	9
  3430  001D10  6E07               	movwf	?_xmReadByte,c
  3431  001D12  500A               	movf	??_readLSM9_mag& (0+255),w,c
  3432  001D14  EC0B  F013         	call	_xmReadByte	;wreg free
  3433  001D18  6E0B               	movwf	(??_readLSM9_mag+1)& (0+255),c
  3434  001D1A  500B               	movf	??_readLSM9_mag+1,w,c
  3435  001D1C  6E0D               	movwf	(??_readLSM9_mag+3)& (0+255),c
  3436  001D1E  6A0C               	clrf	(??_readLSM9_mag+2)& (0+255),c
  3437  001D20  6E0E               	movwf	(??_readLSM9_mag+4)& (0+255),c
  3438  001D22  0E08               	movlw	8
  3439  001D24  6E07               	movwf	?_xmReadByte,c
  3440  001D26  500E               	movf	(??_readLSM9_mag+4)& (0+255),w,c
  3441  001D28  EC0B  F013         	call	_xmReadByte	;wreg free
  3442  001D2C  6E0F               	movwf	(??_readLSM9_mag+5)& (0+255),c
  3443  001D2E  500F               	movf	??_readLSM9_mag+5,w,c
  3444  001D30  120C               	iorwf	??_readLSM9_mag+2,f,c
  3445  001D32  0E00               	movlw	0
  3446  001D34  120D               	iorwf	??_readLSM9_mag+3,f,c
  3447  001D36  C008  FFD9         	movff	readLSM9_mag@dest,fsr2l
  3448  001D3A  C009  FFDA         	movff	readLSM9_mag@dest+1,fsr2h
  3449  001D3E  C00C  FFDE         	movff	??_readLSM9_mag+2,postinc2
  3450  001D42  C00D  FFDD         	movff	??_readLSM9_mag+3,postdec2
  3451                           
  3452                           ;LSM9DS0.c: 184: dest[1] = (xmReadByte(0x0B) << 8) | xmReadByte(0x0A);
  3453  001D46  6E0A               	movwf	??_readLSM9_mag& (0+255),c
  3454  001D48  0E0B               	movlw	11
  3455  001D4A  6E07               	movwf	?_xmReadByte,c
  3456  001D4C  500A               	movf	??_readLSM9_mag& (0+255),w,c
  3457  001D4E  EC0B  F013         	call	_xmReadByte	;wreg free
  3458  001D52  6E0B               	movwf	(??_readLSM9_mag+1)& (0+255),c
  3459  001D54  500B               	movf	??_readLSM9_mag+1,w,c
  3460  001D56  6E0D               	movwf	(??_readLSM9_mag+3)& (0+255),c
  3461  001D58  6A0C               	clrf	(??_readLSM9_mag+2)& (0+255),c
  3462  001D5A  6E0E               	movwf	(??_readLSM9_mag+4)& (0+255),c
  3463  001D5C  0E0A               	movlw	10
  3464  001D5E  6E07               	movwf	?_xmReadByte,c
  3465  001D60  500E               	movf	(??_readLSM9_mag+4)& (0+255),w,c
  3466  001D62  EC0B  F013         	call	_xmReadByte	;wreg free
  3467  001D66  6E0F               	movwf	(??_readLSM9_mag+5)& (0+255),c
  3468  001D68  500F               	movf	??_readLSM9_mag+5,w,c
  3469  001D6A  120C               	iorwf	??_readLSM9_mag+2,f,c
  3470  001D6C  0E00               	movlw	0
  3471  001D6E  120D               	iorwf	??_readLSM9_mag+3,f,c
  3472  001D70  EE20 F002          	lfsr	2,2
  3473  001D74  5008               	movf	readLSM9_mag@dest,w,c
  3474  001D76  26D9               	addwf	fsr2l,f,c
  3475  001D78  5009               	movf	readLSM9_mag@dest+1,w,c
  3476  001D7A  22DA               	addwfc	fsr2h,f,c
  3477  001D7C  C00C  FFDE         	movff	??_readLSM9_mag+2,postinc2
  3478  001D80  C00D  FFDD         	movff	??_readLSM9_mag+3,postdec2
  3479                           
  3480                           ;LSM9DS0.c: 185: dest[2] = (xmReadByte(0x0D) << 8) | xmReadByte(0x0C);
  3481  001D84  6E0A               	movwf	??_readLSM9_mag& (0+255),c
  3482  001D86  0E0D               	movlw	13
  3483  001D88  6E07               	movwf	?_xmReadByte,c
  3484  001D8A  500A               	movf	??_readLSM9_mag& (0+255),w,c
  3485  001D8C  EC0B  F013         	call	_xmReadByte	;wreg free
  3486  001D90  6E0B               	movwf	(??_readLSM9_mag+1)& (0+255),c
  3487  001D92  500B               	movf	??_readLSM9_mag+1,w,c
  3488  001D94  6E0D               	movwf	(??_readLSM9_mag+3)& (0+255),c
  3489  001D96  6A0C               	clrf	(??_readLSM9_mag+2)& (0+255),c
  3490  001D98  6E0E               	movwf	(??_readLSM9_mag+4)& (0+255),c
  3491  001D9A  0E0C               	movlw	12
  3492  001D9C  6E07               	movwf	?_xmReadByte,c
  3493  001D9E  500E               	movf	(??_readLSM9_mag+4)& (0+255),w,c
  3494  001DA0  EC0B  F013         	call	_xmReadByte	;wreg free
  3495  001DA4  6E0F               	movwf	(??_readLSM9_mag+5)& (0+255),c
  3496  001DA6  500F               	movf	??_readLSM9_mag+5,w,c
  3497  001DA8  120C               	iorwf	??_readLSM9_mag+2,f,c
  3498  001DAA  0E00               	movlw	0
  3499  001DAC  120D               	iorwf	??_readLSM9_mag+3,f,c
  3500  001DAE  EE20 F004          	lfsr	2,4
  3501  001DB2  5008               	movf	readLSM9_mag@dest,w,c
  3502  001DB4  26D9               	addwf	fsr2l,f,c
  3503  001DB6  5009               	movf	readLSM9_mag@dest+1,w,c
  3504  001DB8  22DA               	addwfc	fsr2h,f,c
  3505  001DBA  C00C  FFDE         	movff	??_readLSM9_mag+2,postinc2
  3506  001DBE  C00D  FFDD         	movff	??_readLSM9_mag+3,postdec2
  3507  001DC2  0012               	return	
  3508  001DC4                     __end_of_readLSM9_mag:
  3509                           	opt stack 0
  3510                           tblptru	equ	0xFF8
  3511                           tblptrh	equ	0xFF7
  3512                           tblptrl	equ	0xFF6
  3513                           tablat	equ	0xFF5
  3514                           prodh	equ	0xFF4
  3515                           prodl	equ	0xFF3
  3516                           wreg	equ	0xFE8
  3517                           indf2	equ	0xFDF
  3518                           postinc2	equ	0xFDE
  3519                           postdec2	equ	0xFDD
  3520                           fsr2h	equ	0xFDA
  3521                           fsr2l	equ	0xFD9
  3522                           status	equ	0xFD8
  3523                           
  3524 ;; *************** function _readLSM9_gyro *****************
  3525 ;; Defined at:
  3526 ;;		line 188 in file "LSM9DS0.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  dest            2    7[COMRAM] PTR unsigned int 
  3529 ;;		 -> main@gyro(6), 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;		None
  3532 ;; Return value:  Size  Location     Type
  3533 ;;		None               void
  3534 ;; Registers used:
  3535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3541 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;Total ram usage:        8 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    3
  3548 ;; This function calls:
  3549 ;;		_gReadByte
  3550 ;; This function is called by:
  3551 ;;		_main
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text18
  3556  001DC4                     __ptext18:
  3557                           	opt stack 0
  3558  001DC4                     _readLSM9_gyro:
  3559                           	opt stack 26
  3560                           
  3561                           ;LSM9DS0.c: 190: dest[0] = (gReadByte(0x29) << 8) | gReadByte(0x28);
  3562                           
  3563                           ;incstack = 0
  3564                           ;incstack = 0
  3565  001DC4  6E0A               	movwf	??_readLSM9_gyro& (0+255),c
  3566  001DC6  0E29               	movlw	41
  3567  001DC8  6E07               	movwf	?_gReadByte,c
  3568  001DCA  500A               	movf	??_readLSM9_gyro& (0+255),w,c
  3569  001DCC  EC03  F013         	call	_gReadByte	;wreg free
  3570  001DD0  6E0B               	movwf	(??_readLSM9_gyro+1)& (0+255),c
  3571  001DD2  500B               	movf	??_readLSM9_gyro+1,w,c
  3572  001DD4  6E0D               	movwf	(??_readLSM9_gyro+3)& (0+255),c
  3573  001DD6  6A0C               	clrf	(??_readLSM9_gyro+2)& (0+255),c
  3574  001DD8  6E0E               	movwf	(??_readLSM9_gyro+4)& (0+255),c
  3575  001DDA  0E28               	movlw	40
  3576  001DDC  6E07               	movwf	?_gReadByte,c
  3577  001DDE  500E               	movf	(??_readLSM9_gyro+4)& (0+255),w,c
  3578  001DE0  EC03  F013         	call	_gReadByte	;wreg free
  3579  001DE4  6E0F               	movwf	(??_readLSM9_gyro+5)& (0+255),c
  3580  001DE6  500F               	movf	??_readLSM9_gyro+5,w,c
  3581  001DE8  120C               	iorwf	??_readLSM9_gyro+2,f,c
  3582  001DEA  0E00               	movlw	0
  3583  001DEC  120D               	iorwf	??_readLSM9_gyro+3,f,c
  3584  001DEE  C008  FFD9         	movff	readLSM9_gyro@dest,fsr2l
  3585  001DF2  C009  FFDA         	movff	readLSM9_gyro@dest+1,fsr2h
  3586  001DF6  C00C  FFDE         	movff	??_readLSM9_gyro+2,postinc2
  3587  001DFA  C00D  FFDD         	movff	??_readLSM9_gyro+3,postdec2
  3588                           
  3589                           ;LSM9DS0.c: 191: dest[1] = (gReadByte(0x2B) << 8) | gReadByte(0x2A);
  3590  001DFE  6E0A               	movwf	??_readLSM9_gyro& (0+255),c
  3591  001E00  0E2B               	movlw	43
  3592  001E02  6E07               	movwf	?_gReadByte,c
  3593  001E04  500A               	movf	??_readLSM9_gyro& (0+255),w,c
  3594  001E06  EC03  F013         	call	_gReadByte	;wreg free
  3595  001E0A  6E0B               	movwf	(??_readLSM9_gyro+1)& (0+255),c
  3596  001E0C  500B               	movf	??_readLSM9_gyro+1,w,c
  3597  001E0E  6E0D               	movwf	(??_readLSM9_gyro+3)& (0+255),c
  3598  001E10  6A0C               	clrf	(??_readLSM9_gyro+2)& (0+255),c
  3599  001E12  6E0E               	movwf	(??_readLSM9_gyro+4)& (0+255),c
  3600  001E14  0E2A               	movlw	42
  3601  001E16  6E07               	movwf	?_gReadByte,c
  3602  001E18  500E               	movf	(??_readLSM9_gyro+4)& (0+255),w,c
  3603  001E1A  EC03  F013         	call	_gReadByte	;wreg free
  3604  001E1E  6E0F               	movwf	(??_readLSM9_gyro+5)& (0+255),c
  3605  001E20  500F               	movf	??_readLSM9_gyro+5,w,c
  3606  001E22  120C               	iorwf	??_readLSM9_gyro+2,f,c
  3607  001E24  0E00               	movlw	0
  3608  001E26  120D               	iorwf	??_readLSM9_gyro+3,f,c
  3609  001E28  EE20 F002          	lfsr	2,2
  3610  001E2C  5008               	movf	readLSM9_gyro@dest,w,c
  3611  001E2E  26D9               	addwf	fsr2l,f,c
  3612  001E30  5009               	movf	readLSM9_gyro@dest+1,w,c
  3613  001E32  22DA               	addwfc	fsr2h,f,c
  3614  001E34  C00C  FFDE         	movff	??_readLSM9_gyro+2,postinc2
  3615  001E38  C00D  FFDD         	movff	??_readLSM9_gyro+3,postdec2
  3616                           
  3617                           ;LSM9DS0.c: 192: dest[2] = (gReadByte(0x2D) << 8) | gReadByte(0x2C);
  3618  001E3C  6E0A               	movwf	??_readLSM9_gyro& (0+255),c
  3619  001E3E  0E2D               	movlw	45
  3620  001E40  6E07               	movwf	?_gReadByte,c
  3621  001E42  500A               	movf	??_readLSM9_gyro& (0+255),w,c
  3622  001E44  EC03  F013         	call	_gReadByte	;wreg free
  3623  001E48  6E0B               	movwf	(??_readLSM9_gyro+1)& (0+255),c
  3624  001E4A  500B               	movf	??_readLSM9_gyro+1,w,c
  3625  001E4C  6E0D               	movwf	(??_readLSM9_gyro+3)& (0+255),c
  3626  001E4E  6A0C               	clrf	(??_readLSM9_gyro+2)& (0+255),c
  3627  001E50  6E0E               	movwf	(??_readLSM9_gyro+4)& (0+255),c
  3628  001E52  0E2C               	movlw	44
  3629  001E54  6E07               	movwf	?_gReadByte,c
  3630  001E56  500E               	movf	(??_readLSM9_gyro+4)& (0+255),w,c
  3631  001E58  EC03  F013         	call	_gReadByte	;wreg free
  3632  001E5C  6E0F               	movwf	(??_readLSM9_gyro+5)& (0+255),c
  3633  001E5E  500F               	movf	??_readLSM9_gyro+5,w,c
  3634  001E60  120C               	iorwf	??_readLSM9_gyro+2,f,c
  3635  001E62  0E00               	movlw	0
  3636  001E64  120D               	iorwf	??_readLSM9_gyro+3,f,c
  3637  001E66  EE20 F004          	lfsr	2,4
  3638  001E6A  5008               	movf	readLSM9_gyro@dest,w,c
  3639  001E6C  26D9               	addwf	fsr2l,f,c
  3640  001E6E  5009               	movf	readLSM9_gyro@dest+1,w,c
  3641  001E70  22DA               	addwfc	fsr2h,f,c
  3642  001E72  C00C  FFDE         	movff	??_readLSM9_gyro+2,postinc2
  3643  001E76  C00D  FFDD         	movff	??_readLSM9_gyro+3,postdec2
  3644  001E7A  0012               	return	
  3645  001E7C                     __end_of_readLSM9_gyro:
  3646                           	opt stack 0
  3647                           tblptru	equ	0xFF8
  3648                           tblptrh	equ	0xFF7
  3649                           tblptrl	equ	0xFF6
  3650                           tablat	equ	0xFF5
  3651                           prodh	equ	0xFF4
  3652                           prodl	equ	0xFF3
  3653                           wreg	equ	0xFE8
  3654                           indf2	equ	0xFDF
  3655                           postinc2	equ	0xFDE
  3656                           postdec2	equ	0xFDD
  3657                           fsr2h	equ	0xFDA
  3658                           fsr2l	equ	0xFD9
  3659                           status	equ	0xFD8
  3660                           
  3661 ;; *************** function _readLSM9_accel *****************
  3662 ;; Defined at:
  3663 ;;		line 174 in file "LSM9DS0.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  dest            2    7[COMRAM] PTR unsigned int 
  3666 ;;		 -> main@accel(6), 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;		None
  3669 ;; Return value:  Size  Location     Type
  3670 ;;		None               void
  3671 ;; Registers used:
  3672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;Total ram usage:        8 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    3
  3685 ;; This function calls:
  3686 ;;		_xmReadByte
  3687 ;; This function is called by:
  3688 ;;		_main
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text19
  3693  001E7C                     __ptext19:
  3694                           	opt stack 0
  3695  001E7C                     _readLSM9_accel:
  3696                           	opt stack 26
  3697                           
  3698                           ;LSM9DS0.c: 176: dest[0] = (xmReadByte(0x29) << 8) | xmReadByte(0x28);
  3699                           
  3700                           ;incstack = 0
  3701                           ;incstack = 0
  3702  001E7C  6E0A               	movwf	??_readLSM9_accel& (0+255),c
  3703  001E7E  0E29               	movlw	41
  3704  001E80  6E07               	movwf	?_xmReadByte,c
  3705  001E82  500A               	movf	??_readLSM9_accel& (0+255),w,c
  3706  001E84  EC0B  F013         	call	_xmReadByte	;wreg free
  3707  001E88  6E0B               	movwf	(??_readLSM9_accel+1)& (0+255),c
  3708  001E8A  500B               	movf	??_readLSM9_accel+1,w,c
  3709  001E8C  6E0D               	movwf	(??_readLSM9_accel+3)& (0+255),c
  3710  001E8E  6A0C               	clrf	(??_readLSM9_accel+2)& (0+255),c
  3711  001E90  6E0E               	movwf	(??_readLSM9_accel+4)& (0+255),c
  3712  001E92  0E28               	movlw	40
  3713  001E94  6E07               	movwf	?_xmReadByte,c
  3714  001E96  500E               	movf	(??_readLSM9_accel+4)& (0+255),w,c
  3715  001E98  EC0B  F013         	call	_xmReadByte	;wreg free
  3716  001E9C  6E0F               	movwf	(??_readLSM9_accel+5)& (0+255),c
  3717  001E9E  500F               	movf	??_readLSM9_accel+5,w,c
  3718  001EA0  120C               	iorwf	??_readLSM9_accel+2,f,c
  3719  001EA2  0E00               	movlw	0
  3720  001EA4  120D               	iorwf	??_readLSM9_accel+3,f,c
  3721  001EA6  C008  FFD9         	movff	readLSM9_accel@dest,fsr2l
  3722  001EAA  C009  FFDA         	movff	readLSM9_accel@dest+1,fsr2h
  3723  001EAE  C00C  FFDE         	movff	??_readLSM9_accel+2,postinc2
  3724  001EB2  C00D  FFDD         	movff	??_readLSM9_accel+3,postdec2
  3725                           
  3726                           ;LSM9DS0.c: 177: dest[1] = (xmReadByte(0x2B) << 8) | xmReadByte(0x2A);
  3727  001EB6  6E0A               	movwf	??_readLSM9_accel& (0+255),c
  3728  001EB8  0E2B               	movlw	43
  3729  001EBA  6E07               	movwf	?_xmReadByte,c
  3730  001EBC  500A               	movf	??_readLSM9_accel& (0+255),w,c
  3731  001EBE  EC0B  F013         	call	_xmReadByte	;wreg free
  3732  001EC2  6E0B               	movwf	(??_readLSM9_accel+1)& (0+255),c
  3733  001EC4  500B               	movf	??_readLSM9_accel+1,w,c
  3734  001EC6  6E0D               	movwf	(??_readLSM9_accel+3)& (0+255),c
  3735  001EC8  6A0C               	clrf	(??_readLSM9_accel+2)& (0+255),c
  3736  001ECA  6E0E               	movwf	(??_readLSM9_accel+4)& (0+255),c
  3737  001ECC  0E2A               	movlw	42
  3738  001ECE  6E07               	movwf	?_xmReadByte,c
  3739  001ED0  500E               	movf	(??_readLSM9_accel+4)& (0+255),w,c
  3740  001ED2  EC0B  F013         	call	_xmReadByte	;wreg free
  3741  001ED6  6E0F               	movwf	(??_readLSM9_accel+5)& (0+255),c
  3742  001ED8  500F               	movf	??_readLSM9_accel+5,w,c
  3743  001EDA  120C               	iorwf	??_readLSM9_accel+2,f,c
  3744  001EDC  0E00               	movlw	0
  3745  001EDE  120D               	iorwf	??_readLSM9_accel+3,f,c
  3746  001EE0  EE20 F002          	lfsr	2,2
  3747  001EE4  5008               	movf	readLSM9_accel@dest,w,c
  3748  001EE6  26D9               	addwf	fsr2l,f,c
  3749  001EE8  5009               	movf	readLSM9_accel@dest+1,w,c
  3750  001EEA  22DA               	addwfc	fsr2h,f,c
  3751  001EEC  C00C  FFDE         	movff	??_readLSM9_accel+2,postinc2
  3752  001EF0  C00D  FFDD         	movff	??_readLSM9_accel+3,postdec2
  3753                           
  3754                           ;LSM9DS0.c: 178: dest[2] = (xmReadByte(0x2D) << 8) | xmReadByte(0x2C);
  3755  001EF4  6E0A               	movwf	??_readLSM9_accel& (0+255),c
  3756  001EF6  0E2D               	movlw	45
  3757  001EF8  6E07               	movwf	?_xmReadByte,c
  3758  001EFA  500A               	movf	??_readLSM9_accel& (0+255),w,c
  3759  001EFC  EC0B  F013         	call	_xmReadByte	;wreg free
  3760  001F00  6E0B               	movwf	(??_readLSM9_accel+1)& (0+255),c
  3761  001F02  500B               	movf	??_readLSM9_accel+1,w,c
  3762  001F04  6E0D               	movwf	(??_readLSM9_accel+3)& (0+255),c
  3763  001F06  6A0C               	clrf	(??_readLSM9_accel+2)& (0+255),c
  3764  001F08  6E0E               	movwf	(??_readLSM9_accel+4)& (0+255),c
  3765  001F0A  0E2C               	movlw	44
  3766  001F0C  6E07               	movwf	?_xmReadByte,c
  3767  001F0E  500E               	movf	(??_readLSM9_accel+4)& (0+255),w,c
  3768  001F10  EC0B  F013         	call	_xmReadByte	;wreg free
  3769  001F14  6E0F               	movwf	(??_readLSM9_accel+5)& (0+255),c
  3770  001F16  500F               	movf	??_readLSM9_accel+5,w,c
  3771  001F18  120C               	iorwf	??_readLSM9_accel+2,f,c
  3772  001F1A  0E00               	movlw	0
  3773  001F1C  120D               	iorwf	??_readLSM9_accel+3,f,c
  3774  001F1E  EE20 F004          	lfsr	2,4
  3775  001F22  5008               	movf	readLSM9_accel@dest,w,c
  3776  001F24  26D9               	addwf	fsr2l,f,c
  3777  001F26  5009               	movf	readLSM9_accel@dest+1,w,c
  3778  001F28  22DA               	addwfc	fsr2h,f,c
  3779  001F2A  C00C  FFDE         	movff	??_readLSM9_accel+2,postinc2
  3780  001F2E  C00D  FFDD         	movff	??_readLSM9_accel+3,postdec2
  3781  001F32  0012               	return	
  3782  001F34                     __end_of_readLSM9_accel:
  3783                           	opt stack 0
  3784                           tblptru	equ	0xFF8
  3785                           tblptrh	equ	0xFF7
  3786                           tblptrl	equ	0xFF6
  3787                           tablat	equ	0xFF5
  3788                           prodh	equ	0xFF4
  3789                           prodl	equ	0xFF3
  3790                           wreg	equ	0xFE8
  3791                           indf2	equ	0xFDF
  3792                           postinc2	equ	0xFDE
  3793                           postdec2	equ	0xFDD
  3794                           fsr2h	equ	0xFDA
  3795                           fsr2l	equ	0xFD9
  3796                           status	equ	0xFD8
  3797                           
  3798 ;; *************** function _openLSM9 *****************
  3799 ;; Defined at:
  3800 ;;		line 5 in file "LSM9DS0.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  _xmadd          1    7[COMRAM] unsigned char 
  3803 ;;  _gadd           1    8[COMRAM] unsigned char 
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;  xmtest          1   12[COMRAM] unsigned char 
  3806 ;;  gtest           1   11[COMRAM] unsigned char 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  2    7[COMRAM] unsigned int 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;Total ram usage:        6 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:    3
  3823 ;; This function calls:
  3824 ;;		_xmReadByte
  3825 ;;		_gReadByte
  3826 ;;		_openLSM9_accel
  3827 ;;		_openLSM9_gyro
  3828 ;;		_openLSM9_mag
  3829 ;; This function is called by:
  3830 ;;		_main
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           	psect	text20
  3835  002262                     __ptext20:
  3836                           	opt stack 0
  3837  002262                     _openLSM9:
  3838                           	opt stack 26
  3839                           
  3840                           ;LSM9DS0.c: 6: char gtest=0,xmtest=0;
  3841                           
  3842                           ;incstack = 0
  3843                           ;incstack = 0
  3844  002262  6E0A               	movwf	??_openLSM9& (0+255),c
  3845  002264  0E00               	movlw	0
  3846  002266  6E0C               	movwf	openLSM9@gtest,c
  3847  002268  500A               	movf	??_openLSM9& (0+255),w,c
  3848  00226A  6E0A               	movwf	??_openLSM9& (0+255),c
  3849  00226C  0E00               	movlw	0
  3850  00226E  6E0D               	movwf	openLSM9@xmtest,c
  3851  002270  500A               	movf	??_openLSM9& (0+255),w,c
  3852                           
  3853                           ;LSM9DS0.c: 8: _xmaddress=_xmadd<<1;
  3854  002272  5008               	movf	openLSM9@_xmadd,w,c
  3855  002274  2408               	addwf	openLSM9@_xmadd,w,c
  3856  002276  6E5C               	movwf	__xmaddress,c
  3857                           
  3858                           ;LSM9DS0.c: 9: _gaddress=_gadd<<1;
  3859  002278  5009               	movf	openLSM9@_gadd,w,c
  3860  00227A  2409               	addwf	openLSM9@_gadd,w,c
  3861  00227C  6E5B               	movwf	__gaddress,c
  3862                           
  3863                           ;LSM9DS0.c: 11: xmtest = xmReadByte(0x0F);
  3864  00227E  6E0A               	movwf	??_openLSM9& (0+255),c
  3865  002280  0E0F               	movlw	15
  3866  002282  6E07               	movwf	?_xmReadByte,c
  3867  002284  500A               	movf	??_openLSM9& (0+255),w,c
  3868  002286  EC0B  F013         	call	_xmReadByte	;wreg free
  3869  00228A  6E0D               	movwf	openLSM9@xmtest,c
  3870                           
  3871                           ;LSM9DS0.c: 12: gtest = gReadByte(0x0F);
  3872  00228C  6E0A               	movwf	??_openLSM9& (0+255),c
  3873  00228E  0E0F               	movlw	15
  3874  002290  6E07               	movwf	?_gReadByte,c
  3875  002292  500A               	movf	??_openLSM9& (0+255),w,c
  3876  002294  EC03  F013         	call	_gReadByte	;wreg free
  3877  002298  6E0C               	movwf	openLSM9@gtest,c
  3878                           
  3879                           ;LSM9DS0.c: 14: openLSM9_accel();
  3880  00229A  EC88  F011         	call	_openLSM9_accel	;wreg free
  3881                           
  3882                           ;LSM9DS0.c: 15: openLSM9_gyro();
  3883  00229E  ECD1  F010         	call	_openLSM9_gyro	;wreg free
  3884                           
  3885                           ;LSM9DS0.c: 16: openLSM9_mag();
  3886  0022A2  EC9E  F010         	call	_openLSM9_mag	;wreg free
  3887                           
  3888                           ;LSM9DS0.c: 18: return (xmtest<<8)+gtest;
  3889  0022A6  500D               	movf	openLSM9@xmtest,w,c
  3890  0022A8  6E0B               	movwf	(??_openLSM9+1)& (0+255),c
  3891  0022AA  6A0A               	clrf	??_openLSM9& (0+255),c
  3892  0022AC  500C               	movf	openLSM9@gtest,w,c
  3893  0022AE  240A               	addwf	??_openLSM9,w,c
  3894  0022B0  6E08               	movwf	?_openLSM9,c
  3895  0022B2  0E00               	movlw	0
  3896  0022B4  200B               	addwfc	??_openLSM9+1,w,c
  3897  0022B6  6E09               	movwf	?_openLSM9+1,c
  3898  0022B8  0012               	return	
  3899  0022BA                     __end_of_openLSM9:
  3900                           	opt stack 0
  3901                           tblptru	equ	0xFF8
  3902                           tblptrh	equ	0xFF7
  3903                           tblptrl	equ	0xFF6
  3904                           tablat	equ	0xFF5
  3905                           prodh	equ	0xFF4
  3906                           prodl	equ	0xFF3
  3907                           wreg	equ	0xFE8
  3908                           indf2	equ	0xFDF
  3909                           postinc2	equ	0xFDE
  3910                           postdec2	equ	0xFDD
  3911                           fsr2h	equ	0xFDA
  3912                           fsr2l	equ	0xFD9
  3913                           status	equ	0xFD8
  3914                           
  3915 ;; *************** function _openLSM9_mag *****************
  3916 ;; Defined at:
  3917 ;;		line 121 in file "LSM9DS0.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;		None
  3922 ;; Return value:  Size  Location     Type
  3923 ;;		None               void
  3924 ;; Registers used:
  3925 ;;		wreg, status,2, status,0, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;Total ram usage:        2 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    2
  3938 ;; This function calls:
  3939 ;;		_xmWriteByte
  3940 ;; This function is called by:
  3941 ;;		_openLSM9
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	text21
  3946  00213C                     __ptext21:
  3947                           	opt stack 0
  3948  00213C                     _openLSM9_mag:
  3949                           	opt stack 26
  3950                           
  3951                           ;LSM9DS0.c: 132: xmWriteByte(0x24, 0b00010100);
  3952                           
  3953                           ;incstack = 0
  3954                           ;incstack = 0
  3955  00213C  6E05               	movwf	??_openLSM9_mag& (0+255),c
  3956  00213E  0E24               	movlw	36
  3957  002140  6E03               	movwf	?_xmWriteByte,c
  3958  002142  5005               	movf	??_openLSM9_mag& (0+255),w,c
  3959  002144  6E06               	movwf	(??_openLSM9_mag+1)& (0+255),c
  3960  002146  0E14               	movlw	20
  3961  002148  6E04               	movwf	?_xmWriteByte+1,c
  3962  00214A  5006               	movf	(??_openLSM9_mag+1)& (0+255),w,c
  3963  00214C  ECBB  F012         	call	_xmWriteByte	;wreg free
  3964                           
  3965                           ;LSM9DS0.c: 138: xmWriteByte(0x25, 0x01);
  3966  002150  6E05               	movwf	??_openLSM9_mag& (0+255),c
  3967  002152  0E25               	movlw	37
  3968  002154  6E03               	movwf	?_xmWriteByte,c
  3969  002156  5005               	movf	??_openLSM9_mag& (0+255),w,c
  3970  002158  6E06               	movwf	(??_openLSM9_mag+1)& (0+255),c
  3971  00215A  0E01               	movlw	1
  3972  00215C  6E04               	movwf	?_xmWriteByte+1,c
  3973  00215E  5006               	movf	(??_openLSM9_mag+1)& (0+255),w,c
  3974  002160  ECBB  F012         	call	_xmWriteByte	;wreg free
  3975                           
  3976                           ;LSM9DS0.c: 152: xmWriteByte(0x26, 0b00000000);
  3977  002164  6E05               	movwf	??_openLSM9_mag& (0+255),c
  3978  002166  0E26               	movlw	38
  3979  002168  6E03               	movwf	?_xmWriteByte,c
  3980  00216A  5005               	movf	??_openLSM9_mag& (0+255),w,c
  3981  00216C  6E06               	movwf	(??_openLSM9_mag+1)& (0+255),c
  3982  00216E  0E00               	movlw	0
  3983  002170  6E04               	movwf	?_xmWriteByte+1,c
  3984  002172  5006               	movf	(??_openLSM9_mag+1)& (0+255),w,c
  3985  002174  ECBB  F012         	call	_xmWriteByte	;wreg free
  3986                           
  3987                           ;LSM9DS0.c: 157: xmWriteByte(0x23, 0x04);
  3988  002178  6E05               	movwf	??_openLSM9_mag& (0+255),c
  3989  00217A  0E23               	movlw	35
  3990  00217C  6E03               	movwf	?_xmWriteByte,c
  3991  00217E  5005               	movf	??_openLSM9_mag& (0+255),w,c
  3992  002180  6E06               	movwf	(??_openLSM9_mag+1)& (0+255),c
  3993  002182  0E04               	movlw	4
  3994  002184  6E04               	movwf	?_xmWriteByte+1,c
  3995  002186  5006               	movf	(??_openLSM9_mag+1)& (0+255),w,c
  3996  002188  ECBB  F012         	call	_xmWriteByte	;wreg free
  3997                           
  3998                           ;LSM9DS0.c: 170: xmWriteByte(0x12, 0x09);
  3999  00218C  6E05               	movwf	??_openLSM9_mag& (0+255),c
  4000  00218E  0E12               	movlw	18
  4001  002190  6E03               	movwf	?_xmWriteByte,c
  4002  002192  5005               	movf	??_openLSM9_mag& (0+255),w,c
  4003  002194  6E06               	movwf	(??_openLSM9_mag+1)& (0+255),c
  4004  002196  0E09               	movlw	9
  4005  002198  6E04               	movwf	?_xmWriteByte+1,c
  4006  00219A  5006               	movf	(??_openLSM9_mag+1)& (0+255),w,c
  4007  00219C  ECBB  F012         	call	_xmWriteByte	;wreg free
  4008  0021A0  0012               	return	
  4009  0021A2                     __end_of_openLSM9_mag:
  4010                           	opt stack 0
  4011                           tblptru	equ	0xFF8
  4012                           tblptrh	equ	0xFF7
  4013                           tblptrl	equ	0xFF6
  4014                           tablat	equ	0xFF5
  4015                           prodh	equ	0xFF4
  4016                           prodl	equ	0xFF3
  4017                           wreg	equ	0xFE8
  4018                           indf2	equ	0xFDF
  4019                           postinc2	equ	0xFDE
  4020                           postdec2	equ	0xFDD
  4021                           fsr2h	equ	0xFDA
  4022                           fsr2l	equ	0xFD9
  4023                           status	equ	0xFD8
  4024                           
  4025 ;; *************** function _openLSM9_gyro *****************
  4026 ;; Defined at:
  4027 ;;		line 64 in file "LSM9DS0.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;		None
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;		None
  4032 ;; Return value:  Size  Location     Type
  4033 ;;		None               void
  4034 ;; Registers used:
  4035 ;;		wreg, status,2, status,0, cstack
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;Total ram usage:        2 bytes
  4046 ;; Hardware stack levels used:    1
  4047 ;; Hardware stack levels required when called:    2
  4048 ;; This function calls:
  4049 ;;		_gWriteByte
  4050 ;; This function is called by:
  4051 ;;		_openLSM9
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text22
  4056  0021A2                     __ptext22:
  4057                           	opt stack 0
  4058  0021A2                     _openLSM9_gyro:
  4059                           	opt stack 26
  4060                           
  4061                           ;LSM9DS0.c: 73: gWriteByte(0x20, 0x0F);
  4062                           
  4063                           ;incstack = 0
  4064                           ;incstack = 0
  4065  0021A2  6E05               	movwf	??_openLSM9_gyro& (0+255),c
  4066  0021A4  0E20               	movlw	32
  4067  0021A6  6E03               	movwf	?_gWriteByte,c
  4068  0021A8  5005               	movf	??_openLSM9_gyro& (0+255),w,c
  4069  0021AA  6E06               	movwf	(??_openLSM9_gyro+1)& (0+255),c
  4070  0021AC  0E0F               	movlw	15
  4071  0021AE  6E04               	movwf	?_gWriteByte+1,c
  4072  0021B0  5006               	movf	(??_openLSM9_gyro+1)& (0+255),w,c
  4073  0021B2  ECA8  F012         	call	_gWriteByte	;wreg free
  4074                           
  4075                           ;LSM9DS0.c: 83: gWriteByte(0x21, 0x00);
  4076  0021B6  6E05               	movwf	??_openLSM9_gyro& (0+255),c
  4077  0021B8  0E21               	movlw	33
  4078  0021BA  6E03               	movwf	?_gWriteByte,c
  4079  0021BC  5005               	movf	??_openLSM9_gyro& (0+255),w,c
  4080  0021BE  6E06               	movwf	(??_openLSM9_gyro+1)& (0+255),c
  4081  0021C0  0E00               	movlw	0
  4082  0021C2  6E04               	movwf	?_gWriteByte+1,c
  4083  0021C4  5006               	movf	(??_openLSM9_gyro+1)& (0+255),w,c
  4084  0021C6  ECA8  F012         	call	_gWriteByte	;wreg free
  4085                           
  4086                           ;LSM9DS0.c: 96: gWriteByte(0x22, 0x88);
  4087  0021CA  6E05               	movwf	??_openLSM9_gyro& (0+255),c
  4088  0021CC  0E22               	movlw	34
  4089  0021CE  6E03               	movwf	?_gWriteByte,c
  4090  0021D0  5005               	movf	??_openLSM9_gyro& (0+255),w,c
  4091  0021D2  6E06               	movwf	(??_openLSM9_gyro+1)& (0+255),c
  4092  0021D4  0E88               	movlw	136
  4093  0021D6  6E04               	movwf	?_gWriteByte+1,c
  4094  0021D8  5006               	movf	(??_openLSM9_gyro+1)& (0+255),w,c
  4095  0021DA  ECA8  F012         	call	_gWriteByte	;wreg free
  4096                           
  4097                           ;LSM9DS0.c: 108: gWriteByte(0x23, 0x00);
  4098  0021DE  6E05               	movwf	??_openLSM9_gyro& (0+255),c
  4099  0021E0  0E23               	movlw	35
  4100  0021E2  6E03               	movwf	?_gWriteByte,c
  4101  0021E4  5005               	movf	??_openLSM9_gyro& (0+255),w,c
  4102  0021E6  6E06               	movwf	(??_openLSM9_gyro+1)& (0+255),c
  4103  0021E8  0E00               	movlw	0
  4104  0021EA  6E04               	movwf	?_gWriteByte+1,c
  4105  0021EC  5006               	movf	(??_openLSM9_gyro+1)& (0+255),w,c
  4106  0021EE  ECA8  F012         	call	_gWriteByte	;wreg free
  4107                           
  4108                           ;LSM9DS0.c: 117: gWriteByte(0x24, 0x00);
  4109  0021F2  6E05               	movwf	??_openLSM9_gyro& (0+255),c
  4110  0021F4  0E24               	movlw	36
  4111  0021F6  6E03               	movwf	?_gWriteByte,c
  4112  0021F8  5005               	movf	??_openLSM9_gyro& (0+255),w,c
  4113  0021FA  6E06               	movwf	(??_openLSM9_gyro+1)& (0+255),c
  4114  0021FC  0E00               	movlw	0
  4115  0021FE  6E04               	movwf	?_gWriteByte+1,c
  4116  002200  5006               	movf	(??_openLSM9_gyro+1)& (0+255),w,c
  4117  002202  ECA8  F012         	call	_gWriteByte	;wreg free
  4118  002206  0012               	return	
  4119  002208                     __end_of_openLSM9_gyro:
  4120                           	opt stack 0
  4121                           tblptru	equ	0xFF8
  4122                           tblptrh	equ	0xFF7
  4123                           tblptrl	equ	0xFF6
  4124                           tablat	equ	0xFF5
  4125                           prodh	equ	0xFF4
  4126                           prodl	equ	0xFF3
  4127                           wreg	equ	0xFE8
  4128                           indf2	equ	0xFDF
  4129                           postinc2	equ	0xFDE
  4130                           postdec2	equ	0xFDD
  4131                           fsr2h	equ	0xFDA
  4132                           fsr2l	equ	0xFD9
  4133                           status	equ	0xFD8
  4134                           
  4135 ;; *************** function _gWriteByte *****************
  4136 ;; Defined at:
  4137 ;;		line 242 in file "LSM9DS0.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  subadd          1    2[COMRAM] unsigned char 
  4140 ;;  data            1    3[COMRAM] unsigned char 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;		None
  4143 ;; Return value:  Size  Location     Type
  4144 ;;		None               void
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4152 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;Total ram usage:        2 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    1
  4159 ;; This function calls:
  4160 ;;		_WriteI2C1
  4161 ;; This function is called by:
  4162 ;;		_openLSM9_gyro
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text23
  4167  002550                     __ptext23:
  4168                           	opt stack 0
  4169  002550                     _gWriteByte:
  4170                           	opt stack 26
  4171                           
  4172                           ;LSM9DS0.c: 243: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  4173                           
  4174                           ;incstack = 0
  4175                           ;incstack = 0
  4176  002550  80C5               	bsf	4037,0,c	;volatile
  4177  002552                     l150:
  4178  002552  B0C5               	btfsc	4037,0,c	;volatile
  4179  002554  D7FE               	goto	l150
  4180                           
  4181                           ;LSM9DS0.c: 244: WriteI2C1(_gaddress);
  4182  002556  C05B  F001         	movff	__gaddress,?_WriteI2C1
  4183  00255A  EC68  F010         	call	_WriteI2C1	;wreg free
  4184                           
  4185                           ;LSM9DS0.c: 246: WriteI2C1(subadd);
  4186  00255E  C003  F001         	movff	gWriteByte@subadd,?_WriteI2C1
  4187  002562  EC68  F010         	call	_WriteI2C1	;wreg free
  4188                           
  4189                           ;LSM9DS0.c: 248: WriteI2C1(data);
  4190  002566  C004  F001         	movff	gWriteByte@data,?_WriteI2C1
  4191  00256A  EC68  F010         	call	_WriteI2C1	;wreg free
  4192                           
  4193                           ;LSM9DS0.c: 250: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  4194  00256E  84C5               	bsf	4037,2,c	;volatile
  4195  002570                     l153:
  4196  002570  A4C5               	btfss	4037,2,c	;volatile
  4197  002572  0012               	return	
  4198  002574  D7FD               	goto	l153
  4199  002576                     __end_of_gWriteByte:
  4200                           	opt stack 0
  4201                           tblptru	equ	0xFF8
  4202                           tblptrh	equ	0xFF7
  4203                           tblptrl	equ	0xFF6
  4204                           tablat	equ	0xFF5
  4205                           prodh	equ	0xFF4
  4206                           prodl	equ	0xFF3
  4207                           wreg	equ	0xFE8
  4208                           indf2	equ	0xFDF
  4209                           postinc2	equ	0xFDE
  4210                           postdec2	equ	0xFDD
  4211                           fsr2h	equ	0xFDA
  4212                           fsr2l	equ	0xFD9
  4213                           status	equ	0xFD8
  4214                           
  4215 ;; *************** function _openLSM9_accel *****************
  4216 ;; Defined at:
  4217 ;;		line 22 in file "LSM9DS0.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;		None
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;		None               void
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;Total ram usage:        2 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:    2
  4238 ;; This function calls:
  4239 ;;		_xmWriteByte
  4240 ;; This function is called by:
  4241 ;;		_openLSM9
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text24
  4246  002310                     __ptext24:
  4247                           	opt stack 0
  4248  002310                     _openLSM9_accel:
  4249                           	opt stack 26
  4250                           
  4251                           ;LSM9DS0.c: 31: xmWriteByte(0x1F, 0x00);
  4252                           
  4253                           ;incstack = 0
  4254                           ;incstack = 0
  4255  002310  6E05               	movwf	??_openLSM9_accel& (0+255),c
  4256  002312  0E1F               	movlw	31
  4257  002314  6E03               	movwf	?_xmWriteByte,c
  4258  002316  5005               	movf	??_openLSM9_accel& (0+255),w,c
  4259  002318  6E06               	movwf	(??_openLSM9_accel+1)& (0+255),c
  4260  00231A  0E00               	movlw	0
  4261  00231C  6E04               	movwf	?_xmWriteByte+1,c
  4262  00231E  5006               	movf	(??_openLSM9_accel+1)& (0+255),w,c
  4263  002320  ECBB  F012         	call	_xmWriteByte	;wreg free
  4264                           
  4265                           ;LSM9DS0.c: 44: xmWriteByte(0x20,0b10010111 );
  4266  002324  6E05               	movwf	??_openLSM9_accel& (0+255),c
  4267  002326  0E20               	movlw	32
  4268  002328  6E03               	movwf	?_xmWriteByte,c
  4269  00232A  5005               	movf	??_openLSM9_accel& (0+255),w,c
  4270  00232C  6E06               	movwf	(??_openLSM9_accel+1)& (0+255),c
  4271  00232E  0E97               	movlw	151
  4272  002330  6E04               	movwf	?_xmWriteByte+1,c
  4273  002332  5006               	movf	(??_openLSM9_accel+1)& (0+255),w,c
  4274  002334  ECBB  F012         	call	_xmWriteByte	;wreg free
  4275                           
  4276                           ;LSM9DS0.c: 57: xmWriteByte(0x21, 0b11010000);
  4277  002338  6E05               	movwf	??_openLSM9_accel& (0+255),c
  4278  00233A  0E21               	movlw	33
  4279  00233C  6E03               	movwf	?_xmWriteByte,c
  4280  00233E  5005               	movf	??_openLSM9_accel& (0+255),w,c
  4281  002340  6E06               	movwf	(??_openLSM9_accel+1)& (0+255),c
  4282  002342  0ED0               	movlw	208
  4283  002344  6E04               	movwf	?_xmWriteByte+1,c
  4284  002346  5006               	movf	(??_openLSM9_accel+1)& (0+255),w,c
  4285  002348  ECBB  F012         	call	_xmWriteByte	;wreg free
  4286                           
  4287                           ;LSM9DS0.c: 60: xmWriteByte(0x22, 0x04);
  4288  00234C  6E05               	movwf	??_openLSM9_accel& (0+255),c
  4289  00234E  0E22               	movlw	34
  4290  002350  6E03               	movwf	?_xmWriteByte,c
  4291  002352  5005               	movf	??_openLSM9_accel& (0+255),w,c
  4292  002354  6E06               	movwf	(??_openLSM9_accel+1)& (0+255),c
  4293  002356  0E04               	movlw	4
  4294  002358  6E04               	movwf	?_xmWriteByte+1,c
  4295  00235A  5006               	movf	(??_openLSM9_accel+1)& (0+255),w,c
  4296  00235C  ECBB  F012         	call	_xmWriteByte	;wreg free
  4297  002360  0012               	return	
  4298  002362                     __end_of_openLSM9_accel:
  4299                           	opt stack 0
  4300                           tblptru	equ	0xFF8
  4301                           tblptrh	equ	0xFF7
  4302                           tblptrl	equ	0xFF6
  4303                           tablat	equ	0xFF5
  4304                           prodh	equ	0xFF4
  4305                           prodl	equ	0xFF3
  4306                           wreg	equ	0xFE8
  4307                           indf2	equ	0xFDF
  4308                           postinc2	equ	0xFDE
  4309                           postdec2	equ	0xFDD
  4310                           fsr2h	equ	0xFDA
  4311                           fsr2l	equ	0xFD9
  4312                           status	equ	0xFD8
  4313                           
  4314 ;; *************** function _xmWriteByte *****************
  4315 ;; Defined at:
  4316 ;;		line 253 in file "LSM9DS0.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;  subadd          1    2[COMRAM] unsigned char 
  4319 ;;  data            1    3[COMRAM] unsigned char 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;		None               void
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0, cstack
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;Total ram usage:        2 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; Hardware stack levels required when called:    1
  4338 ;; This function calls:
  4339 ;;		_WriteI2C1
  4340 ;; This function is called by:
  4341 ;;		_openLSM9_accel
  4342 ;;		_openLSM9_mag
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           	psect	text25
  4347  002576                     __ptext25:
  4348                           	opt stack 0
  4349  002576                     _xmWriteByte:
  4350                           	opt stack 26
  4351                           
  4352                           ;LSM9DS0.c: 254: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  4353                           
  4354                           ;incstack = 0
  4355                           ;incstack = 0
  4356  002576  80C5               	bsf	4037,0,c	;volatile
  4357  002578                     l159:
  4358  002578  B0C5               	btfsc	4037,0,c	;volatile
  4359  00257A  D7FE               	goto	l159
  4360                           
  4361                           ;LSM9DS0.c: 255: WriteI2C1(_xmaddress);
  4362  00257C  C05C  F001         	movff	__xmaddress,?_WriteI2C1
  4363  002580  EC68  F010         	call	_WriteI2C1	;wreg free
  4364                           
  4365                           ;LSM9DS0.c: 257: WriteI2C1(subadd);
  4366  002584  C003  F001         	movff	xmWriteByte@subadd,?_WriteI2C1
  4367  002588  EC68  F010         	call	_WriteI2C1	;wreg free
  4368                           
  4369                           ;LSM9DS0.c: 259: WriteI2C1(data);
  4370  00258C  C004  F001         	movff	xmWriteByte@data,?_WriteI2C1
  4371  002590  EC68  F010         	call	_WriteI2C1	;wreg free
  4372                           
  4373                           ;LSM9DS0.c: 261: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  4374  002594  84C5               	bsf	4037,2,c	;volatile
  4375  002596                     l162:
  4376  002596  A4C5               	btfss	4037,2,c	;volatile
  4377  002598  0012               	return	
  4378  00259A  D7FD               	goto	l162
  4379  00259C                     __end_of_xmWriteByte:
  4380                           	opt stack 0
  4381                           tblptru	equ	0xFF8
  4382                           tblptrh	equ	0xFF7
  4383                           tblptrl	equ	0xFF6
  4384                           tablat	equ	0xFF5
  4385                           prodh	equ	0xFF4
  4386                           prodl	equ	0xFF3
  4387                           wreg	equ	0xFE8
  4388                           indf2	equ	0xFDF
  4389                           postinc2	equ	0xFDE
  4390                           postdec2	equ	0xFDD
  4391                           fsr2h	equ	0xFDA
  4392                           fsr2l	equ	0xFD9
  4393                           status	equ	0xFD8
  4394                           
  4395 ;; *************** function _gReadByte *****************
  4396 ;; Defined at:
  4397 ;;		line 195 in file "LSM9DS0.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  subadd          1    6[COMRAM] unsigned char 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;		None
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      unsigned char 
  4404 ;; Registers used:
  4405 ;;		wreg, status,2, status,0, cstack
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4411 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;Total ram usage:        1 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; Hardware stack levels required when called:    2
  4418 ;; This function calls:
  4419 ;;		_I2CReadByte
  4420 ;; This function is called by:
  4421 ;;		_openLSM9
  4422 ;;		_readLSM9_gyro
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text26
  4427  002606                     __ptext26:
  4428                           	opt stack 0
  4429  002606                     _gReadByte:
  4430                           	opt stack 26
  4431                           
  4432                           ;LSM9DS0.c: 196: return (I2CReadByte(_gaddress>>1,subadd));
  4433                           
  4434                           ;incstack = 0
  4435                           ;incstack = 0
  4436  002606  90D8               	bcf	status,0,c
  4437  002608  305B               	rrcf	__gaddress,w,c
  4438  00260A  6E03               	movwf	?_I2CReadByte,c
  4439  00260C  C007  F004         	movff	gReadByte@subadd,?_I2CReadByte+1
  4440  002610  EC04  F011         	call	_I2CReadByte	;wreg free
  4441  002614  0012               	return	
  4442  002616                     __end_of_gReadByte:
  4443                           	opt stack 0
  4444                           tblptru	equ	0xFF8
  4445                           tblptrh	equ	0xFF7
  4446                           tblptrl	equ	0xFF6
  4447                           tablat	equ	0xFF5
  4448                           prodh	equ	0xFF4
  4449                           prodl	equ	0xFF3
  4450                           wreg	equ	0xFE8
  4451                           indf2	equ	0xFDF
  4452                           postinc2	equ	0xFDE
  4453                           postdec2	equ	0xFDD
  4454                           fsr2h	equ	0xFDA
  4455                           fsr2l	equ	0xFD9
  4456                           status	equ	0xFD8
  4457                           
  4458 ;; *************** function _xmReadByte *****************
  4459 ;; Defined at:
  4460 ;;		line 217 in file "LSM9DS0.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  subadd          1    6[COMRAM] unsigned char 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      unsigned char 
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4474 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;Total ram usage:        1 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:    2
  4481 ;; This function calls:
  4482 ;;		_I2CReadByte
  4483 ;; This function is called by:
  4484 ;;		_openLSM9
  4485 ;;		_readLSM9_accel
  4486 ;;		_readLSM9_mag
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text27
  4491  002616                     __ptext27:
  4492                           	opt stack 0
  4493  002616                     _xmReadByte:
  4494                           	opt stack 26
  4495                           
  4496                           ;LSM9DS0.c: 218: return (I2CReadByte(_xmaddress>>1,subadd));
  4497                           
  4498                           ;incstack = 0
  4499                           ;incstack = 0
  4500  002616  90D8               	bcf	status,0,c
  4501  002618  305C               	rrcf	__xmaddress,w,c
  4502  00261A  6E03               	movwf	?_I2CReadByte,c
  4503  00261C  C007  F004         	movff	xmReadByte@subadd,?_I2CReadByte+1
  4504  002620  EC04  F011         	call	_I2CReadByte	;wreg free
  4505  002624  0012               	return	
  4506  002626                     __end_of_xmReadByte:
  4507                           	opt stack 0
  4508                           tblptru	equ	0xFF8
  4509                           tblptrh	equ	0xFF7
  4510                           tblptrl	equ	0xFF6
  4511                           tablat	equ	0xFF5
  4512                           prodh	equ	0xFF4
  4513                           prodl	equ	0xFF3
  4514                           wreg	equ	0xFE8
  4515                           indf2	equ	0xFDF
  4516                           postinc2	equ	0xFDE
  4517                           postdec2	equ	0xFDD
  4518                           fsr2h	equ	0xFDA
  4519                           fsr2l	equ	0xFD9
  4520                           status	equ	0xFD8
  4521                           
  4522 ;; *************** function _I2CReadByte *****************
  4523 ;; Defined at:
  4524 ;;		line 5 in file "I2C_mat.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  add             1    2[COMRAM] unsigned char 
  4527 ;;  subadd          1    3[COMRAM] unsigned char 
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;  _temp           1    5[COMRAM] unsigned char 
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  1    wreg      unsigned char 
  4532 ;; Registers used:
  4533 ;;		wreg, status,2, status,0, cstack
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;Total ram usage:        4 bytes
  4544 ;; Hardware stack levels used:    1
  4545 ;; Hardware stack levels required when called:    1
  4546 ;; This function calls:
  4547 ;;		_WriteI2C1
  4548 ;;		_ReadI2C1
  4549 ;; This function is called by:
  4550 ;;		_gReadByte
  4551 ;;		_xmReadByte
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text28
  4556  002208                     __ptext28:
  4557                           	opt stack 0
  4558  002208                     _I2CReadByte:
  4559                           	opt stack 26
  4560                           
  4561                           ;I2C_mat.c: 6: unsigned char _temp=0;
  4562                           
  4563                           ;incstack = 0
  4564                           ;incstack = 0
  4565  002208  6E05               	movwf	??_I2CReadByte& (0+255),c
  4566  00220A  0E00               	movlw	0
  4567  00220C  6E06               	movwf	I2CReadByte@_temp,c
  4568  00220E  5005               	movf	??_I2CReadByte& (0+255),w,c
  4569                           
  4570                           ;I2C_mat.c: 7: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  4571  002210  80C5               	bsf	4037,0,c	;volatile
  4572  002212                     l174:
  4573  002212  B0C5               	btfsc	4037,0,c	;volatile
  4574  002214  D7FE               	goto	l174
  4575  002216                     l2884:
  4576  002216  5003               	movf	I2CReadByte@add,w,c
  4577  002218  2403               	addwf	I2CReadByte@add,w,c
  4578  00221A  6E01               	movwf	?_WriteI2C1,c
  4579  00221C  EC68  F010         	call	_WriteI2C1	;wreg free
  4580  002220  0900               	iorlw	0
  4581  002222  A4D8               	btfss	status,2,c
  4582  002224  D7F8               	goto	l2884
  4583  002226                     l2886:
  4584  002226  C004  F001         	movff	I2CReadByte@subadd,?_WriteI2C1
  4585  00222A  EC68  F010         	call	_WriteI2C1	;wreg free
  4586  00222E  0900               	iorlw	0
  4587  002230  A4D8               	btfss	status,2,c
  4588  002232  D7F9               	goto	l2886
  4589                           
  4590                           ;I2C_mat.c: 10: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN);
  4591  002234  82C5               	bsf	4037,1,c	;volatile
  4592  002236                     l183:
  4593  002236  B2C5               	btfsc	4037,1,c	;volatile
  4594  002238  D7FE               	goto	l183
  4595  00223A                     l2888:
  4596  00223A  80D8               	bsf	status,0,c
  4597  00223C  3403               	rlcf	I2CReadByte@add,w,c
  4598  00223E  6E01               	movwf	?_WriteI2C1,c
  4599  002240  EC68  F010         	call	_WriteI2C1	;wreg free
  4600  002244  0900               	iorlw	0
  4601  002246  A4D8               	btfss	status,2,c
  4602  002248  D7F8               	goto	l2888
  4603                           
  4604                           ;I2C_mat.c: 12: _temp=ReadI2C1();
  4605  00224A  ECE1  F012         	call	_ReadI2C1	;wreg free
  4606  00224E  6E06               	movwf	I2CReadByte@_temp,c
  4607                           
  4608                           ;I2C_mat.c: 13: SSP1CON2bits.ACKDT=1, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  4609  002250  8AC5               	bsf	4037,5,c	;volatile
  4610  002252  88C5               	bsf	4037,4,c	;volatile
  4611  002254                     l189:
  4612  002254  B8C5               	btfsc	4037,4,c	;volatile
  4613  002256  D7FE               	goto	l189
  4614                           
  4615                           ;I2C_mat.c: 14: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  4616  002258  84C5               	bsf	4037,2,c	;volatile
  4617  00225A                     l192:
  4618  00225A  B4C5               	btfsc	4037,2,c	;volatile
  4619  00225C  D7FE               	goto	l192
  4620                           
  4621                           ;I2C_mat.c: 15: return _temp;
  4622  00225E  5006               	movf	I2CReadByte@_temp,w,c
  4623  002260  0012               	return	
  4624  002262                     __end_of_I2CReadByte:
  4625                           	opt stack 0
  4626                           tblptru	equ	0xFF8
  4627                           tblptrh	equ	0xFF7
  4628                           tblptrl	equ	0xFF6
  4629                           tablat	equ	0xFF5
  4630                           prodh	equ	0xFF4
  4631                           prodl	equ	0xFF3
  4632                           wreg	equ	0xFE8
  4633                           indf2	equ	0xFDF
  4634                           postinc2	equ	0xFDE
  4635                           postdec2	equ	0xFDD
  4636                           fsr2h	equ	0xFDA
  4637                           fsr2l	equ	0xFD9
  4638                           status	equ	0xFD8
  4639                           
  4640 ;; *************** function _ReadI2C1 *****************
  4641 ;; Defined at:
  4642 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\i2c\i2c1read.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;		None
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      unsigned char 
  4649 ;; Registers used:
  4650 ;;		wreg, status,2, status,0
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;Total ram usage:        0 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_I2CReadByte
  4666 ;;		_gReadBytes
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           	psect	text29
  4671  0025C2                     __ptext29:
  4672                           	opt stack 0
  4673  0025C2                     _ReadI2C1:
  4674                           	opt stack 26
  4675                           
  4676                           ;incstack = 0
  4677                           ;incstack = 0
  4678  0025C2  50C6               	movf	4038,w,c	;volatile
  4679  0025C4  0B0F               	andlw	15
  4680  0025C6  0A08               	xorlw	8
  4681  0025C8  B4D8               	btfsc	status,2,c
  4682  0025CA  D004               	goto	l393
  4683  0025CC  50C6               	movf	4038,w,c	;volatile
  4684  0025CE  0B0F               	andlw	15
  4685  0025D0  0A0B               	xorlw	11
  4686  0025D2  B4D8               	btfsc	status,2,c
  4687  0025D4                     l393:
  4688  0025D4  86C5               	bsf	4037,3,c	;volatile
  4689  0025D6                     l394:
  4690  0025D6  A0C7               	btfss	4039,0,c	;volatile
  4691  0025D8  D7FE               	goto	l394
  4692  0025DA  50C9               	movf	4041,w,c	;volatile
  4693  0025DC  0012               	return	
  4694  0025DE                     __end_of_ReadI2C1:
  4695                           	opt stack 0
  4696                           tblptru	equ	0xFF8
  4697                           tblptrh	equ	0xFF7
  4698                           tblptrl	equ	0xFF6
  4699                           tablat	equ	0xFF5
  4700                           prodh	equ	0xFF4
  4701                           prodl	equ	0xFF3
  4702                           wreg	equ	0xFE8
  4703                           indf2	equ	0xFDF
  4704                           postinc2	equ	0xFDE
  4705                           postdec2	equ	0xFDD
  4706                           fsr2h	equ	0xFDA
  4707                           fsr2l	equ	0xFD9
  4708                           status	equ	0xFD8
  4709                           
  4710 ;; *************** function _WriteI2C1 *****************
  4711 ;; Defined at:
  4712 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\i2c\i2c1writ.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  data_out        1    0[COMRAM] unsigned char 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;		None
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1    wreg      char 
  4719 ;; Registers used:
  4720 ;;		wreg, status,2, status,0
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4726 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;Total ram usage:        2 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; This function calls:
  4733 ;;		Nothing
  4734 ;; This function is called by:
  4735 ;;		_gWriteByte
  4736 ;;		_xmWriteByte
  4737 ;;		_I2CReadByte
  4738 ;;		_gReadBytes
  4739 ;;		_xmReadBytes
  4740 ;;		_I2CWriteByte
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text30
  4745  0020D0                     __ptext30:
  4746                           	opt stack 0
  4747  0020D0                     _WriteI2C1:
  4748                           	opt stack 26
  4749                           
  4750                           ;incstack = 0
  4751                           ;incstack = 0
  4752  0020D0  C001  FFC9         	movff	WriteI2C1@data_out,4041	;volatile
  4753  0020D4  AEC6               	btfss	4038,7,c	;volatile
  4754  0020D6  D002               	goto	l2576
  4755  0020D8  0EFF               	movlw	255
  4756  0020DA  0012               	return	
  4757  0020DC                     l2576:
  4758  0020DC  50C6               	movf	4038,w,c	;volatile
  4759  0020DE  0B0F               	andlw	15
  4760  0020E0  0A08               	xorlw	8
  4761  0020E2  B4D8               	btfsc	status,2,c
  4762  0020E4  D00F               	goto	l2594
  4763  0020E6  50C6               	movf	4038,w,c	;volatile
  4764  0020E8  0B0F               	andlw	15
  4765  0020EA  0A0B               	xorlw	11
  4766  0020EC  B4D8               	btfsc	status,2,c
  4767  0020EE  D00A               	goto	l2594
  4768  0020F0  88C6               	bsf	4038,4,c	;volatile
  4769  0020F2                     l418:
  4770  0020F2  A69E               	btfss	3998,3,c	;volatile
  4771  0020F4  D7FE               	goto	l418
  4772  0020F6  A4C7               	btfss	4039,2,c	;volatile
  4773  0020F8  B0C7               	btfsc	4039,0,c	;volatile
  4774  0020FA  D002               	goto	l2590
  4775  0020FC  0EFE               	movlw	254
  4776  0020FE  0012               	return	
  4777  002100                     l2590:
  4778  002100  0E00               	movlw	0
  4779  002102  0012               	return	
  4780  002104                     l2594:
  4781  002104  50C6               	movf	4038,w,c	;volatile
  4782  002106  0B0F               	andlw	15
  4783  002108  0A08               	xorlw	8
  4784  00210A  B4D8               	btfsc	status,2,c
  4785  00210C  D005               	goto	l427
  4786  00210E  50C6               	movf	4038,w,c	;volatile
  4787  002110  0B0F               	andlw	15
  4788  002112  0A0B               	xorlw	11
  4789  002114  A4D8               	btfss	status,2,c
  4790  002116  0012               	return	
  4791  002118                     l427:
  4792  002118  B0C7               	btfsc	4039,0,c	;volatile
  4793  00211A  D7FE               	goto	l427
  4794  00211C                     l2598:
  4795  00211C  30C7               	rrcf	4039,w,c	;volatile
  4796  00211E  32E8               	rrcf	wreg,f,c
  4797  002120  0B01               	andlw	1
  4798  002122  6E02               	movwf	??_WriteI2C1& (0+255),c
  4799  002124  50C5               	movf	4037,w,c	;volatile
  4800  002126  0B1F               	andlw	31
  4801  002128  1002               	iorwf	??_WriteI2C1,w,c
  4802  00212A  0900               	iorlw	0
  4803  00212C  A4D8               	btfss	status,2,c
  4804  00212E  D7F6               	goto	l2598
  4805  002130  ACC5               	btfss	4037,6,c	;volatile
  4806  002132  D002               	goto	l2606
  4807  002134  0EFE               	movlw	254
  4808  002136  0012               	return	
  4809  002138                     l2606:
  4810  002138  0E00               	movlw	0
  4811  00213A  0012               	return	
  4812  00213C                     __end_of_WriteI2C1:
  4813                           	opt stack 0
  4814                           tblptru	equ	0xFF8
  4815                           tblptrh	equ	0xFF7
  4816                           tblptrl	equ	0xFF6
  4817                           tablat	equ	0xFF5
  4818                           prodh	equ	0xFF4
  4819                           prodl	equ	0xFF3
  4820                           wreg	equ	0xFE8
  4821                           indf2	equ	0xFDF
  4822                           postinc2	equ	0xFDE
  4823                           postdec2	equ	0xFDD
  4824                           fsr2h	equ	0xFDA
  4825                           fsr2l	equ	0xFD9
  4826                           status	equ	0xFD8
  4827                           
  4828 ;; *************** function _Tomcat_Setup *****************
  4829 ;; Defined at:
  4830 ;;		line 8 in file "Tomcat_driver.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;		None
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;		None
  4835 ;; Return value:  Size  Location     Type
  4836 ;;		None               void
  4837 ;; Registers used:
  4838 ;;		wreg, status,2, status,0, cstack
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4846 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4848 ;;Total ram usage:        2 bytes
  4849 ;; Hardware stack levels used:    1
  4850 ;; Hardware stack levels required when called:    1
  4851 ;; This function calls:
  4852 ;;		_OpenI2C1
  4853 ;;		_Open1USART
  4854 ;; This function is called by:
  4855 ;;		_main
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           	psect	text31
  4860  0024F0                     __ptext31:
  4861                           	opt stack 0
  4862  0024F0                     _Tomcat_Setup:
  4863                           	opt stack 28
  4864                           
  4865                           ;Tomcat_driver.c: 10: ANSELC = 0;
  4866                           
  4867                           ;incstack = 0
  4868                           ;incstack = 0
  4869  0024F0  0E00               	movlw	0
  4870  0024F2  010F               	movlb	15	; () banked
  4871  0024F4  010F               	movlb	15	; () banked
  4872  0024F6  6F3A               	movwf	58,b	;volatile
  4873                           
  4874                           ; BSR set to: 15
  4875                           ;Tomcat_driver.c: 11: SSP1CON1 &=0xDF;
  4876  0024F8  9AC6               	bcf	4038,5,c	;volatile
  4877                           
  4878                           ; BSR set to: 15
  4879                           ;Tomcat_driver.c: 12: OpenI2C1(0b00001000,0b10000000);
  4880  0024FA  6E04               	movwf	??_Tomcat_Setup& (0+255),c
  4881  0024FC  0E08               	movlw	8
  4882  0024FE  6E01               	movwf	?_OpenI2C1,c
  4883  002500  5004               	movf	??_Tomcat_Setup& (0+255),w,c
  4884  002502  6E05               	movwf	(??_Tomcat_Setup+1)& (0+255),c
  4885  002504  0E80               	movlw	128
  4886  002506  6E02               	movwf	?_OpenI2C1+1,c
  4887  002508  5005               	movf	(??_Tomcat_Setup+1)& (0+255),w,c
  4888  00250A  ECEF  F012         	call	_OpenI2C1	;wreg free
  4889                           
  4890                           ;Tomcat_driver.c: 13: SSP1ADD=49;
  4891  00250E  0E31               	movlw	49
  4892  002510  6EC8               	movwf	4040,c	;volatile
  4893                           
  4894                           ;Tomcat_driver.c: 14: Open1USART(0b01111111 &
  4895                           ;Tomcat_driver.c: 15: 0b11111111 &
  4896                           ;Tomcat_driver.c: 16: 0b11111110 &
  4897                           ;Tomcat_driver.c: 17: 0b11111101 &
  4898                           ;Tomcat_driver.c: 18: 0b11111111 &
  4899                           ;Tomcat_driver.c: 19: 0b11111111, (20000000/(16*9600))-1);
  4900  002512  6E04               	movwf	??_Tomcat_Setup& (0+255),c
  4901  002514  0E7C               	movlw	124
  4902  002516  6E01               	movwf	?_Open1USART,c
  4903  002518  5004               	movf	??_Tomcat_Setup& (0+255),w,c
  4904  00251A  0E03               	movlw	3
  4905  00251C  6E03               	movwf	?_Open1USART+2,c
  4906  00251E  0E76               	movlw	118
  4907  002520  6E02               	movwf	?_Open1USART+1,c
  4908  002522  ECB1  F011         	call	_Open1USART	;wreg free
  4909  002526  0012               	return	
  4910  002528                     __end_of_Tomcat_Setup:
  4911                           	opt stack 0
  4912                           tblptru	equ	0xFF8
  4913                           tblptrh	equ	0xFF7
  4914                           tblptrl	equ	0xFF6
  4915                           tablat	equ	0xFF5
  4916                           prodh	equ	0xFF4
  4917                           prodl	equ	0xFF3
  4918                           wreg	equ	0xFE8
  4919                           indf2	equ	0xFDF
  4920                           postinc2	equ	0xFDE
  4921                           postdec2	equ	0xFDD
  4922                           fsr2h	equ	0xFDA
  4923                           fsr2l	equ	0xFD9
  4924                           status	equ	0xFD8
  4925                           
  4926 ;; *************** function _Open1USART *****************
  4927 ;; Defined at:
  4928 ;;		line 125 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\u1open.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;  config          1    0[COMRAM] unsigned char 
  4931 ;;  spbrg           2    1[COMRAM] unsigned int 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;		None
  4934 ;; Return value:  Size  Location     Type
  4935 ;;		None               void
  4936 ;; Registers used:
  4937 ;;		wreg, status,2
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4943 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;Total ram usage:        3 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_Tomcat_Setup
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text32
  4957  002362                     __ptext32:
  4958                           	opt stack 0
  4959  002362                     _Open1USART:
  4960                           	opt stack 28
  4961                           
  4962                           ;incstack = 0
  4963                           ;incstack = 0
  4964  002362  0E00               	movlw	0
  4965  002364  6EAC               	movwf	4012,c	;volatile
  4966  002366  0E00               	movlw	0
  4967  002368  6EAB               	movwf	4011,c	;volatile
  4968  00236A  B001               	btfsc	Open1USART@config,0,c
  4969  00236C  88AC               	bsf	4012,4,c	;volatile
  4970  00236E  A201               	btfss	Open1USART@config,1,c
  4971  002370  D002               	goto	l313
  4972  002372  8CAC               	bsf	4012,6,c	;volatile
  4973  002374  8CAB               	bsf	4011,6,c	;volatile
  4974  002376                     l313:
  4975  002376  B401               	btfsc	Open1USART@config,2,c
  4976  002378  8EAC               	bsf	4012,7,c	;volatile
  4977  00237A  A601               	btfss	Open1USART@config,3,c
  4978  00237C  D002               	goto	l315
  4979  00237E  88AB               	bsf	4011,4,c	;volatile
  4980  002380  D001               	goto	l316
  4981  002382                     l315:
  4982  002382  8AAB               	bsf	4011,5,c	;volatile
  4983  002384                     l316:
  4984  002384  B801               	btfsc	Open1USART@config,4,c
  4985  002386  84AC               	bsf	4012,2,c	;volatile
  4986  002388  BA01               	btfsc	Open1USART@config,5,c
  4987  00238A  86AB               	bsf	4011,3,c	;volatile
  4988  00238C  AC01               	btfss	Open1USART@config,6,c
  4989  00238E  D002               	goto	l319
  4990  002390  8A9D               	bsf	3997,5,c	;volatile
  4991  002392  D001               	goto	l320
  4992  002394                     l319:
  4993  002394  9A9D               	bcf	3997,5,c	;volatile
  4994  002396                     l320:
  4995  002396  AE01               	btfss	Open1USART@config,7,c
  4996  002398  D002               	goto	l321
  4997  00239A  889D               	bsf	3997,4,c	;volatile
  4998  00239C  D001               	goto	l322
  4999  00239E                     l321:
  5000  00239E  989D               	bcf	3997,4,c	;volatile
  5001  0023A0                     l322:
  5002  0023A0  C002  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  5003  0023A4  5003               	movf	Open1USART@spbrg+1,w,c
  5004  0023A6  6EB0               	movwf	4016,c	;volatile
  5005  0023A8  8AAC               	bsf	4012,5,c	;volatile
  5006  0023AA  8EAB               	bsf	4011,7,c	;volatile
  5007  0023AC  0012               	return	
  5008  0023AE                     __end_of_Open1USART:
  5009                           	opt stack 0
  5010                           tblptru	equ	0xFF8
  5011                           tblptrh	equ	0xFF7
  5012                           tblptrl	equ	0xFF6
  5013                           tablat	equ	0xFF5
  5014                           prodh	equ	0xFF4
  5015                           prodl	equ	0xFF3
  5016                           wreg	equ	0xFE8
  5017                           indf2	equ	0xFDF
  5018                           postinc2	equ	0xFDE
  5019                           postdec2	equ	0xFDD
  5020                           fsr2h	equ	0xFDA
  5021                           fsr2l	equ	0xFD9
  5022                           status	equ	0xFD8
  5023                           
  5024 ;; *************** function _OpenI2C1 *****************
  5025 ;; Defined at:
  5026 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\i2c\i2c1open.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  sync_mode       1    0[COMRAM] unsigned char 
  5029 ;;  slew            1    1[COMRAM] unsigned char 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;		None               void
  5034 ;; Registers used:
  5035 ;;		wreg, status,2, status,0
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;Total ram usage:        2 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; This function calls:
  5048 ;;		Nothing
  5049 ;; This function is called by:
  5050 ;;		_Tomcat_Setup
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           	psect	text33
  5055  0025DE                     __ptext33:
  5056                           	opt stack 0
  5057  0025DE                     _OpenI2C1:
  5058                           	opt stack 28
  5059                           
  5060                           ;incstack = 0
  5061                           ;incstack = 0
  5062  0025DE  0E3F               	movlw	63
  5063  0025E0  16C7               	andwf	4039,f,c	;volatile
  5064  0025E2  0E00               	movlw	0
  5065  0025E4  6EC6               	movwf	4038,c	;volatile
  5066  0025E6  0E00               	movlw	0
  5067  0025E8  6EC5               	movwf	4037,c	;volatile
  5068  0025EA  5001               	movf	OpenI2C1@sync_mode,w,c
  5069  0025EC  12C6               	iorwf	4038,f,c	;volatile
  5070  0025EE  5002               	movf	OpenI2C1@slew,w,c
  5071  0025F0  12C7               	iorwf	4039,f,c	;volatile
  5072  0025F2  8AC6               	bsf	4038,5,c	;volatile
  5073  0025F4  0012               	return	
  5074  0025F6                     __end_of_OpenI2C1:
  5075                           	opt stack 0
  5076                           tblptru	equ	0xFF8
  5077                           tblptrh	equ	0xFF7
  5078                           tblptrl	equ	0xFF6
  5079                           tablat	equ	0xFF5
  5080                           prodh	equ	0xFF4
  5081                           prodl	equ	0xFF3
  5082                           wreg	equ	0xFE8
  5083                           indf2	equ	0xFDF
  5084                           postinc2	equ	0xFDE
  5085                           postdec2	equ	0xFDD
  5086                           fsr2h	equ	0xFDA
  5087                           fsr2l	equ	0xFD9
  5088                           status	equ	0xFD8
  5089                           
  5090 ;; *************** function ___ftmul *****************
  5091 ;; Defined at:
  5092 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\ftmul.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;  f1              3   33[COMRAM] float 
  5095 ;;  f2              3   36[COMRAM] float 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  f3_as_produc    3   45[COMRAM] unsigned um
  5098 ;;  sign            1   49[COMRAM] unsigned char 
  5099 ;;  cntr            1   48[COMRAM] unsigned char 
  5100 ;;  exp             1   44[COMRAM] unsigned char 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  3   33[COMRAM] float 
  5103 ;; Registers used:
  5104 ;;		wreg, status,2, status,0, cstack
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5110 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5113 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;Total ram usage:       17 bytes
  5115 ;; Hardware stack levels used:    1
  5116 ;; Hardware stack levels required when called:    1
  5117 ;; This function calls:
  5118 ;;		___ftpack
  5119 ;; This function is called by:
  5120 ;;		___asftmul
  5121 ;;		_atan
  5122 ;;		_eval_poly
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           	psect	text34
  5127  001842                     __ptext34:
  5128                           	opt stack 0
  5129  001842                     ___ftmul:
  5130                           	opt stack 26
  5131                           
  5132                           ;incstack = 0
  5133                           ;incstack = 0
  5134  001842  0E0F               	movlw	15
  5135  001844  6E28               	movwf	??___ftmul& (0+255),c
  5136  001846  C022  F029         	movff	___ftmul@f1,??___ftmul+1
  5137  00184A  C023  F02A         	movff	___ftmul@f1+1,??___ftmul+2
  5138  00184E  C024  F02B         	movff	___ftmul@f1+2,??___ftmul+3
  5139  001852  2828               	incf	??___ftmul,w,c
  5140  001854  6E2C               	movwf	(??___ftmul+4)& (0+255),c
  5141  001856  D004               	goto	u2430
  5142  001858                     u2435:
  5143  001858  90D8               	bcf	status,0,c
  5144  00185A  322B               	rrcf	??___ftmul+3,f,c
  5145  00185C  322A               	rrcf	??___ftmul+2,f,c
  5146  00185E  3229               	rrcf	??___ftmul+1,f,c
  5147  001860                     u2430:
  5148  001860  2E2C               	decfsz	(??___ftmul+4)& (0+255),f,c
  5149  001862  D7FA               	goto	u2435
  5150  001864  5029               	movf	??___ftmul+1,w,c
  5151  001866  6E2D               	movwf	___ftmul@exp,c
  5152  001868  662D               	tstfsz	___ftmul@exp& (0+255),c
  5153  00186A  D007               	goto	l2906
  5154  00186C  0E00               	movlw	0
  5155  00186E  6E22               	movwf	?___ftmul,c
  5156  001870  0E00               	movlw	0
  5157  001872  6E23               	movwf	?___ftmul+1,c
  5158  001874  0E00               	movlw	0
  5159  001876  6E24               	movwf	?___ftmul+2,c
  5160  001878  0012               	return	
  5161  00187A                     l2906:
  5162  00187A  0E0F               	movlw	15
  5163  00187C  6E28               	movwf	??___ftmul& (0+255),c
  5164  00187E  C025  F029         	movff	___ftmul@f2,??___ftmul+1
  5165  001882  C026  F02A         	movff	___ftmul@f2+1,??___ftmul+2
  5166  001886  C027  F02B         	movff	___ftmul@f2+2,??___ftmul+3
  5167  00188A  2828               	incf	??___ftmul,w,c
  5168  00188C  6E2C               	movwf	(??___ftmul+4)& (0+255),c
  5169  00188E  D004               	goto	u2450
  5170  001890                     u2455:
  5171  001890  90D8               	bcf	status,0,c
  5172  001892  322B               	rrcf	??___ftmul+3,f,c
  5173  001894  322A               	rrcf	??___ftmul+2,f,c
  5174  001896  3229               	rrcf	??___ftmul+1,f,c
  5175  001898                     u2450:
  5176  001898  2E2C               	decfsz	(??___ftmul+4)& (0+255),f,c
  5177  00189A  D7FA               	goto	u2455
  5178  00189C  5029               	movf	??___ftmul+1,w,c
  5179  00189E  6E32               	movwf	___ftmul@sign,c
  5180  0018A0  6632               	tstfsz	___ftmul@sign& (0+255),c
  5181  0018A2  D007               	goto	l2912
  5182  0018A4  0E00               	movlw	0
  5183  0018A6  6E22               	movwf	?___ftmul,c
  5184  0018A8  0E00               	movlw	0
  5185  0018AA  6E23               	movwf	?___ftmul+1,c
  5186  0018AC  0E00               	movlw	0
  5187  0018AE  6E24               	movwf	?___ftmul+2,c
  5188  0018B0  0012               	return	
  5189  0018B2                     l2912:
  5190  0018B2  5032               	movf	___ftmul@sign,w,c
  5191  0018B4  0F7B               	addlw	123
  5192  0018B6  262D               	addwf	___ftmul@exp,f,c
  5193  0018B8  C024  F032         	movff	___ftmul@f1+2,___ftmul@sign
  5194  0018BC  5027               	movf	(___ftmul@f2+2)& (0+255),w,c
  5195  0018BE  1A32               	xorwf	___ftmul@sign,f,c
  5196  0018C0  0E80               	movlw	128
  5197  0018C2  1632               	andwf	___ftmul@sign,f,c
  5198  0018C4  8E23               	bsf	___ftmul@f1+1,7,c
  5199  0018C6  8E26               	bsf	___ftmul@f2+1,7,c
  5200  0018C8  0EFF               	movlw	255
  5201  0018CA  1625               	andwf	___ftmul@f2,f,c
  5202  0018CC  0EFF               	movlw	255
  5203  0018CE  1626               	andwf	___ftmul@f2+1,f,c
  5204  0018D0  0E00               	movlw	0
  5205  0018D2  1627               	andwf	___ftmul@f2+2,f,c
  5206  0018D4  0E00               	movlw	0
  5207  0018D6  6E2E               	movwf	___ftmul@f3_as_product,c
  5208  0018D8  0E00               	movlw	0
  5209  0018DA  6E2F               	movwf	___ftmul@f3_as_product+1,c
  5210  0018DC  0E00               	movlw	0
  5211  0018DE  6E30               	movwf	___ftmul@f3_as_product+2,c
  5212  0018E0  6E28               	movwf	??___ftmul& (0+255),c
  5213  0018E2  0E07               	movlw	7
  5214  0018E4  6E31               	movwf	___ftmul@cntr,c
  5215  0018E6  5028               	movf	??___ftmul& (0+255),w,c
  5216  0018E8                     l2926:
  5217  0018E8  A022               	btfss	___ftmul@f1,0,c
  5218  0018EA  D006               	goto	l2930
  5219  0018EC  5025               	movf	___ftmul@f2,w,c
  5220  0018EE  262E               	addwf	___ftmul@f3_as_product,f,c
  5221  0018F0  5026               	movf	___ftmul@f2+1,w,c
  5222  0018F2  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  5223  0018F4  5027               	movf	___ftmul@f2+2,w,c
  5224  0018F6  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  5225  0018F8                     l2930:
  5226  0018F8  90D8               	bcf	status,0,c
  5227  0018FA  3224               	rrcf	___ftmul@f1+2,f,c
  5228  0018FC  3223               	rrcf	___ftmul@f1+1,f,c
  5229  0018FE  3222               	rrcf	___ftmul@f1,f,c
  5230  001900  90D8               	bcf	status,0,c
  5231  001902  3625               	rlcf	___ftmul@f2,f,c
  5232  001904  3626               	rlcf	___ftmul@f2+1,f,c
  5233  001906  3627               	rlcf	___ftmul@f2+2,f,c
  5234  001908  2E31               	decfsz	___ftmul@cntr,f,c
  5235  00190A  D7EE               	goto	l2926
  5236  00190C  6E28               	movwf	??___ftmul& (0+255),c
  5237  00190E  0E09               	movlw	9
  5238  001910  6E31               	movwf	___ftmul@cntr,c
  5239  001912  5028               	movf	??___ftmul& (0+255),w,c
  5240  001914                     l2936:
  5241  001914  A022               	btfss	___ftmul@f1,0,c
  5242  001916  D006               	goto	l2940
  5243  001918  5025               	movf	___ftmul@f2,w,c
  5244  00191A  262E               	addwf	___ftmul@f3_as_product,f,c
  5245  00191C  5026               	movf	___ftmul@f2+1,w,c
  5246  00191E  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  5247  001920  5027               	movf	___ftmul@f2+2,w,c
  5248  001922  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  5249  001924                     l2940:
  5250  001924  90D8               	bcf	status,0,c
  5251  001926  3224               	rrcf	___ftmul@f1+2,f,c
  5252  001928  3223               	rrcf	___ftmul@f1+1,f,c
  5253  00192A  3222               	rrcf	___ftmul@f1,f,c
  5254  00192C  90D8               	bcf	status,0,c
  5255  00192E  3230               	rrcf	___ftmul@f3_as_product+2,f,c
  5256  001930  322F               	rrcf	___ftmul@f3_as_product+1,f,c
  5257  001932  322E               	rrcf	___ftmul@f3_as_product,f,c
  5258  001934  2E31               	decfsz	___ftmul@cntr,f,c
  5259  001936  D7EE               	goto	l2936
  5260  001938  C02E  F001         	movff	___ftmul@f3_as_product,?___ftpack
  5261  00193C  C02F  F002         	movff	___ftmul@f3_as_product+1,?___ftpack+1
  5262  001940  C030  F003         	movff	___ftmul@f3_as_product+2,?___ftpack+2
  5263  001944  C02D  F004         	movff	___ftmul@exp,?___ftpack+3
  5264  001948  C032  F005         	movff	___ftmul@sign,?___ftpack+4
  5265  00194C  EC2A  F00E         	call	___ftpack	;wreg free
  5266  001950  C003  F024         	movff	?___ftpack+2,?___ftmul+2
  5267  001954  C002  F023         	movff	?___ftpack+1,?___ftmul+1
  5268  001958  C001  F022         	movff	?___ftpack,?___ftmul
  5269  00195C  0012               	return	
  5270  00195E                     __end_of___ftmul:
  5271                           	opt stack 0
  5272                           tblptru	equ	0xFF8
  5273                           tblptrh	equ	0xFF7
  5274                           tblptrl	equ	0xFF6
  5275                           tablat	equ	0xFF5
  5276                           prodh	equ	0xFF4
  5277                           prodl	equ	0xFF3
  5278                           wreg	equ	0xFE8
  5279                           indf2	equ	0xFDF
  5280                           postinc2	equ	0xFDE
  5281                           postdec2	equ	0xFDD
  5282                           fsr2h	equ	0xFDA
  5283                           fsr2l	equ	0xFD9
  5284                           status	equ	0xFD8
  5285                           
  5286 ;; *************** function ___ftneg *****************
  5287 ;; Defined at:
  5288 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\ftneg.c"
  5289 ;; Parameters:    Size  Location     Type
  5290 ;;  f1              3   15[COMRAM] float 
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;		None
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  3   15[COMRAM] float 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5302 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5305 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;Total ram usage:        3 bytes
  5307 ;; Hardware stack levels used:    1
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_main
  5312 ;;		_atan
  5313 ;;		_fabs
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text35
  5318  00259C                     __ptext35:
  5319                           	opt stack 0
  5320  00259C                     ___ftneg:
  5321                           	opt stack 29
  5322                           
  5323                           ;incstack = 0
  5324                           ;incstack = 0
  5325  00259C  0E7F               	movlw	127
  5326  00259E  1412               	andwf	___ftneg@f1+2,w,c
  5327  0025A0  1011               	iorwf	___ftneg@f1+1,w,c
  5328  0025A2  1010               	iorwf	___ftneg@f1,w,c
  5329  0025A4  B4D8               	btfsc	status,2,c
  5330  0025A6  D006               	goto	l850
  5331  0025A8  0E00               	movlw	0
  5332  0025AA  1A10               	xorwf	___ftneg@f1,f,c
  5333  0025AC  0E00               	movlw	0
  5334  0025AE  1A11               	xorwf	___ftneg@f1+1,f,c
  5335  0025B0  0E80               	movlw	128
  5336  0025B2  1A12               	xorwf	___ftneg@f1+2,f,c
  5337  0025B4                     l850:
  5338  0025B4  C010  F010         	movff	___ftneg@f1,?___ftneg
  5339  0025B8  C011  F011         	movff	___ftneg@f1+1,?___ftneg+1
  5340  0025BC  C012  F012         	movff	___ftneg@f1+2,?___ftneg+2
  5341  0025C0  0012               	return	
  5342  0025C2                     __end_of___ftneg:
  5343                           	opt stack 0
  5344                           tblptru	equ	0xFF8
  5345                           tblptrh	equ	0xFF7
  5346                           tblptrl	equ	0xFF6
  5347                           tablat	equ	0xFF5
  5348                           prodh	equ	0xFF4
  5349                           prodl	equ	0xFF3
  5350                           wreg	equ	0xFE8
  5351                           indf2	equ	0xFDF
  5352                           postinc2	equ	0xFDE
  5353                           postdec2	equ	0xFDD
  5354                           fsr2h	equ	0xFDA
  5355                           fsr2l	equ	0xFD9
  5356                           status	equ	0xFD8
  5357                           
  5358 ;; *************** function ___wmul *****************
  5359 ;; Defined at:
  5360 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\wmul.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;  multiplier      2    9[COMRAM] unsigned int 
  5363 ;;  multiplicand    2   11[COMRAM] unsigned int 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  product         2   13[COMRAM] unsigned int 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  2    9[COMRAM] unsigned int 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0, prodl, prodh
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5376 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;Total ram usage:        6 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; This function calls:
  5382 ;;		Nothing
  5383 ;; This function is called by:
  5384 ;;		_main
  5385 ;;		_eval_poly
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text36
  5390  0024B6                     __ptext36:
  5391                           	opt stack 0
  5392  0024B6                     ___wmul:
  5393                           	opt stack 29
  5394                           
  5395                           ;incstack = 0
  5396                           ;incstack = 0
  5397  0024B6  500A               	movf	___wmul@multiplier,w,c
  5398  0024B8  020C               	mulwf	___wmul@multiplicand,c
  5399  0024BA  CFF3 F00E          	movff	prodl,___wmul@product
  5400  0024BE  CFF4 F00F          	movff	prodh,___wmul@product+1
  5401  0024C2  500A               	movf	___wmul@multiplier,w,c
  5402  0024C4  020D               	mulwf	___wmul@multiplicand+1,c
  5403  0024C6  CFF3 FFF4          	movff	prodl,prodh
  5404  0024CA  6AF3               	clrf	prodl,c
  5405  0024CC  50F3               	movf	prodl,w,c
  5406  0024CE  260E               	addwf	___wmul@product,f,c
  5407  0024D0  50F4               	movf	prodh,w,c
  5408  0024D2  220F               	addwfc	___wmul@product+1,f,c
  5409  0024D4  500B               	movf	___wmul@multiplier+1,w,c
  5410  0024D6  020C               	mulwf	___wmul@multiplicand,c
  5411  0024D8  CFF3 FFF4          	movff	prodl,prodh
  5412  0024DC  6AF3               	clrf	prodl,c
  5413  0024DE  50F3               	movf	prodl,w,c
  5414  0024E0  260E               	addwf	___wmul@product,f,c
  5415  0024E2  50F4               	movf	prodh,w,c
  5416  0024E4  220F               	addwfc	___wmul@product+1,f,c
  5417  0024E6  C00E  F00A         	movff	___wmul@product,?___wmul
  5418  0024EA  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
  5419  0024EE  0012               	return	
  5420  0024F0                     __end_of___wmul:
  5421                           	opt stack 0
  5422                           tblptru	equ	0xFF8
  5423                           tblptrh	equ	0xFF7
  5424                           tblptrl	equ	0xFF6
  5425                           tablat	equ	0xFF5
  5426                           prodh	equ	0xFF4
  5427                           prodl	equ	0xFF3
  5428                           wreg	equ	0xFE8
  5429                           indf2	equ	0xFDF
  5430                           postinc2	equ	0xFDE
  5431                           postdec2	equ	0xFDD
  5432                           fsr2h	equ	0xFDA
  5433                           fsr2l	equ	0xFD9
  5434                           status	equ	0xFD8
  5435                           
  5436 ;; *************** function ___ftge *****************
  5437 ;; Defined at:
  5438 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\ftge.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;  ff1             3    0[COMRAM] float 
  5441 ;;  ff2             3    3[COMRAM] float 
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;		None
  5444 ;; Return value:  Size  Location     Type
  5445 ;;		None               void
  5446 ;; Registers used:
  5447 ;;		wreg, status,2, status,0
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5453 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;Total ram usage:        9 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; This function calls:
  5460 ;;		Nothing
  5461 ;; This function is called by:
  5462 ;;		_atan
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466                           	psect	text37
  5467  001FC4                     __ptext37:
  5468                           	opt stack 0
  5469  001FC4                     ___ftge:
  5470                           	opt stack 28
  5471                           
  5472                           ;incstack = 0
  5473                           ;incstack = 0
  5474  001FC4  AE03               	btfss	___ftge@ff1+2,7,c
  5475  001FC6  D016               	goto	l2818
  5476  001FC8  C001  F007         	movff	___ftge@ff1,??___ftge
  5477  001FCC  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  5478  001FD0  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  5479  001FD4  1E07               	comf	??___ftge,f,c
  5480  001FD6  1E08               	comf	??___ftge+1,f,c
  5481  001FD8  1E09               	comf	??___ftge+2,f,c
  5482  001FDA  2A07               	incf	??___ftge,f,c
  5483  001FDC  0E00               	movlw	0
  5484  001FDE  2208               	addwfc	??___ftge+1,f,c
  5485  001FE0  2209               	addwfc	??___ftge+2,f,c
  5486  001FE2  0E00               	movlw	0
  5487  001FE4  2407               	addwf	??___ftge,w,c
  5488  001FE6  6E01               	movwf	___ftge@ff1,c
  5489  001FE8  0E00               	movlw	0
  5490  001FEA  2008               	addwfc	??___ftge+1,w,c
  5491  001FEC  6E02               	movwf	___ftge@ff1+1,c
  5492  001FEE  0E80               	movlw	128
  5493  001FF0  2009               	addwfc	??___ftge+2,w,c
  5494  001FF2  6E03               	movwf	___ftge@ff1+2,c
  5495  001FF4                     l2818:
  5496  001FF4  AE06               	btfss	___ftge@ff2+2,7,c
  5497  001FF6  D016               	goto	l2822
  5498  001FF8  C004  F007         	movff	___ftge@ff2,??___ftge
  5499  001FFC  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  5500  002000  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  5501  002004  1E07               	comf	??___ftge,f,c
  5502  002006  1E08               	comf	??___ftge+1,f,c
  5503  002008  1E09               	comf	??___ftge+2,f,c
  5504  00200A  2A07               	incf	??___ftge,f,c
  5505  00200C  0E00               	movlw	0
  5506  00200E  2208               	addwfc	??___ftge+1,f,c
  5507  002010  2209               	addwfc	??___ftge+2,f,c
  5508  002012  0E00               	movlw	0
  5509  002014  2407               	addwf	??___ftge,w,c
  5510  002016  6E04               	movwf	___ftge@ff2,c
  5511  002018  0E00               	movlw	0
  5512  00201A  2008               	addwfc	??___ftge+1,w,c
  5513  00201C  6E05               	movwf	___ftge@ff2+1,c
  5514  00201E  0E80               	movlw	128
  5515  002020  2009               	addwfc	??___ftge+2,w,c
  5516  002022  6E06               	movwf	___ftge@ff2+2,c
  5517  002024                     l2822:
  5518  002024  0E00               	movlw	0
  5519  002026  1A01               	xorwf	___ftge@ff1,f,c
  5520  002028  0E00               	movlw	0
  5521  00202A  1A02               	xorwf	___ftge@ff1+1,f,c
  5522  00202C  0E80               	movlw	128
  5523  00202E  1A03               	xorwf	___ftge@ff1+2,f,c
  5524  002030  0E00               	movlw	0
  5525  002032  1A04               	xorwf	___ftge@ff2,f,c
  5526  002034  0E00               	movlw	0
  5527  002036  1A05               	xorwf	___ftge@ff2+1,f,c
  5528  002038  0E80               	movlw	128
  5529  00203A  1A06               	xorwf	___ftge@ff2+2,f,c
  5530  00203C  5004               	movf	___ftge@ff2,w,c
  5531  00203E  5C01               	subwf	___ftge@ff1,w,c
  5532  002040  5005               	movf	___ftge@ff2+1,w,c
  5533  002042  5802               	subwfb	___ftge@ff1+1,w,c
  5534  002044  5006               	movf	___ftge@ff2+2,w,c
  5535  002046  5803               	subwfb	___ftge@ff1+2,w,c
  5536  002048  B0D8               	btfsc	status,0,c
  5537  00204A  D002               	goto	l2828
  5538  00204C  90D8               	bcf	status,0,c
  5539  00204E  0012               	return	
  5540  002050                     l2828:
  5541  002050  80D8               	bsf	status,0,c
  5542  002052  0012               	return	
  5543  002054                     __end_of___ftge:
  5544                           	opt stack 0
  5545                           tblptru	equ	0xFF8
  5546                           tblptrh	equ	0xFF7
  5547                           tblptrl	equ	0xFF6
  5548                           tablat	equ	0xFF5
  5549                           prodh	equ	0xFF4
  5550                           prodl	equ	0xFF3
  5551                           wreg	equ	0xFE8
  5552                           indf2	equ	0xFDF
  5553                           postinc2	equ	0xFDE
  5554                           postdec2	equ	0xFDD
  5555                           fsr2h	equ	0xFDA
  5556                           fsr2l	equ	0xFD9
  5557                           status	equ	0xFD8
  5558                           tblptru	equ	0xFF8
  5559                           tblptrh	equ	0xFF7
  5560                           tblptrl	equ	0xFF6
  5561                           tablat	equ	0xFF5
  5562                           prodh	equ	0xFF4
  5563                           prodl	equ	0xFF3
  5564                           wreg	equ	0xFE8
  5565                           indf2	equ	0xFDF
  5566                           postinc2	equ	0xFDE
  5567                           postdec2	equ	0xFDD
  5568                           fsr2h	equ	0xFDA
  5569                           fsr2l	equ	0xFD9
  5570                           status	equ	0xFD8
  5571                           
  5572                           	psect	rparam
  5573  0000                     tblptru	equ	0xFF8
  5574                           tblptrh	equ	0xFF7
  5575                           tblptrl	equ	0xFF6
  5576                           tablat	equ	0xFF5
  5577                           prodh	equ	0xFF4
  5578                           prodl	equ	0xFF3
  5579                           wreg	equ	0xFE8
  5580                           indf2	equ	0xFDF
  5581                           postinc2	equ	0xFDE
  5582                           postdec2	equ	0xFDD
  5583                           fsr2h	equ	0xFDA
  5584                           fsr2l	equ	0xFD9
  5585                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    43
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      92
    BANK0           160     76      76
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ?_eval_poly	 size(2) Largest target is 3
		 -> atan@val(BANK0[3]), 

    ?_fabs	 size(2) Largest target is 0

    ?___asftmul	float  size(2) Largest target is 3
		 -> atan@val(BANK0[3]), 

    ?___ftmul	float  size(2) Largest target is 0

    ?___ftpack	float  size(2) Largest target is 0

    ?___lwmod	unsigned int  size(2) Largest target is 0

    ?___lwdiv	unsigned int  size(2) Largest target is 0

    ?___awmod	int  size(2) Largest target is 0

    ?___fttol	long  size(2) Largest target is 0

    ?___ftadd	float  size(2) Largest target is 0

    ?___ftneg	float  size(2) Largest target is 3
		 -> atan@val(BANK0[3]), 

    ?___ftdiv	float  size(2) Largest target is 0

    ?___awtoft	float  size(2) Largest target is 0

    ?___wmul	unsigned int  size(2) Largest target is 0

    ?___awdiv	int  size(2) Largest target is 0

    ?_atan	int  size(2) Largest target is 3
		 -> atan@val(BANK0[3]), 

    ?_openLSM9	unsigned int  size(2) Largest target is 0

    eval_poly@d	PTR const  size(2) Largest target is 18
		 -> atan@coeff_a(CODE[18]), atan@coeff_b(CODE[15]), 

    __asftmul@f1p	PTR float  size(2) Largest target is 3
		 -> atan@val(BANK0[3]), 

    putrs1USART@data	PTR const unsigned char  size(2) Largest target is 30
		 -> main@buff(BANK0[30]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[2]), STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> main@buff(BANK0[30]), 

    ?_sprintf	int  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S563$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    readLSM9_gyro@dest	PTR unsigned int  size(2) Largest target is 6
		 -> main@gyro(BANK0[6]), 

    readLSM9_mag@dest	PTR unsigned int  size(2) Largest target is 6
		 -> main@mag(BANK0[6]), 

    readLSM9_accel@dest	PTR unsigned int  size(2) Largest target is 6
		 -> main@accel(BANK0[6]), 


Critical Paths under _main in COMRAM

    _main->_atan
    ___fttol->___ftneg
    ___awtoft->___fttol
    _putrs1USART->_Write1USART
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _atan->_eval_poly
    _eval_poly->___ftadd
    ___ftadd->___ftdiv
    _fabs->___fttol
    ___asftmul->___ftdiv
    ___ftdiv->___awtoft
    _readLSM9_mag->_xmReadByte
    _readLSM9_gyro->_gReadByte
    _readLSM9_accel->_xmReadByte
    _openLSM9->_xmReadByte
    _openLSM9->_gReadByte
    _openLSM9_mag->_xmWriteByte
    _openLSM9_gyro->_gWriteByte
    _gWriteByte->_WriteI2C1
    _openLSM9_accel->_xmWriteByte
    _xmWriteByte->_WriteI2C1
    _gReadByte->_I2CReadByte
    _xmReadByte->_I2CReadByte
    _I2CReadByte->_WriteI2C1
    _Tomcat_Setup->_Open1USART
    ___ftmul->___fttol
    ___ftneg->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_atan

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                71    71      0   11044
                                             87 COMRAM     2     2      0
                                             13 BANK0     63    63      0
                       _Tomcat_Setup
                           _openLSM9
                     _readLSM9_accel
                      _readLSM9_gyro
                       _readLSM9_mag
                               _atan
                            _sprintf
                        _putrs1USART
                        _Write1USART
                            ___ftadd
                            ___ftdiv
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftneg
                            ___fttol
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     252
                                             18 COMRAM    15    11      4
                           ___ftpack (ARG)
                            ___awdiv (ARG)
                             ___ftge (ARG)
                            ___ftneg (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             5     2      3     300
                                             33 COMRAM     5     2      3
                           ___ftpack
                            ___awdiv (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     296
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     300
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) _putrs1USART                                          2     0      2      66
                                              1 COMRAM     2     0      2
                        _Write1USART
 ---------------------------------------------------------------------------------
 (1) _Write1USART                                          1     0      1      22
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    12      6     798
                                             14 COMRAM    18    12      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     159
                                              8 COMRAM     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     162
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _atan                                                16    13      3    5227
                                             84 COMRAM     3     0      3
                                              0 BANK0     13    13      0
                            ___ftadd
                            ___ftdiv
                          ___asftmul
                            ___ftmul
                               _fabs
                          _eval_poly
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                             ___ftge
                            ___ftneg
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           15     8      7    1921
                                             69 COMRAM    15     8      7
                            ___ftadd
                            ___ftmul
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             14     8      6    1049
                                             55 COMRAM    14     8      6
                           ___ftpack
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _fabs                                                 3     0      3     111
                                             33 COMRAM     3     0      3
                            ___ftneg
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___asftmul                                            5     0      5     601
                                             55 COMRAM     5     0      5
                            ___ftdiv (ARG)
                            ___ftmul
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             17    11      6     489
                                             38 COMRAM    17    11      6
                           ___ftpack
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5     209
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readLSM9_mag                                         8     6      2     200
                                              7 COMRAM     8     6      2
                         _xmReadByte
 ---------------------------------------------------------------------------------
 (1) _readLSM9_gyro                                        8     6      2     200
                                              7 COMRAM     8     6      2
                          _gReadByte
 ---------------------------------------------------------------------------------
 (1) _readLSM9_accel                                       8     6      2     200
                                              7 COMRAM     8     6      2
                         _xmReadByte
 ---------------------------------------------------------------------------------
 (1) _openLSM9                                             6     4      2     558
                                              7 COMRAM     6     4      2
                         _xmReadByte
                          _gReadByte
                     _openLSM9_accel
                      _openLSM9_gyro
                       _openLSM9_mag
 ---------------------------------------------------------------------------------
 (2) _openLSM9_mag                                         2     2      0      66
                                              4 COMRAM     2     2      0
                        _xmWriteByte
 ---------------------------------------------------------------------------------
 (2) _openLSM9_gyro                                        2     2      0      66
                                              4 COMRAM     2     2      0
                         _gWriteByte
 ---------------------------------------------------------------------------------
 (3) _gWriteByte                                           2     0      2      66
                                              2 COMRAM     2     0      2
                          _WriteI2C1
 ---------------------------------------------------------------------------------
 (2) _openLSM9_accel                                       2     2      0      66
                                              4 COMRAM     2     2      0
                        _xmWriteByte
 ---------------------------------------------------------------------------------
 (3) _xmWriteByte                                          2     0      2      66
                                              2 COMRAM     2     0      2
                          _WriteI2C1
 ---------------------------------------------------------------------------------
 (2) _gReadByte                                            1     0      1     134
                                              6 COMRAM     1     0      1
                        _I2CReadByte
 ---------------------------------------------------------------------------------
 (2) _xmReadByte                                           1     0      1     134
                                              6 COMRAM     1     0      1
                        _I2CReadByte
 ---------------------------------------------------------------------------------
 (3) _I2CReadByte                                          4     2      2     112
                                              2 COMRAM     4     2      2
                          _WriteI2C1
                           _ReadI2C1
 ---------------------------------------------------------------------------------
 (4) _ReadI2C1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _WriteI2C1                                            2     1      1      22
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Tomcat_Setup                                         2     2      0     264
                                              3 COMRAM     2     2      0
                           _OpenI2C1
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     0      3     220
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _OpenI2C1                                             2     0      2      44
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             17    11      6     535
                                             33 COMRAM    17    11      6
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3      45
                                             15 COMRAM     3     0      3
                           ___ftpack (ARG)
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     159
                                              9 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     136
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Tomcat_Setup
     _OpenI2C1
     _Open1USART
   _openLSM9
     _xmReadByte
       _I2CReadByte
         _WriteI2C1
         _ReadI2C1
     _gReadByte
       _I2CReadByte
         _WriteI2C1
         _ReadI2C1
     _openLSM9_accel
       _xmWriteByte
         _WriteI2C1
     _openLSM9_gyro
       _gWriteByte
         _WriteI2C1
     _openLSM9_mag
       _xmWriteByte
         _WriteI2C1
   _readLSM9_accel
     _xmReadByte
       _I2CReadByte
         _WriteI2C1
         _ReadI2C1
   _readLSM9_gyro
     _gReadByte
       _I2CReadByte
         _WriteI2C1
         _ReadI2C1
   _readLSM9_mag
     _xmReadByte
       _I2CReadByte
         _WriteI2C1
         _ReadI2C1
   _atan
     ___ftadd
       ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___awdiv (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
       ___awdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___ftdiv
       ___ftpack
       ___awdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___asftmul
       ___ftdiv (ARG)
         ___ftpack
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___awdiv (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
     ___ftmul
       ___ftpack
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
     _fabs
       ___ftneg
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
     _eval_poly
       ___ftadd
         ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___awdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___awdiv (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___fttol (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___ftge (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___awdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___awdiv (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftmul
         ___ftpack
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___awdiv (ARG)
     ___awtoft (ARG)
       ___ftpack
       ___awdiv (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___ftge (ARG)
     ___ftneg (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___fttol (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___ftge (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _putrs1USART
     _Write1USART
   _Write1USART
   ___ftadd
     ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___awdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___ftmul (ARG)
       ___ftpack
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
     ___awdiv (ARG)
     ___awtoft (ARG)
       ___ftpack
       ___awdiv (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___ftneg (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___fttol (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___ftge (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
   ___ftdiv
     ___ftpack
     ___awdiv (ARG)
     ___awtoft (ARG)
       ___ftpack
       ___awdiv (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___ftneg (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___fttol (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___ftge (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
   ___awdiv
   ___awmod
   ___awtoft
     ___ftpack
     ___awdiv (ARG)
     ___ftneg (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___fttol (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___ftge (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
   ___ftneg
     ___ftpack (ARG)
     ___awdiv (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
   ___fttol
     ___ftpack (ARG)
     ___awdiv (ARG)
     ___ftge (ARG)
     ___ftneg (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
   ___wmul
     ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      4C       5       47.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5C       1       96.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       4       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A8      12        0.0%
DATA                 0      0      AC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Fri Apr 11 14:55:20 2014

            _xmWriteByte 2576   __end_of_openLSM9_accel 2362    __end_of_openLSM9_gyro 2208  
                     l27 1088             ___awdiv@sign 0007      ___wmul@multiplicand 000C  
   __size_of_I2CReadByte 005A             ___asftmul@f2 003A             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
           ___ftadd@exp1 0045             ___ftadd@exp2 0044             ___ftadd@sign 0043  
                    l150 2552                      l320 2396                      l321 239E  
                    l313 2376                      l153 2570                      l322 23A0  
                    l162 2596                      l315 2382                      l331 2528  
                    l316 2384                      l174 2212                      l319 2394  
                    l183 2236                      l159 2578                      l192 225A  
                    l344 2600                      l418 20F2                      l427 2118  
                    l189 2254                      l393 25D4                      l394 25D6  
                    l571 13C4                      l808 1636                      l817 1652  
                    l850 25B4                      l827 1A10                      l828 1A36  
                    l684 246C                      l793 1568                      l797 1592  
                    l968 2306                      l978 23EA             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000              _putrs1USART 2528             ___awmod@sign 0007  
                    wreg 000FE8               _TXSTA1bits 000FAC            ___asftmul@f1p 0038  
           __CFG_LVP$OFF 000000             ___ftdiv@cntr 0032             ___ftdiv@sign 0037  
                   l3022 180A                     l3014 17AC                     l3016 17B2  
                   l3008 1794                     l3024 1812                     l3026 1834  
                   l3220 15FA                     l3212 15D2                     l3132 2410  
                   l3230 1626                     l3222 1602                     l3142 1AA4  
                   l3080 1996                     l3232 1630                     l3224 1608  
                   l3160 1B0A                     l3320 1244                     l3312 1178  
                   l3218 15F0                     l3170 1B32                     l3260 1C3E  
                   l3172 1B3E                     l3164 1B1A                     l3324 1290  
                   l2606 2138                     l2710 1C7C                     l3086 19CE  
                   l3238 166E                     l3190 1576                     l3174 1B42  
                   l2720 1CD8                     l2712 1C9A                     l2704 1C64  
                   l3248 16A6                     l3258 1BB6                     l3282 14BE  
                   l2810 20C6                     l2802 20AE                     l3178 1B58  
                   l2716 1CB0                     l2708 1C72                     l3196 15A0  
                   l3268 1368                     l2822 2024                     l2590 2100  
                   l2718 1CCE                     l3286 14E2                     l2742 1F50  
                   l2806 20B8                     l2912 18B2                     l2576 20DC  
                   l2840 22DC                     l2818 1FF4                     l2930 18F8  
                   l2906 187A                     l2594 2104                     l2850 22FC  
                   l2842 22E0                     l2754 1F7A                     l2770 1FAC  
                   l2828 2050                     l2940 1924                     l2756 1F82  
                   l2748 1F60                     l2926 18E8                     l2598 211C  
                   l2838 22D4                     l2774 1FBA                     l2766 1FA2  
                   l2758 1F86                     l2790 207C                     l2936 1914  
                   l2960 23E0                     l2952 23C0                     l2954 23C8  
                   l2794 208E                     l2786 2070                     l2884 2216  
                   l2956 23CC                     l2972 16D6                     l2796 2096  
                   l2886 2226                     l2798 209A                     l2888 223A  
                   l2984 172A                     l2994 1752                     l2978 16F0  
                   STR_1 102B                     STR_2 1035                     u3025 14D0  
                   u2430 1860                     u3057 1300                     u2450 1898  
                   u2610 197C                     u2435 1858                     u3067 1310  
                   u2700 1AC2                     u3077 1320                     u2630 19B4  
                   u2455 1890                     u2615 1974                     u2705 1ABA  
                   u2635 19AC                     u2760 151E                     u2680 1A86  
                   u2665 244A                     u2770 1544                     u2765 1516  
                   u2685 1A7E                     u2775 153C                     u2990 138C  
                   u2996 138E                     _fabs 2438                     _atan 132C  
                   _main 1038             ___ftpack@arg 0001             ___ftpack@exp 0004  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
          __CFG_BORV$190 000000   __size_of_readLSM9_gyro 00B8                     prodh 000FF4  
                   prodl 000FF3                     start 0002            __CFG_IESO$OFF 000000  
           ___ftmul@cntr 0031             ___ftmul@sign 0032          ?_openLSM9_accel 0001  
           ___fttol@exp1 0021             ___fttol@lval 001D                    ?_fabs 0022  
                  ?_atan 0055                    ?_main 0001          __end_of___awdiv 1FC4  
        __end_of___ftadd 16CC          __end_of___awmod 20D0          __end_of___ftdiv 1A68  
        __end_of___ftneg 25C2          __end_of___ftmul 195E          ___awdiv@divisor 0003  
        __end_of___fttol 1B6A          __end_of___lwdiv 2310          __end_of___lwmod 23F4  
        ___awdiv@counter 0006            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000            ___awtoft@sign 0026  
        __end_of_dpowers 100A                    fabs@d 0022  __size_of_readLSM9_accel 00B8  
                  atan@f 0055                    atan@x 0063                    atan@y 0060  
          ?_readLSM9_mag 0008       __CFG_MCLRE$EXTMCLR 000000            ___ftpack@sign 0005  
                  main@a 008E           __CFG_BOREN$OFF 000000         gWriteByte@subadd 0003  
                  tablat 000FF5                    status 000FD8          __end_of_sprintf 1842  
         __CFG_HFOFST$ON 000000           __CFG_FOSC$HSHP 000000           __CFG_PBADEN$ON 000000  
        __initialization 2626             __end_of_fabs 247A             __end_of_atan 1500  
           __end_of_main 132C         __end_of_ReadI2C1 25DE         __end_of_OpenI2C1 25F6  
             _Open1USART 2362                   ??_fabs 0025                   ??_atan 0058  
        xmWriteByte@data 0004                   ??_main 0058            ___fttol@sign1 001C  
          _readLSM9_gyro 1DC4            __activetblptr 000003           ??_readLSM9_mag 000A  
                 _CCPR1L 000FBE                   _CCPR2L 000F67                   _CCPR3L 000F5E  
                 _CCPR4L 000F58         ___awdiv@dividend 0001         __end_of___awtoft 2438  
                 _ANSELC 000F3A         __end_of___ftpack 1D0C           __CFG_WDTEN$OFF 000000  
                 _RCSTA1 000FAB                   _SPBRG1 000FAF           I2CReadByte@add 0003  
                 _TXREG1 000FAD                   _TXSTA1 000FAC           __CFG_XINST$OFF 000000  
          openLSM9@_gadd 0009                   ___ftge 1FC4            openLSM9@gtest 000C  
                 ___wmul 24B6                ??___awdiv 0005                ??___ftadd 003E  
              ??___awmod 0005                ??___ftdiv 002D                ??___ftneg 0013  
              ??___ftmul 0028                ??___fttol 0017                ??___lwdiv 0005  
              ??___lwmod 000D         ___awdiv@quotient 0008          ___awmod@divisor 0003  
         ?_readLSM9_gyro 0008          ___awmod@counter 0006         __end_of_openLSM9 22BA  
                 main@ii 009C    ___ftmul@f3_as_product 002E             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_sprintf 0015       __size_of_gReadByte 0010       __size_of___asftmul 003C  
     __size_of_WriteI2C1 006C               __accesstop 0060  __end_of__initialization 262C  
             ___ftadd@f1 0038               ___ftadd@f2 003B               ___ftge@ff1 0001  
             ___ftge@ff2 0004        readLSM9_gyro@dest 0008             eval_poly@res 0052  
             ___ftdiv@f1 0027               ___ftdiv@f2 002A               ___ftdiv@f3 0033  
             ___ftneg@f1 0010               ___awtoft@c 0022               ___ftmul@f1 0022  
             ___ftmul@f2 0025               ___fttol@f1 0013             ?_xmWriteByte 0003  
         __pcstackCOMRAM 0001            ?_openLSM9_mag 0001              ?_Open1USART 0001  
           ?_putrs1USART 0002           _readLSM9_accel 1E7C                ?_ReadI2C1 0001  
             _gWriteByte 2550       __size_of_eval_poly 00EA          __CFG_PLLCFG$OFF 000000  
          ??_Write1USART 0002                ?_OpenI2C1 0001         ??_openLSM9_accel 0005  
         ??_openLSM9_mag 0005       __CFG_CCP2MX$PORTC1 000000                  ?___ftge 0001  
          ??_I2CReadByte 0005             OpenI2C1@slew 0002                  ?___wmul 000A  
     __CFG_CCP3MX$PORTB5 000000     __end_of_readLSM9_mag 1DC4       readLSM9_accel@dest 0008  
      __end_of_gReadByte 2616          ??_readLSM9_gyro 000A                  _CCP1CON 000FBD  
                _CCP2CON 000F66                  _CCP3CON 000F5D                  _CCP4CON 000F57  
      __end_of___asftmul 24B6                ?___awtoft 0022                ?___ftpack 0001  
      __end_of_WriteI2C1 213C         Open1USART@config 0001               __xmaddress 005C  
 __end_of_readLSM9_accel 1F34                  _SPBRGH1 000FB0                  _SSP1ADD 000FC8  
                _SSP1BUF 000FC9               ??_ReadI2C1 0001   __size_of_openLSM9_gyro 0066  
             ??_OpenI2C1 0003      __size_of_Open1USART 004C                ?_openLSM9 0008  
        __CFG_PWRTEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
    __end_of_Write1USART 2606           openLSM9@_xmadd 0008          __size_of___ftge 0090  
                ___awdiv 1F34                  ___ftadd 1500                  ___awmod 2054  
                ___ftdiv 195E                  ___ftneg 259C          __size_of___wmul 003A  
                ___ftmul 1842                  ___fttol 1A68                  ___lwdiv 22BA  
                ___lwmod 23AE             __psmallconst 1000          __CFG_STVREN$OFF 000000  
                __pcinit 2626               ??___awtoft 0025               ??___ftpack 0006  
      __end_of_eval_poly 1C54                  __ramtop 1000           openLSM9@xmtest 000D  
                __ptext0 1038                  __ptext1 1A68                  __ptext2 23F4  
                __ptext3 2054                  __ptext4 1F34                  __ptext5 2528  
                __ptext6 25F6                  __ptext7 16CC                  __ptext8 23AE  
                __ptext9 22BA      __end_of_I2CReadByte 2262                  _dpowers 1000  
        atan@val_squared 0067         ___awmod@dividend 0001          ?_readLSM9_accel 0008  
                atan@val 006A                  main@HDG 008B                  main@hdg 00AA  
                main@mag 00A4                  _sprintf 16CC     end_of_initialization 262C  
            ?_gWriteByte 0003            ?_Tomcat_Setup 0001               ??_openLSM9 000A  
             _xmReadByte 2616                  postdec2 000FDD                  postinc2 000FDE  
          _openLSM9_gyro 21A2     __size_of_xmWriteByte 0026     __size_of_putrs1USART 0028  
   __end_of_openLSM9_mag 21A2        I2CReadByte@subadd 0004           ??_Tomcat_Setup 0004  
            _Write1USART 25F6              ___ftdiv@exp 0036           gWriteByte@data 0004  
  __size_of_readLSM9_mag 00B8              ___ftmul@exp 002D           ?_openLSM9_gyro 0001  
            _I2CReadByte 2208           __end_of___ftge 2054           __end_of___wmul 24F0  
           ??_Open1USART 0004      __size_of_gWriteByte 0026      start_initialization 2626  
             eval_poly@d 0049               eval_poly@n 004B               eval_poly@x 0046  
           _readLSM9_mag 1D0C        __size_of_ReadI2C1 001C       __end_of_Open1USART 23AE  
      __size_of_OpenI2C1 0018              ?_xmReadByte 0007         readLSM9_mag@dest 0008  
               ??___ftge 0007                 ??___wmul 000E        xmWriteByte@subadd 0003  
              _gReadByte 2606        __size_of___awtoft 0044        __size_of___ftpack 00B8  
              ___asftmul 247A              __pbssCOMRAM 005A                _WriteI2C1 20D0  
          __pcstackBANK0 0060                __gaddress 005B      __end_of__stringdata 1037  
            sprintf@_val 001B              sprintf@flag 0019              sprintf@prec 001A  
              _main$2275 009E                _main$2276 00A1         ___lwdiv@dividend 0001  
        gReadByte@subadd 0007          ??_openLSM9_gyro 0005        __size_of_openLSM9 0058  
               ?___awdiv 0001                 ?___ftadd 0038                 ?___awmod 0001  
               ?___ftdiv 0027                 ?___ftneg 0010                 ?___ftmul 0022  
               ?___fttol 0013                 ?___lwdiv 0001                 ?___lwmod 0009  
       ??_readLSM9_accel 000A          Open1USART@spbrg 0002    __end_of_readLSM9_gyro 1E7C  
       __CFG_PRICLKEN$ON 000000    __size_of_openLSM9_mag 0066               ?_gReadByte 0007  
   __end_of_Tomcat_Setup 2528              __smallconst 1000               ?___asftmul 0038  
              _eval_poly 1B6A               ?_WriteI2C1 0001      __size_of_xmReadByte 0010  
       ___lwdiv@quotient 0006                 ?_sprintf 000F          Write1USART@data 0001  
           ??_gWriteByte 0005           ___wmul@product 000E                 _LATCbits 000F8B  
              atan@recip 0066                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
               _PIR2bits 000FA1         __CFG_WDTPS$32768 000000             _openLSM9_mag 213C  
               _SSP1CON1 000FC6                 _SSP1CON2 000FC5                 _SSP1STAT 000FC7  
       I2CReadByte@_temp 0006  __size_of_openLSM9_accel 0052              __stringdata 102B  
     __end_of_gWriteByte 2576        ___wmul@multiplier 000A                main@accel 0096  
             ?_eval_poly 0046      __end_ofatan@coeff_a 101C      __end_ofatan@coeff_b 102B  
               _ReadI2C1 25C2             ?_Write1USART 0001                 _OpenI2C1 25DE  
               __Hrparam 0000            ??_xmWriteByte 0005                 __Lrparam 0000  
      __CFG_P2BMX$PORTD2 000000             ?_I2CReadByte 0003         __size_of___awdiv 0090  
       __size_of___ftadd 01CC         __size_of___awmod 007C         __size_of___ftdiv 010A  
       __size_of___ftneg 0026         __size_of___ftmul 011C         __size_of___fttol 0102  
       __size_of___lwdiv 0056         __size_of___lwmod 0046                 ___awtoft 23F4  
               ___ftpack 1C54              ??_gReadByte 0008            ??_putrs1USART 0004  
            ??___asftmul 003D              ??_WriteI2C1 0002          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0008                 __ptext10 132C                 __ptext11 1B6A  
               __ptext20 2262                 __ptext12 1500                 __ptext21 213C  
               __ptext13 2438                 __ptext30 20D0                 __ptext22 21A2  
               __ptext14 247A                 __ptext31 24F0                 __ptext23 2550  
               __ptext15 195E                 __ptext32 2362                 __ptext24 2310  
               __ptext16 1C54                 __ptext33 25DE                 __ptext25 2576  
               __ptext17 1D0C                 __ptext34 1842                 __ptext26 2606  
               __ptext18 1DC4                 __ptext35 259C                 __ptext27 2616  
               __ptext19 1E7C                 __ptext36 24B6                 __ptext28 2208  
               __ptext37 1FC4                 __ptext29 25C2             _SSP1CON1bits 000FC6  
           _SSP1CON2bits 000FC5         __size_of_sprintf 0176            __size_of_fabs 0042  
          __size_of_atan 01D4            __size_of_main 02F4                 _openLSM9 2262  
      WriteI2C1@data_out 0001             ??_xmReadByte 0008    __size_of_Tomcat_Setup 0038  
               main@buff 006D             _SSP1STATbits 000FC7                 main@gyro 0090  
    __end_of_xmWriteByte 259C              atan@coeff_a 100A              atan@coeff_b 101C  
      OpenI2C1@sync_mode 0001            _USART1_Status 005A          putrs1USART@data 0002  
            ??_eval_poly 004D      __end_of_putrs1USART 2550       __end_of_xmReadByte 2626  
              sprintf@ap 0017                sprintf@sp 000F         ___lwmod@dividend 0009  
       xmReadByte@subadd 0007               _RCSTA1bits 000FAB             _Tomcat_Setup 24F0  
         _openLSM9_accel 2310                 sprintf@c 0020                 sprintf@f 0011  
        ___lwmod@divisor 000B          ___lwmod@counter 000E        __CFG_T3CMX$PORTC0 000000  
   __size_of_Write1USART 0010  
