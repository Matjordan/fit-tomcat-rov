

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Fri Apr 11 16:50:27 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           	psect	smallconst
    51  001000                     __psmallconst:
    52                           	opt stack 0
    53  001000                     _dpowers:
    54                           	opt stack 0
    55  001000  0001               	dw	1
    56  001002  000A               	dw	10
    57  001004  0064               	dw	100
    58  001006  03E8               	dw	1000
    59  001008  2710               	dw	10000
    60  00100A                     __end_of_dpowers:
    61                           	opt stack 0
    62  00100A                     atan@coeff_a:
    63                           	opt stack 0
    64  00100A  3C                 	db	60
    65  00100B  04                 	db	4
    66  00100C  42                 	db	66
    67  00100D  9F                 	db	159
    68  00100E  6A                 	db	106
    69  00100F  42                 	db	66
    70  001010  90                 	db	144
    71  001011  01                 	db	1
    72  001012  42                 	db	66
    73  001013  4D                 	db	77
    74  001014  BB                 	db	187
    75  001015  40                 	db	64
    76  001016  EC                 	db	236
    77  001017  47                 	db	71
    78  001018  3E                 	db	62
    79  001019  8E                 	db	142
    80  00101A  1F                 	db	31
    81  00101B  BB                 	db	187
    82  00101C                     __end_ofatan@coeff_a:
    83                           	opt stack 0
    84  00101C                     atan@coeff_b:
    85                           	opt stack 0
    86  00101C  3C                 	db	60
    87  00101D  04                 	db	4
    88  00101E  42                 	db	66
    89  00101F  5A                 	db	90
    90  001020  8B                 	db	139
    91  001021  42                 	db	66
    92  001022  04                 	db	4
    93  001023  44                 	db	68
    94  001024  42                 	db	66
    95  001025  9C                 	db	156
    96  001026  4F                 	db	79
    97  001027  41                 	db	65
    98  001028  00                 	db	0
    99  001029  80                 	db	128
   100  00102A  3F                 	db	63
   101  00102B                     __end_ofatan@coeff_b:
   102                           	opt stack 0
   103  0000                     _ANSELC	set	3898
   104  0000                     _CCP1CON	set	4029
   105  0000                     _CCP2CON	set	3942
   106  0000                     _CCP3CON	set	3933
   107  0000                     _CCP4CON	set	3927
   108  0000                     _CCPR1L	set	4030
   109  0000                     _CCPR2L	set	3943
   110  0000                     _CCPR3L	set	3934
   111  0000                     _CCPR4L	set	3928
   112  0000                     _LATCbits	set	3979
   113  0000                     _PIE1bits	set	3997
   114  0000                     _PIR1bits	set	3998
   115  0000                     _PIR2bits	set	4001
   116  0000                     _RCSTA1	set	4011
   117  0000                     _RCSTA1bits	set	4011
   118  0000                     _SPBRG1	set	4015
   119  0000                     _SPBRGH1	set	4016
   120  0000                     _SSP1ADD	set	4040
   121  0000                     _SSP1BUF	set	4041
   122  0000                     _SSP1CON1	set	4038
   123  0000                     _SSP1CON1bits	set	4038
   124  0000                     _SSP1CON2	set	4037
   125  0000                     _SSP1CON2bits	set	4037
   126  0000                     _SSP1STAT	set	4039
   127  0000                     _SSP1STATbits	set	4039
   128  0000                     _TXREG1	set	4013
   129  0000                     _TXSTA1	set	4012
   130  0000                     _TXSTA1bits	set	4012
   131  00102B                     __stringdata:
   132                           	opt stack 0
   133  00102B                     STR_1:
   134  00102B  25                 	db	37
   135  00102C  64                 	db	100	;'d'
   136  00102D  2C                 	db	44
   137  00102E  25                 	db	37
   138  00102F  64                 	db	100	;'d'
   139  001030  2C                 	db	44
   140  001031  25                 	db	37
   141  001032  64                 	db	100	;'d'
   142  001033  0A                 	db	10
   143  001034  00                 	db	0
   144  001035                     __end_of__stringdata:
   145                           	opt stack 0
   146                           
   147                           ; #config settings
   148  001035  00                 	db	0	; dummy byte at the end
   149  0000                     
   150                           	psect	cinit
   151  00257A                     __pcinit:
   152                           	opt stack 0
   153  00257A                     start_initialization:
   154                           	opt stack 0
   155  00257A                     __initialization:
   156                           	opt stack 0
   157                           
   158                           ; Clear objects allocated to BANK0 (3 bytes)
   159  00257A  0100               	movlb	0
   160  00257C  6BBD               	clrf	(__pbssBANK0+2)& (0+255),b
   161  00257E  6BBC               	clrf	(__pbssBANK0+1)& (0+255),b
   162  002580  6BBB               	clrf	__pbssBANK0& (0+255),b
   163  002582                     end_of_initialization:
   164                           	opt stack 0
   165  002582                     __end_of__initialization:
   166                           	opt stack 0
   167  002582  0100               	movlb	0
   168  002584  EF1B  F008         	goto	_main	;jump to C main() function
   169                           
   170                           	psect	bssBANK0
   171  0000BB                     __pbssBANK0:
   172                           	opt stack 0
   173  0000BB                     _USART1_Status:
   174                           	opt stack 0
   175  0000BB                     	ds	1
   176  0000BC                     __gaddress:
   177                           	opt stack 0
   178  0000BC                     	ds	1
   179  0000BD                     __xmaddress:
   180                           	opt stack 0
   181  0000BD                     	ds	1
   182                           
   183                           	psect	cstackBANK0
   184  000060                     __pcstackBANK0:
   185                           	opt stack 0
   186  000060                     ??_eval_poly:
   187                           
   188                           ; 0 bytes @ 0x0
   189  000060                     	ds	5
   190  000065                     eval_poly@res:
   191                           	opt stack 0
   192                           
   193                           ; 3 bytes @ 0x5
   194  000065                     	ds	3
   195  000068                     ?_atan:
   196                           	opt stack 0
   197  000068                     atan@f:
   198                           	opt stack 0
   199                           
   200                           ; 3 bytes @ 0x8
   201  000068                     	ds	3
   202  00006B                     atan@y:
   203                           	opt stack 0
   204                           
   205                           ; 3 bytes @ 0xB
   206  00006B                     	ds	3
   207  00006E                     atan@x:
   208                           	opt stack 0
   209                           
   210                           ; 3 bytes @ 0xE
   211  00006E                     	ds	3
   212  000071                     atan@recip:
   213                           	opt stack 0
   214                           
   215                           ; 1 bytes @ 0x11
   216  000071                     	ds	1
   217  000072                     atan@val_squared:
   218                           	opt stack 0
   219                           
   220                           ; 3 bytes @ 0x12
   221  000072                     	ds	3
   222  000075                     atan@val:
   223                           	opt stack 0
   224                           
   225                           ; 3 bytes @ 0x15
   226  000075                     	ds	3
   227  000078                     main@buff:
   228                           	opt stack 0
   229                           
   230                           ; 30 bytes @ 0x18
   231  000078                     	ds	30
   232  000096                     main@a:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x36
   236  000096                     	ds	2
   237  000098                     main@gyro:
   238                           	opt stack 0
   239                           
   240                           ; 6 bytes @ 0x38
   241  000098                     	ds	6
   242  00009E                     main@hdg:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x3E
   246  00009E                     	ds	2
   247  0000A0                     main@accel:
   248                           	opt stack 0
   249                           
   250                           ; 6 bytes @ 0x40
   251  0000A0                     	ds	6
   252  0000A6                     _main$2313:
   253                           	opt stack 0
   254                           
   255                           ; 3 bytes @ 0x46
   256  0000A6                     	ds	3
   257  0000A9                     _main$2314:
   258                           	opt stack 0
   259                           
   260                           ; 3 bytes @ 0x49
   261  0000A9                     	ds	3
   262  0000AC                     _main$2315:
   263                           	opt stack 0
   264                           
   265                           ; 3 bytes @ 0x4C
   266  0000AC                     	ds	3
   267  0000AF                     _main$2316:
   268                           	opt stack 0
   269                           
   270                           ; 3 bytes @ 0x4F
   271  0000AF                     	ds	3
   272  0000B2                     _main$2317:
   273                           	opt stack 0
   274                           
   275                           ; 3 bytes @ 0x52
   276  0000B2                     	ds	3
   277  0000B5                     main@mag:
   278                           	opt stack 0
   279                           
   280                           ; 6 bytes @ 0x55
   281  0000B5                     	ds	6
   282                           
   283                           	psect	cstackCOMRAM
   284  000001                     __pcstackCOMRAM:
   285                           	opt stack 0
   286  000001                     ?_OpenI2C1:
   287                           	opt stack 0
   288  000001                     ?_Open1USART:
   289                           	opt stack 0
   290  000001                     ?_Write1USART:
   291                           	opt stack 0
   292  000001                     ?___ftge:
   293                           	opt stack 0
   294  000001                     ?_WriteI2C1:
   295                           	opt stack 0
   296  000001                     ?___awdiv:
   297                           	opt stack 0
   298  000001                     ?___lwdiv:
   299                           	opt stack 0
   300  000001                     ?___ftpack:
   301                           	opt stack 0
   302  000001                     Open1USART@config:
   303                           	opt stack 0
   304  000001                     Write1USART@data:
   305                           	opt stack 0
   306  000001                     OpenI2C1@sync_mode:
   307                           	opt stack 0
   308  000001                     WriteI2C1@data_out:
   309                           	opt stack 0
   310  000001                     ___awdiv@dividend:
   311                           	opt stack 0
   312  000001                     ___lwdiv@dividend:
   313                           	opt stack 0
   314  000001                     ___ftpack@arg:
   315                           	opt stack 0
   316  000001                     ___ftge@ff1:
   317                           	opt stack 0
   318                           
   319                           ; 3 bytes @ 0x0
   320  000001                     	ds	1
   321  000002                     ?_putrs1USART:
   322                           	opt stack 0
   323  000002                     ??_WriteI2C1:
   324  000002                     OpenI2C1@slew:
   325                           	opt stack 0
   326  000002                     Open1USART@spbrg:
   327                           	opt stack 0
   328  000002                     putrs1USART@data:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x1
   332  000002                     	ds	1
   333  000003                     ?_xmWriteByte:
   334                           	opt stack 0
   335  000003                     ?_gWriteByte:
   336                           	opt stack 0
   337  000003                     ?_I2CReadByte:
   338                           	opt stack 0
   339  000003                     gWriteByte@subadd:
   340                           	opt stack 0
   341  000003                     xmWriteByte@subadd:
   342                           	opt stack 0
   343  000003                     I2CReadByte@add:
   344                           	opt stack 0
   345  000003                     ___awdiv@divisor:
   346                           	opt stack 0
   347  000003                     ___lwdiv@divisor:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x2
   351  000003                     	ds	1
   352  000004                     ??_Tomcat_Setup:
   353  000004                     gWriteByte@data:
   354                           	opt stack 0
   355  000004                     xmWriteByte@data:
   356                           	opt stack 0
   357  000004                     I2CReadByte@subadd:
   358                           	opt stack 0
   359  000004                     ___ftpack@exp:
   360                           	opt stack 0
   361  000004                     ___ftge@ff2:
   362                           	opt stack 0
   363                           
   364                           ; 3 bytes @ 0x3
   365  000004                     	ds	1
   366  000005                     ??_openLSM9_accel:
   367  000005                     ??_openLSM9_gyro:
   368  000005                     ??_openLSM9_mag:
   369  000005                     ??_I2CReadByte:
   370  000005                     ??___awdiv:
   371  000005                     ??___lwdiv:
   372  000005                     ___ftpack@sign:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x4
   376  000005                     	ds	1
   377  000006                     ??___ftpack:
   378  000006                     I2CReadByte@_temp:
   379                           	opt stack 0
   380  000006                     ___awdiv@counter:
   381                           	opt stack 0
   382  000006                     ___lwdiv@quotient:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x5
   386  000006                     	ds	1
   387  000007                     ??___ftge:
   388  000007                     ?_xmReadByte:
   389                           	opt stack 0
   390  000007                     ?_gReadByte:
   391                           	opt stack 0
   392  000007                     gReadByte@subadd:
   393                           	opt stack 0
   394  000007                     xmReadByte@subadd:
   395                           	opt stack 0
   396  000007                     ___awdiv@sign:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x6
   400  000007                     	ds	1
   401  000008                     ?_readLSM9_accel:
   402                           	opt stack 0
   403  000008                     ?_readLSM9_gyro:
   404                           	opt stack 0
   405  000008                     ?_readLSM9_mag:
   406                           	opt stack 0
   407  000008                     ?_openLSM9:
   408                           	opt stack 0
   409  000008                     openLSM9@_xmadd:
   410                           	opt stack 0
   411  000008                     ___lwdiv@counter:
   412                           	opt stack 0
   413  000008                     readLSM9_accel@dest:
   414                           	opt stack 0
   415  000008                     readLSM9_mag@dest:
   416                           	opt stack 0
   417  000008                     readLSM9_gyro@dest:
   418                           	opt stack 0
   419  000008                     ___awdiv@quotient:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x7
   423  000008                     	ds	1
   424  000009                     ?___lwmod:
   425                           	opt stack 0
   426  000009                     openLSM9@_gadd:
   427                           	opt stack 0
   428  000009                     ___lwmod@dividend:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0x8
   432  000009                     	ds	1
   433  00000A                     ??_openLSM9:
   434  00000A                     ??_readLSM9_accel:
   435  00000A                     ??_readLSM9_gyro:
   436  00000A                     ??_readLSM9_mag:
   437  00000A                     ?___wmul:
   438                           	opt stack 0
   439  00000A                     ___wmul@multiplier:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x9
   443  00000A                     	ds	1
   444  00000B                     ___lwmod@divisor:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0xA
   448  00000B                     	ds	1
   449  00000C                     openLSM9@gtest:
   450                           	opt stack 0
   451  00000C                     ___wmul@multiplicand:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0xB
   455  00000C                     	ds	1
   456  00000D                     ??___lwmod:
   457  00000D                     openLSM9@xmtest:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0xC
   461  00000D                     	ds	1
   462  00000E                     ___lwmod@counter:
   463                           	opt stack 0
   464  00000E                     ___wmul@product:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0xD
   468  00000E                     	ds	1
   469  00000F                     ?_sprintf:
   470                           	opt stack 0
   471  00000F                     sprintf@sp:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0xE
   475  00000F                     	ds	1
   476  000010                     ?___ftneg:
   477                           	opt stack 0
   478  000010                     ___ftneg@f1:
   479                           	opt stack 0
   480                           
   481                           ; 3 bytes @ 0xF
   482  000010                     	ds	1
   483  000011                     sprintf@f:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x10
   487  000011                     	ds	2
   488  000013                     ?___fttol:
   489                           	opt stack 0
   490  000013                     ___fttol@f1:
   491                           	opt stack 0
   492                           
   493                           ; 3 bytes @ 0x12
   494  000013                     	ds	4
   495  000017                     ??___fttol:
   496                           
   497                           ; 0 bytes @ 0x16
   498  000017                     	ds	2
   499  000019                     ??_sprintf:
   500                           
   501                           ; 0 bytes @ 0x18
   502  000019                     	ds	2
   503  00001B                     sprintf@ap:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x1A
   507  00001B                     	ds	1
   508  00001C                     ___fttol@sign1:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x1B
   512  00001C                     	ds	1
   513  00001D                     sprintf@flag:
   514                           	opt stack 0
   515  00001D                     ___fttol@lval:
   516                           	opt stack 0
   517                           
   518                           ; 4 bytes @ 0x1C
   519  00001D                     	ds	1
   520  00001E                     sprintf@prec:
   521                           	opt stack 0
   522                           
   523                           ; 1 bytes @ 0x1D
   524  00001E                     	ds	1
   525  00001F                     sprintf@_val:
   526                           	opt stack 0
   527                           
   528                           ; 5 bytes @ 0x1E
   529  00001F                     	ds	2
   530  000021                     ___fttol@exp1:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x20
   534  000021                     	ds	1
   535  000022                     ?_fabs:
   536                           	opt stack 0
   537  000022                     ?___awtoft:
   538                           	opt stack 0
   539  000022                     ___awtoft@c:
   540                           	opt stack 0
   541  000022                     fabs@d:
   542                           	opt stack 0
   543                           
   544                           ; 3 bytes @ 0x21
   545  000022                     	ds	2
   546  000024                     sprintf@c:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x23
   550  000024                     	ds	1
   551  000025                     ??___awtoft:
   552                           
   553                           ; 0 bytes @ 0x24
   554  000025                     	ds	1
   555  000026                     ___awtoft@sign:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x25
   559  000026                     	ds	1
   560  000027                     ?___ftdiv:
   561                           	opt stack 0
   562  000027                     ___ftdiv@f1:
   563                           	opt stack 0
   564                           
   565                           ; 3 bytes @ 0x26
   566  000027                     	ds	3
   567  00002A                     ___ftdiv@f2:
   568                           	opt stack 0
   569                           
   570                           ; 3 bytes @ 0x29
   571  00002A                     	ds	3
   572  00002D                     ??___ftdiv:
   573                           
   574                           ; 0 bytes @ 0x2C
   575  00002D                     	ds	5
   576  000032                     ___ftdiv@cntr:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x31
   580  000032                     	ds	1
   581  000033                     ___ftdiv@f3:
   582                           	opt stack 0
   583                           
   584                           ; 3 bytes @ 0x32
   585  000033                     	ds	3
   586  000036                     ___ftdiv@exp:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x35
   590  000036                     	ds	1
   591  000037                     ___ftdiv@sign:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0x36
   595  000037                     	ds	1
   596  000038                     ?___ftmul:
   597                           	opt stack 0
   598  000038                     ___ftmul@f1:
   599                           	opt stack 0
   600                           
   601                           ; 3 bytes @ 0x37
   602  000038                     	ds	3
   603  00003B                     ___ftmul@f2:
   604                           	opt stack 0
   605                           
   606                           ; 3 bytes @ 0x3A
   607  00003B                     	ds	3
   608  00003E                     ??___ftmul:
   609                           
   610                           ; 0 bytes @ 0x3D
   611  00003E                     	ds	5
   612  000043                     ___ftmul@exp:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x42
   616  000043                     	ds	1
   617  000044                     ___ftmul@f3_as_product:
   618                           	opt stack 0
   619                           
   620                           ; 3 bytes @ 0x43
   621  000044                     	ds	3
   622  000047                     ___ftmul@cntr:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x46
   626  000047                     	ds	1
   627  000048                     ___ftmul@sign:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x47
   631  000048                     	ds	1
   632  000049                     ?___ftadd:
   633                           	opt stack 0
   634  000049                     ?___asftmul:
   635                           	opt stack 0
   636  000049                     ___asftmul@f1p:
   637                           	opt stack 0
   638  000049                     ___ftadd@f1:
   639                           	opt stack 0
   640                           
   641                           ; 3 bytes @ 0x48
   642  000049                     	ds	2
   643  00004B                     ___asftmul@f2:
   644                           	opt stack 0
   645                           
   646                           ; 3 bytes @ 0x4A
   647  00004B                     	ds	1
   648  00004C                     ___ftadd@f2:
   649                           	opt stack 0
   650                           
   651                           ; 3 bytes @ 0x4B
   652  00004C                     	ds	2
   653  00004E                     
   654                           ; 0 bytes @ 0x4D
   655  00004E                     	ds	1
   656  00004F                     ??___ftadd:
   657                           
   658                           ; 0 bytes @ 0x4E
   659  00004F                     	ds	5
   660  000054                     ___ftadd@sign:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x53
   664  000054                     	ds	1
   665  000055                     ___ftadd@exp2:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0x54
   669  000055                     	ds	1
   670  000056                     ___ftadd@exp1:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0x55
   674  000056                     	ds	1
   675  000057                     ?_eval_poly:
   676                           	opt stack 0
   677  000057                     eval_poly@x:
   678                           	opt stack 0
   679                           
   680                           ; 3 bytes @ 0x56
   681  000057                     	ds	3
   682  00005A                     eval_poly@d:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x59
   686  00005A                     	ds	2
   687  00005C                     eval_poly@n:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x5B
   691  00005C                     	ds	2
   692  00005E                     ??_main:
   693                           
   694                           ; 0 bytes @ 0x5D
   695  00005E                     	ds	2
   696                           
   697 ;;
   698 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   699 ;;
   700 ;; *************** function _main *****************
   701 ;; Defined at:
   702 ;;		line 7 in file "IMU_Main.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;		None
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  buff           30   24[BANK0 ] unsigned char [30]
   707 ;;  mag             6   85[BANK0 ] int [3]
   708 ;;  accel           6   64[BANK0 ] int [3]
   709 ;;  gyro            6   56[BANK0 ] int [3]
   710 ;;  HDG             4    0        unsigned char [4]
   711 ;;  hdg             2   62[BANK0 ] int 
   712 ;;  a               2   54[BANK0 ] int 
   713 ;; Return value:  Size  Location     Type
   714 ;;		None               void
   715 ;; Registers used:
   716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Locals:         0      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;      Totals:         2      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;Total ram usage:       69 bytes
   727 ;; Hardware stack levels required when called:    4
   728 ;; This function calls:
   729 ;;		_Tomcat_Setup
   730 ;;		_openLSM9
   731 ;;		_readLSM9_accel
   732 ;;		_readLSM9_gyro
   733 ;;		_readLSM9_mag
   734 ;;		_sprintf
   735 ;;		_putrs1USART
   736 ;;		_atan
   737 ;;		___ftadd
   738 ;;		___ftdiv
   739 ;;		___ftmul
   740 ;;		___awdiv
   741 ;;		___awtoft
   742 ;;		___ftneg
   743 ;;		___fttol
   744 ;;		___wmul
   745 ;; This function is called by:
   746 ;;		Startup code after reset
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text0
   751  001036                     __ptext0:
   752                           	opt stack 0
   753  001036                     _main:
   754                           	opt stack 27
   755                           
   756                           ;IMU_Main.c: 8: int a=0;
   757                           
   758                           ;incstack = 0
   759                           ;incstack = 0
   760  001036  0E00               	movlw	0
   761  001038  0100               	movlb	0	; () banked
   762  00103A  0100               	movlb	0	; () banked
   763  00103C  6F97               	movwf	(main@a+1)& (0+255),b
   764  00103E  0E00               	movlw	0
   765  001040  0100               	movlb	0	; () banked
   766  001042  6F96               	movwf	main@a& (0+255),b
   767                           
   768                           ;IMU_Main.c: 9: int accel[3];
   769                           ;IMU_Main.c: 10: int gyro[3];
   770                           ;IMU_Main.c: 11: int mag[3];
   771                           ;IMU_Main.c: 12: char buff[30];
   772                           ;IMU_Main.c: 13: int hdg = 0;
   773  001044  0E00               	movlw	0
   774  001046  0100               	movlb	0	; () banked
   775  001048  0100               	movlb	0	; () banked
   776  00104A  6F9F               	movwf	(main@hdg+1)& (0+255),b
   777  00104C  0E00               	movlw	0
   778  00104E  0100               	movlb	0	; () banked
   779  001050  6F9E               	movwf	main@hdg& (0+255),b
   780                           
   781                           ; BSR set to: 0
   782                           ;IMU_Main.c: 14: char HDG[4];
   783                           ;IMU_Main.c: 15: Tomcat_Setup();
   784  001052  EC1C  F012         	call	_Tomcat_Setup	;wreg free
   785                           
   786                           ;IMU_Main.c: 17: a=openLSM9(0x1D,0x6B);
   787  001056  6E5E               	movwf	??_main& (0+255),c
   788  001058  0E1D               	movlw	29
   789  00105A  6E08               	movwf	?_openLSM9,c
   790  00105C  505E               	movf	??_main& (0+255),w,c
   791  00105E  6E5F               	movwf	(??_main+1)& (0+255),c
   792  001060  0E6B               	movlw	107
   793  001062  6E09               	movwf	?_openLSM9+1,c
   794  001064  505F               	movf	(??_main+1)& (0+255),w,c
   795  001066  ECA4  F010         	call	_openLSM9	;wreg free
   796  00106A  C008  F096         	movff	?_openLSM9,main@a
   797  00106E  C009  F097         	movff	?_openLSM9+1,main@a+1
   798  001072  F000               	nop		;# 
   799                           
   800                           ;IMU_Main.c: 19: readLSM9_accel(accel);
   801  001074  0100               	movlb	0	; () banked
   802  001076  0E00               	movlw	high main@accel
   803  001078  6E09               	movwf	?_readLSM9_accel+1,c
   804  00107A  0100               	movlb	0	; () banked
   805  00107C  0EA0               	movlw	low main@accel
   806  00107E  6E08               	movwf	?_readLSM9_accel,c
   807  001080  EC1C  F00F         	call	_readLSM9_accel	;wreg free
   808  001084  F000               	nop		;# 
   809  001086                     l25:
   810  001086  F000               	nop		;# 
   811                           
   812                           ;IMU_Main.c: 24: readLSM9_accel(accel);
   813  001088  0100               	movlb	0	; () banked
   814  00108A  0E00               	movlw	high main@accel
   815  00108C  6E09               	movwf	?_readLSM9_accel+1,c
   816  00108E  0100               	movlb	0	; () banked
   817  001090  0EA0               	movlw	low main@accel
   818  001092  6E08               	movwf	?_readLSM9_accel,c
   819  001094  EC1C  F00F         	call	_readLSM9_accel	;wreg free
   820                           
   821                           ;IMU_Main.c: 25: readLSM9_gyro(gyro);
   822  001098  0100               	movlb	0	; () banked
   823  00109A  0E00               	movlw	high main@gyro
   824  00109C  6E09               	movwf	?_readLSM9_gyro+1,c
   825  00109E  0100               	movlb	0	; () banked
   826  0010A0  0E98               	movlw	low main@gyro
   827  0010A2  6E08               	movwf	?_readLSM9_gyro,c
   828  0010A4  ECC0  F00E         	call	_readLSM9_gyro	;wreg free
   829                           
   830                           ;IMU_Main.c: 26: readLSM9_mag(mag);
   831  0010A8  0100               	movlb	0	; () banked
   832  0010AA  0E00               	movlw	high main@mag
   833  0010AC  6E09               	movwf	?_readLSM9_mag+1,c
   834  0010AE  0100               	movlb	0	; () banked
   835  0010B0  0EB5               	movlw	low main@mag
   836  0010B2  6E08               	movwf	?_readLSM9_mag,c
   837  0010B4  EC64  F00E         	call	_readLSM9_mag	;wreg free
   838                           
   839                           ;IMU_Main.c: 31: sprintf(buff,"%d,%d,%d\n",mag[0],mag[1],mag[2]);
   840  0010B8  0100               	movlb	0	; () banked
   841  0010BA  0E00               	movlw	high main@buff
   842  0010BC  6E10               	movwf	?_sprintf+1,c
   843  0010BE  0100               	movlb	0	; () banked
   844  0010C0  0E78               	movlw	low main@buff
   845  0010C2  6E0F               	movwf	?_sprintf,c
   846  0010C4  0E10               	movlw	high STR_1
   847  0010C6  6E12               	movwf	?_sprintf+3,c
   848  0010C8  0E2B               	movlw	low STR_1
   849  0010CA  6E11               	movwf	?_sprintf+2,c
   850  0010CC  C0B5  F013         	movff	main@mag,?_sprintf+4
   851  0010D0  C0B6  F014         	movff	main@mag+1,?_sprintf+5
   852  0010D4  C0B7  F015         	movff	main@mag+2,?_sprintf+6
   853  0010D8  C0B8  F016         	movff	main@mag+3,?_sprintf+7
   854  0010DC  C0B9  F017         	movff	main@mag+4,?_sprintf+8
   855  0010E0  C0BA  F018         	movff	main@mag+5,?_sprintf+9
   856  0010E4  EC40  F00B         	call	_sprintf	;wreg free
   857                           
   858                           ;IMU_Main.c: 32: putrs1USART(buff);
   859  0010E8  0100               	movlb	0	; () banked
   860  0010EA  0E00               	movlw	high main@buff
   861  0010EC  6E03               	movwf	?_putrs1USART+1,c
   862  0010EE  0100               	movlb	0	; () banked
   863  0010F0  0E78               	movlw	low main@buff
   864  0010F2  6E02               	movwf	?_putrs1USART,c
   865  0010F4  EC38  F012         	call	_putrs1USART	;wreg free
   866                           
   867                           ;IMU_Main.c: 36: if (mag[0] < 0) {
   868  0010F8  0100               	movlb	0	; () banked
   869  0010FA  0100               	movlb	0	; () banked
   870  0010FC  AFB6               	btfss	(main@mag+1)& (0+255),7,b
   871  0010FE  D06F               	goto	l3271
   872                           
   873                           ; BSR set to: 0
   874                           ;IMU_Main.c: 37: hdg = 270.0 - (float)atan(((float)mag[1] / (float)mag[0])*180.0 / 3.141
      +                          59265358979323846);
   875  001100  0E00               	movlw	0
   876  001102  6E3B               	movwf	?___ftmul+3,c
   877  001104  0E34               	movlw	52
   878  001106  6E3C               	movwf	?___ftmul+4,c
   879  001108  0E43               	movlw	67
   880  00110A  6E3D               	movwf	?___ftmul+5,c
   881  00110C  C0B5  F022         	movff	main@mag,?___awtoft
   882  001110  C0B6  F023         	movff	main@mag+1,?___awtoft+1
   883  001114  EC9E  F011         	call	___awtoft	;wreg free
   884  001118  C024  F02C         	movff	?___awtoft+2,?___ftdiv+5
   885  00111C  C023  F02B         	movff	?___awtoft+1,?___ftdiv+4
   886  001120  C022  F02A         	movff	?___awtoft,?___ftdiv+3
   887  001124  C0B7  F022         	movff	main@mag+2,?___awtoft
   888  001128  C0B8  F023         	movff	main@mag+3,?___awtoft+1
   889  00112C  EC9E  F011         	call	___awtoft	;wreg free
   890  001130  C024  F029         	movff	?___awtoft+2,?___ftdiv+2
   891  001134  C023  F028         	movff	?___awtoft+1,?___ftdiv+1
   892  001138  C022  F027         	movff	?___awtoft,?___ftdiv
   893  00113C  EC89  F00C         	call	___ftdiv	;wreg free
   894  001140  C029  F03A         	movff	?___ftdiv+2,?___ftmul+2
   895  001144  C028  F039         	movff	?___ftdiv+1,?___ftmul+1
   896  001148  C027  F038         	movff	?___ftdiv,?___ftmul
   897  00114C  ECFB  F00B         	call	___ftmul	;wreg free
   898  001150  C03A  F0A8         	movff	?___ftmul+2,_main$2313+2
   899  001154  C039  F0A7         	movff	?___ftmul+1,_main$2313+1
   900  001158  C038  F0A6         	movff	?___ftmul,_main$2313
   901                           
   902                           ;IMU_Main.c: 37: hdg = 270.0 - (float)atan(((float)mag[1] / (float)mag[0])*180.0 / 3.141
      +                          59265358979323846);
   903  00115C  0E10               	movlw	16
   904  00115E  6E2A               	movwf	?___ftdiv+3,c
   905  001160  0E49               	movlw	73
   906  001162  6E2B               	movwf	?___ftdiv+4,c
   907  001164  0E40               	movlw	64
   908  001166  6E2C               	movwf	?___ftdiv+5,c
   909  001168  C0A6  F027         	movff	_main$2313,?___ftdiv
   910  00116C  C0A7  F028         	movff	_main$2313+1,?___ftdiv+1
   911  001170  C0A8  F029         	movff	_main$2313+2,?___ftdiv+2
   912  001174  EC89  F00C         	call	___ftdiv	;wreg free
   913  001178  C029  F0AB         	movff	?___ftdiv+2,_main$2314+2
   914  00117C  C028  F0AA         	movff	?___ftdiv+1,_main$2314+1
   915  001180  C027  F0A9         	movff	?___ftdiv,_main$2314
   916                           
   917                           ;IMU_Main.c: 37: hdg = 270.0 - (float)atan(((float)mag[1] / (float)mag[0])*180.0 / 3.141
      +                          59265358979323846);
   918  001184  C0A9  F068         	movff	_main$2314,?_atan
   919  001188  C0AA  F069         	movff	_main$2314+1,?_atan+1
   920  00118C  C0AB  F06A         	movff	_main$2314+2,?_atan+2
   921  001190  EC66  F009         	call	_atan	;wreg free
   922  001194  C06A  F0AE         	movff	?_atan+2,_main$2315+2
   923  001198  C069  F0AD         	movff	?_atan+1,_main$2315+1
   924  00119C  C068  F0AC         	movff	?_atan,_main$2315
   925                           
   926                           ;IMU_Main.c: 37: hdg = 270.0 - (float)atan(((float)mag[1] / (float)mag[0])*180.0 / 3.141
      +                          59265358979323846);
   927  0011A0  0E00               	movlw	0
   928  0011A2  6E4C               	movwf	?___ftadd+3,c
   929  0011A4  0E87               	movlw	135
   930  0011A6  6E4D               	movwf	?___ftadd+4,c
   931  0011A8  0E43               	movlw	67
   932  0011AA  6E4E               	movwf	?___ftadd+5,c
   933  0011AC  C0AC  F010         	movff	_main$2315,?___ftneg
   934  0011B0  C0AD  F011         	movff	_main$2315+1,?___ftneg+1
   935  0011B4  C0AE  F012         	movff	_main$2315+2,?___ftneg+2
   936  0011B8  EC72  F012         	call	___ftneg	;wreg free
   937  0011BC  C012  F04B         	movff	?___ftneg+2,?___ftadd+2
   938  0011C0  C011  F04A         	movff	?___ftneg+1,?___ftadd+1
   939  0011C4  C010  F049         	movff	?___ftneg,?___ftadd
   940  0011C8  EC5A  F00A         	call	___ftadd	;wreg free
   941  0011CC  C04B  F015         	movff	?___ftadd+2,?___fttol+2
   942  0011D0  C04A  F014         	movff	?___ftadd+1,?___fttol+1
   943  0011D4  C049  F013         	movff	?___ftadd,?___fttol
   944  0011D8  EC0E  F00D         	call	___fttol	;wreg free
   945  0011DC  D05A               	goto	L1
   946  0011DE                     l3271:
   947                           
   948                           ;IMU_Main.c: 39: hdg = 90 - atan((mag[1] / mag[0])*180 / 3.14159265358979323846);
   949  0011DE  0E10               	movlw	16
   950  0011E0  6E2A               	movwf	?___ftdiv+3,c
   951  0011E2  0E49               	movlw	73
   952  0011E4  6E2B               	movwf	?___ftdiv+4,c
   953  0011E6  0E40               	movlw	64
   954  0011E8  6E2C               	movwf	?___ftdiv+5,c
   955  0011EA  0E00               	movlw	0
   956  0011EC  6E0D               	movwf	?___wmul+3,c
   957  0011EE  0EB4               	movlw	180
   958  0011F0  6E0C               	movwf	?___wmul+2,c
   959  0011F2  C0B5  F003         	movff	main@mag,?___awdiv+2
   960  0011F6  C0B6  F004         	movff	main@mag+1,?___awdiv+3
   961  0011FA  C0B7  F001         	movff	main@mag+2,?___awdiv
   962  0011FE  C0B8  F002         	movff	main@mag+3,?___awdiv+1
   963  001202  EC78  F00F         	call	___awdiv	;wreg free
   964  001206  C001  F00A         	movff	?___awdiv,?___wmul
   965  00120A  C002  F00B         	movff	?___awdiv+1,?___wmul+1
   966  00120E  ECFF  F011         	call	___wmul	;wreg free
   967  001212  C00A  F022         	movff	?___wmul,?___awtoft
   968  001216  C00B  F023         	movff	?___wmul+1,?___awtoft+1
   969  00121A  EC9E  F011         	call	___awtoft	;wreg free
   970  00121E  C024  F029         	movff	?___awtoft+2,?___ftdiv+2
   971  001222  C023  F028         	movff	?___awtoft+1,?___ftdiv+1
   972  001226  C022  F027         	movff	?___awtoft,?___ftdiv
   973  00122A  EC89  F00C         	call	___ftdiv	;wreg free
   974  00122E  C029  F0B1         	movff	?___ftdiv+2,_main$2316+2
   975  001232  C028  F0B0         	movff	?___ftdiv+1,_main$2316+1
   976  001236  C027  F0AF         	movff	?___ftdiv,_main$2316
   977                           
   978                           ;IMU_Main.c: 39: hdg = 90 - atan((mag[1] / mag[0])*180 / 3.14159265358979323846);
   979  00123A  C0AF  F068         	movff	_main$2316,?_atan
   980  00123E  C0B0  F069         	movff	_main$2316+1,?_atan+1
   981  001242  C0B1  F06A         	movff	_main$2316+2,?_atan+2
   982  001246  EC66  F009         	call	_atan	;wreg free
   983  00124A  C06A  F0B4         	movff	?_atan+2,_main$2317+2
   984  00124E  C069  F0B3         	movff	?_atan+1,_main$2317+1
   985  001252  C068  F0B2         	movff	?_atan,_main$2317
   986                           
   987                           ;IMU_Main.c: 39: hdg = 90 - atan((mag[1] / mag[0])*180 / 3.14159265358979323846);
   988  001256  0E00               	movlw	0
   989  001258  6E4C               	movwf	?___ftadd+3,c
   990  00125A  0EB4               	movlw	180
   991  00125C  6E4D               	movwf	?___ftadd+4,c
   992  00125E  0E42               	movlw	66
   993  001260  6E4E               	movwf	?___ftadd+5,c
   994  001262  C0B2  F010         	movff	_main$2317,?___ftneg
   995  001266  C0B3  F011         	movff	_main$2317+1,?___ftneg+1
   996  00126A  C0B4  F012         	movff	_main$2317+2,?___ftneg+2
   997  00126E  EC72  F012         	call	___ftneg	;wreg free
   998  001272  C012  F04B         	movff	?___ftneg+2,?___ftadd+2
   999  001276  C011  F04A         	movff	?___ftneg+1,?___ftadd+1
  1000  00127A  C010  F049         	movff	?___ftneg,?___ftadd
  1001  00127E  EC5A  F00A         	call	___ftadd	;wreg free
  1002  001282  C04B  F015         	movff	?___ftadd+2,?___fttol+2
  1003  001286  C04A  F014         	movff	?___ftadd+1,?___fttol+1
  1004  00128A  C049  F013         	movff	?___ftadd,?___fttol
  1005  00128E  EC0E  F00D         	call	___fttol	;wreg free
  1006  001292                     L1:
  1007  001292  C013  F09E         	movff	?___fttol,main@hdg
  1008  001296  C014  F09F         	movff	?___fttol+1,main@hdg+1
  1009                           
  1010                           ;IMU_Main.c: 40: }
  1011                           ;IMU_Main.c: 59: _delay(100000);
  1012  00129A  0E82               	movlw	130
  1013  00129C  6E5E               	movwf	??_main& (0+255),c
  1014  00129E  0EDD               	movlw	221
  1015  0012A0                     u2987:
  1016  0012A0  2EE8               	decfsz	wreg,f,c
  1017  0012A2  D7FE               	goto	u2987
  1018  0012A4  2E5E               	decfsz	??_main& (0+255),f,c
  1019  0012A6  D7FC               	goto	u2987
  1020  0012A8  D000               	nop2	
  1021                           
  1022                           ;IMU_Main.c: 60: _delay(100000);
  1023  0012AA  0E82               	movlw	130
  1024  0012AC  6E5E               	movwf	??_main& (0+255),c
  1025  0012AE  0EDD               	movlw	221
  1026  0012B0                     u2997:
  1027  0012B0  2EE8               	decfsz	wreg,f,c
  1028  0012B2  D7FE               	goto	u2997
  1029  0012B4  2E5E               	decfsz	??_main& (0+255),f,c
  1030  0012B6  D7FC               	goto	u2997
  1031  0012B8  D000               	nop2	
  1032                           
  1033                           ;IMU_Main.c: 61: _delay(100000);
  1034  0012BA  0E82               	movlw	130
  1035  0012BC  6E5E               	movwf	??_main& (0+255),c
  1036  0012BE  0EDD               	movlw	221
  1037  0012C0                     u3007:
  1038  0012C0  2EE8               	decfsz	wreg,f,c
  1039  0012C2  D7FE               	goto	u3007
  1040  0012C4  2E5E               	decfsz	??_main& (0+255),f,c
  1041  0012C6  D7FC               	goto	u3007
  1042  0012C8  D000               	nop2	
  1043  0012CA  D6DD               	goto	l25
  1044  0012CC                     __end_of_main:
  1045                           	opt stack 0
  1046                           wreg	equ	0xFE8
  1047                           
  1048 ;; *************** function ___fttol *****************
  1049 ;; Defined at:
  1050 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fttol.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;  f1              3   18[COMRAM] float 
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;  lval            4   28[COMRAM] unsigned long 
  1055 ;;  exp1            1   32[COMRAM] unsigned char 
  1056 ;;  sign1           1   27[COMRAM] unsigned char 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  4   18[COMRAM] long 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1066 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1067 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;Total ram usage:       15 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_main
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text1
  1080  001A1C                     __ptext1:
  1081                           	opt stack 0
  1082  001A1C                     ___fttol:
  1083                           	opt stack 30
  1084                           
  1085                           ;incstack = 0
  1086                           ;incstack = 0
  1087  001A1C  0E0F               	movlw	15
  1088  001A1E  6E17               	movwf	??___fttol& (0+255),c
  1089  001A20  C013  F018         	movff	___fttol@f1,??___fttol+1
  1090  001A24  C014  F019         	movff	___fttol@f1+1,??___fttol+2
  1091  001A28  C015  F01A         	movff	___fttol@f1+2,??___fttol+3
  1092  001A2C  2817               	incf	??___fttol,w,c
  1093  001A2E  6E1B               	movwf	(??___fttol+4)& (0+255),c
  1094  001A30  D004               	goto	u2620
  1095  001A32                     u2625:
  1096  001A32  90D8               	bcf	status,0,c
  1097  001A34  321A               	rrcf	??___fttol+3,f,c
  1098  001A36  3219               	rrcf	??___fttol+2,f,c
  1099  001A38  3218               	rrcf	??___fttol+1,f,c
  1100  001A3A                     u2620:
  1101  001A3A  2E1B               	decfsz	(??___fttol+4)& (0+255),f,c
  1102  001A3C  D7FA               	goto	u2625
  1103  001A3E  5018               	movf	??___fttol+1,w,c
  1104  001A40  6E21               	movwf	___fttol@exp1,c
  1105  001A42  6621               	tstfsz	___fttol@exp1& (0+255),c
  1106  001A44  D009               	goto	l3097
  1107  001A46  0E00               	movlw	0
  1108  001A48  6E13               	movwf	?___fttol,c
  1109  001A4A  0E00               	movlw	0
  1110  001A4C  6E14               	movwf	?___fttol+1,c
  1111  001A4E  0E00               	movlw	0
  1112  001A50  6E15               	movwf	?___fttol+2,c
  1113  001A52  0E00               	movlw	0
  1114  001A54  6E16               	movwf	?___fttol+3,c
  1115  001A56  0012               	return	
  1116  001A58                     l3097:
  1117  001A58  0E17               	movlw	23
  1118  001A5A  6E17               	movwf	??___fttol& (0+255),c
  1119  001A5C  C013  F018         	movff	___fttol@f1,??___fttol+1
  1120  001A60  C014  F019         	movff	___fttol@f1+1,??___fttol+2
  1121  001A64  C015  F01A         	movff	___fttol@f1+2,??___fttol+3
  1122  001A68  2817               	incf	??___fttol,w,c
  1123  001A6A  6E1B               	movwf	(??___fttol+4)& (0+255),c
  1124  001A6C  D004               	goto	u2640
  1125  001A6E                     u2645:
  1126  001A6E  90D8               	bcf	status,0,c
  1127  001A70  321A               	rrcf	??___fttol+3,f,c
  1128  001A72  3219               	rrcf	??___fttol+2,f,c
  1129  001A74  3218               	rrcf	??___fttol+1,f,c
  1130  001A76                     u2640:
  1131  001A76  2E1B               	decfsz	(??___fttol+4)& (0+255),f,c
  1132  001A78  D7FA               	goto	u2645
  1133  001A7A  5018               	movf	??___fttol+1,w,c
  1134  001A7C  6E1C               	movwf	___fttol@sign1,c
  1135  001A7E  8E14               	bsf	___fttol@f1+1,7,c
  1136  001A80  0EFF               	movlw	255
  1137  001A82  1613               	andwf	___fttol@f1,f,c
  1138  001A84  0EFF               	movlw	255
  1139  001A86  1614               	andwf	___fttol@f1+1,f,c
  1140  001A88  0E00               	movlw	0
  1141  001A8A  1615               	andwf	___fttol@f1+2,f,c
  1142  001A8C  5013               	movf	___fttol@f1,w,c
  1143  001A8E  6E1D               	movwf	___fttol@lval,c
  1144  001A90  5014               	movf	___fttol@f1+1,w,c
  1145  001A92  6E1E               	movwf	___fttol@lval+1,c
  1146  001A94  5015               	movf	___fttol@f1+2,w,c
  1147  001A96  6E1F               	movwf	___fttol@lval+2,c
  1148  001A98  6A20               	clrf	___fttol@lval+3,c
  1149  001A9A  0E8E               	movlw	142
  1150  001A9C  5E21               	subwf	___fttol@exp1,f,c
  1151  001A9E  AE21               	btfss	___fttol@exp1,7,c
  1152  001AA0  D016               	goto	l3119
  1153  001AA2  5021               	movf	___fttol@exp1,w,c
  1154  001AA4  0A80               	xorlw	128
  1155  001AA6  0F8F               	addlw	143
  1156  001AA8  B0D8               	btfsc	status,0,c
  1157  001AAA  D009               	goto	l3115
  1158  001AAC  0E00               	movlw	0
  1159  001AAE  6E13               	movwf	?___fttol,c
  1160  001AB0  0E00               	movlw	0
  1161  001AB2  6E14               	movwf	?___fttol+1,c
  1162  001AB4  0E00               	movlw	0
  1163  001AB6  6E15               	movwf	?___fttol+2,c
  1164  001AB8  0E00               	movlw	0
  1165  001ABA  6E16               	movwf	?___fttol+3,c
  1166  001ABC  0012               	return	
  1167  001ABE                     l3115:
  1168  001ABE  90D8               	bcf	status,0,c
  1169  001AC0  3220               	rrcf	___fttol@lval+3,f,c
  1170  001AC2  321F               	rrcf	___fttol@lval+2,f,c
  1171  001AC4  321E               	rrcf	___fttol@lval+1,f,c
  1172  001AC6  321D               	rrcf	___fttol@lval,f,c
  1173  001AC8  3E21               	incfsz	___fttol@exp1,f,c
  1174  001ACA  D7F9               	goto	l3115
  1175  001ACC  D014               	goto	l3129
  1176  001ACE                     l3119:
  1177  001ACE  0E17               	movlw	23
  1178  001AD0  6421               	cpfsgt	___fttol@exp1,c
  1179  001AD2  D00F               	goto	l3127
  1180  001AD4  0E00               	movlw	0
  1181  001AD6  6E13               	movwf	?___fttol,c
  1182  001AD8  0E00               	movlw	0
  1183  001ADA  6E14               	movwf	?___fttol+1,c
  1184  001ADC  0E00               	movlw	0
  1185  001ADE  6E15               	movwf	?___fttol+2,c
  1186  001AE0  0E00               	movlw	0
  1187  001AE2  6E16               	movwf	?___fttol+3,c
  1188  001AE4  0012               	return	
  1189  001AE6                     l3125:
  1190  001AE6  90D8               	bcf	status,0,c
  1191  001AE8  361D               	rlcf	___fttol@lval,f,c
  1192  001AEA  361E               	rlcf	___fttol@lval+1,f,c
  1193  001AEC  361F               	rlcf	___fttol@lval+2,f,c
  1194  001AEE  3620               	rlcf	___fttol@lval+3,f,c
  1195  001AF0  0621               	decf	___fttol@exp1,f,c
  1196  001AF2                     l3127:
  1197  001AF2  6621               	tstfsz	___fttol@exp1,c
  1198  001AF4  D7F8               	goto	l3125
  1199  001AF6                     l3129:
  1200  001AF6  501C               	movf	___fttol@sign1,w,c
  1201  001AF8  B4D8               	btfsc	status,2,c
  1202  001AFA  D008               	goto	l3133
  1203  001AFC  1E20               	comf	___fttol@lval+3,f,c
  1204  001AFE  1E1F               	comf	___fttol@lval+2,f,c
  1205  001B00  1E1E               	comf	___fttol@lval+1,f,c
  1206  001B02  6C1D               	negf	___fttol@lval,c
  1207  001B04  0E00               	movlw	0
  1208  001B06  221E               	addwfc	___fttol@lval+1,f,c
  1209  001B08  221F               	addwfc	___fttol@lval+2,f,c
  1210  001B0A  2220               	addwfc	___fttol@lval+3,f,c
  1211  001B0C                     l3133:
  1212  001B0C  C01D  F013         	movff	___fttol@lval,?___fttol
  1213  001B10  C01E  F014         	movff	___fttol@lval+1,?___fttol+1
  1214  001B14  C01F  F015         	movff	___fttol@lval+2,?___fttol+2
  1215  001B18  C020  F016         	movff	___fttol@lval+3,?___fttol+3
  1216  001B1C  0012               	return	
  1217  001B1E                     __end_of___fttol:
  1218                           	opt stack 0
  1219                           wreg	equ	0xFE8
  1220                           status	equ	0xFD8
  1221                           
  1222 ;; *************** function ___awtoft *****************
  1223 ;; Defined at:
  1224 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\awtoft.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  c               2   33[COMRAM] int 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  sign            1   37[COMRAM] unsigned char 
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  3   33[COMRAM] float 
  1231 ;; Registers used:
  1232 ;;		wreg, status,2, status,0, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1238 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;Total ram usage:        5 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; Hardware stack levels required when called:    1
  1245 ;; This function calls:
  1246 ;;		___ftpack
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           	psect	text2
  1253  00233C                     __ptext2:
  1254                           	opt stack 0
  1255  00233C                     ___awtoft:
  1256                           	opt stack 29
  1257                           
  1258                           ;incstack = 0
  1259                           ;incstack = 0
  1260  00233C  6E25               	movwf	??___awtoft& (0+255),c
  1261  00233E  0E00               	movlw	0
  1262  002340  6E26               	movwf	___awtoft@sign,c
  1263  002342  5025               	movf	??___awtoft& (0+255),w,c
  1264  002344  AE23               	btfss	___awtoft@c+1,7,c
  1265  002346  D008               	goto	l3087
  1266  002348  6C22               	negf	___awtoft@c,c
  1267  00234A  1E23               	comf	___awtoft@c+1,f,c
  1268  00234C  B0D8               	btfsc	status,0,c
  1269  00234E  2A23               	incf	___awtoft@c+1,f,c
  1270  002350  6E25               	movwf	??___awtoft& (0+255),c
  1271  002352  0E01               	movlw	1
  1272  002354  6E26               	movwf	___awtoft@sign,c
  1273  002356  5025               	movf	??___awtoft& (0+255),w,c
  1274  002358                     l3087:
  1275  002358  C022  F001         	movff	___awtoft@c,?___ftpack
  1276  00235C  C023  F002         	movff	___awtoft@c+1,?___ftpack+1
  1277  002360  6A03               	clrf	?___ftpack+2,c
  1278  002362  6E25               	movwf	??___awtoft& (0+255),c
  1279  002364  0E8E               	movlw	142
  1280  002366  6E04               	movwf	?___ftpack+3,c
  1281  002368  5025               	movf	??___awtoft& (0+255),w,c
  1282  00236A  C026  F005         	movff	___awtoft@sign,?___ftpack+4
  1283  00236E  EC08  F00E         	call	___ftpack	;wreg free
  1284  002372  C003  F024         	movff	?___ftpack+2,?___awtoft+2
  1285  002376  C002  F023         	movff	?___ftpack+1,?___awtoft+1
  1286  00237A  C001  F022         	movff	?___ftpack,?___awtoft
  1287  00237E  0012               	return	
  1288  002380                     __end_of___awtoft:
  1289                           	opt stack 0
  1290                           wreg	equ	0xFE8
  1291                           status	equ	0xFD8
  1292                           
  1293 ;; *************** function ___awdiv *****************
  1294 ;; Defined at:
  1295 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\awdiv.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  dividend        2    0[COMRAM] int 
  1298 ;;  divisor         2    2[COMRAM] int 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  quotient        2    7[COMRAM] int 
  1301 ;;  sign            1    6[COMRAM] unsigned char 
  1302 ;;  counter         1    5[COMRAM] unsigned char 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  2    0[COMRAM] int 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;Total ram usage:        9 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_main
  1322 ;;		_Thruster_Driver
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text3
  1327  001EF0                     __ptext3:
  1328                           	opt stack 0
  1329  001EF0                     ___awdiv:
  1330                           	opt stack 30
  1331                           
  1332                           ;incstack = 0
  1333                           ;incstack = 0
  1334  001EF0  6E05               	movwf	??___awdiv& (0+255),c
  1335  001EF2  0E00               	movlw	0
  1336  001EF4  6E07               	movwf	___awdiv@sign,c
  1337  001EF6  5005               	movf	??___awdiv& (0+255),w,c
  1338  001EF8  AE04               	btfss	___awdiv@divisor+1,7,c
  1339  001EFA  D008               	goto	l2733
  1340  001EFC  6C03               	negf	___awdiv@divisor,c
  1341  001EFE  1E04               	comf	___awdiv@divisor+1,f,c
  1342  001F00  B0D8               	btfsc	status,0,c
  1343  001F02  2A04               	incf	___awdiv@divisor+1,f,c
  1344  001F04  6E05               	movwf	??___awdiv& (0+255),c
  1345  001F06  0E01               	movlw	1
  1346  001F08  6E07               	movwf	___awdiv@sign,c
  1347  001F0A  5005               	movf	??___awdiv& (0+255),w,c
  1348  001F0C                     l2733:
  1349  001F0C  AE02               	btfss	___awdiv@dividend+1,7,c
  1350  001F0E  D006               	goto	l2739
  1351  001F10  6C01               	negf	___awdiv@dividend,c
  1352  001F12  1E02               	comf	___awdiv@dividend+1,f,c
  1353  001F14  B0D8               	btfsc	status,0,c
  1354  001F16  2A02               	incf	___awdiv@dividend+1,f,c
  1355  001F18  0E01               	movlw	1
  1356  001F1A  1A07               	xorwf	___awdiv@sign,f,c
  1357  001F1C                     l2739:
  1358  001F1C  0E00               	movlw	0
  1359  001F1E  6E09               	movwf	___awdiv@quotient+1,c
  1360  001F20  0E00               	movlw	0
  1361  001F22  6E08               	movwf	___awdiv@quotient,c
  1362  001F24  5004               	movf	___awdiv@divisor+1,w,c
  1363  001F26  1003               	iorwf	___awdiv@divisor,w,c
  1364  001F28  B4D8               	btfsc	status,2,c
  1365  001F2A  D01E               	goto	l2761
  1366  001F2C  6E05               	movwf	??___awdiv& (0+255),c
  1367  001F2E  0E01               	movlw	1
  1368  001F30  6E06               	movwf	___awdiv@counter,c
  1369  001F32  5005               	movf	??___awdiv& (0+255),w,c
  1370  001F34  D004               	goto	l2747
  1371  001F36                     l2745:
  1372  001F36  90D8               	bcf	status,0,c
  1373  001F38  3603               	rlcf	___awdiv@divisor,f,c
  1374  001F3A  3604               	rlcf	___awdiv@divisor+1,f,c
  1375  001F3C  2A06               	incf	___awdiv@counter,f,c
  1376  001F3E                     l2747:
  1377  001F3E  AE04               	btfss	___awdiv@divisor+1,7,c
  1378  001F40  D7FA               	goto	l2745
  1379  001F42                     l2749:
  1380  001F42  90D8               	bcf	status,0,c
  1381  001F44  3608               	rlcf	___awdiv@quotient,f,c
  1382  001F46  3609               	rlcf	___awdiv@quotient+1,f,c
  1383  001F48  5003               	movf	___awdiv@divisor,w,c
  1384  001F4A  5C01               	subwf	___awdiv@dividend,w,c
  1385  001F4C  5004               	movf	___awdiv@divisor+1,w,c
  1386  001F4E  5802               	subwfb	___awdiv@dividend+1,w,c
  1387  001F50  A0D8               	btfss	status,0,c
  1388  001F52  D005               	goto	l2757
  1389  001F54  5003               	movf	___awdiv@divisor,w,c
  1390  001F56  5E01               	subwf	___awdiv@dividend,f,c
  1391  001F58  5004               	movf	___awdiv@divisor+1,w,c
  1392  001F5A  5A02               	subwfb	___awdiv@dividend+1,f,c
  1393  001F5C  8008               	bsf	___awdiv@quotient,0,c
  1394  001F5E                     l2757:
  1395  001F5E  90D8               	bcf	status,0,c
  1396  001F60  3204               	rrcf	___awdiv@divisor+1,f,c
  1397  001F62  3203               	rrcf	___awdiv@divisor,f,c
  1398  001F64  2E06               	decfsz	___awdiv@counter,f,c
  1399  001F66  D7ED               	goto	l2749
  1400  001F68                     l2761:
  1401  001F68  5007               	movf	___awdiv@sign,w,c
  1402  001F6A  B4D8               	btfsc	status,2,c
  1403  001F6C  D004               	goto	l2765
  1404  001F6E  6C08               	negf	___awdiv@quotient,c
  1405  001F70  1E09               	comf	___awdiv@quotient+1,f,c
  1406  001F72  B0D8               	btfsc	status,0,c
  1407  001F74  2A09               	incf	___awdiv@quotient+1,f,c
  1408  001F76                     l2765:
  1409  001F76  C008  F001         	movff	___awdiv@quotient,?___awdiv
  1410  001F7A  C009  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1411  001F7E  0012               	return	
  1412  001F80                     __end_of___awdiv:
  1413                           	opt stack 0
  1414                           wreg	equ	0xFE8
  1415                           status	equ	0xFD8
  1416                           
  1417 ;; *************** function _atan *****************
  1418 ;; Defined at:
  1419 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\atan.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  f               3    8[BANK0 ] int 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  val             3   21[BANK0 ] int 
  1424 ;;  val_squared     3   18[BANK0 ] int 
  1425 ;;  x               3   14[BANK0 ] int 
  1426 ;;  y               3   11[BANK0 ] int 
  1427 ;;  recip           1   17[BANK0 ] unsigned char 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  3    8[BANK0 ] unsigned char 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1437 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;Total ram usage:       16 bytes
  1442 ;; Hardware stack levels used:    1
  1443 ;; Hardware stack levels required when called:    3
  1444 ;; This function calls:
  1445 ;;		___ftadd
  1446 ;;		___ftdiv
  1447 ;;		___asftmul
  1448 ;;		___ftmul
  1449 ;;		_fabs
  1450 ;;		_eval_poly
  1451 ;;		___ftge
  1452 ;;		___ftneg
  1453 ;; This function is called by:
  1454 ;;		_main
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text4
  1459  0012CC                     __ptext4:
  1460                           	opt stack 0
  1461  0012CC                     _atan:
  1462                           	opt stack 27
  1463                           
  1464                           ;incstack = 0
  1465                           ;incstack = 0
  1466  0012CC  C068  F022         	movff	atan@f,?_fabs
  1467  0012D0  C069  F023         	movff	atan@f+1,?_fabs+1
  1468  0012D4  C06A  F024         	movff	atan@f+2,?_fabs+2
  1469  0012D8  ECC0  F011         	call	_fabs	;wreg free
  1470  0012DC  C024  F077         	movff	?_fabs+2,atan@val+2
  1471  0012E0  C023  F076         	movff	?_fabs+1,atan@val+1
  1472  0012E4  C022  F075         	movff	?_fabs,atan@val
  1473  0012E8  0E7F               	movlw	127
  1474  0012EA  0100               	movlb	0	; () banked
  1475  0012EC  1577               	andwf	(atan@val+2)& (0+255),w,b
  1476  0012EE  0100               	movlb	0	; () banked
  1477  0012F0  1176               	iorwf	(atan@val+1)& (0+255),w,b
  1478  0012F2  0100               	movlb	0	; () banked
  1479  0012F4  1175               	iorwf	atan@val& (0+255),w,b
  1480  0012F6  A4D8               	btfss	status,2,c
  1481  0012F8  D00D               	goto	l3223
  1482                           
  1483                           ; BSR set to: 0
  1484  0012FA  0E00               	movlw	0
  1485  0012FC  0100               	movlb	0	; () banked
  1486  0012FE  0100               	movlb	0	; () banked
  1487  001300  6F68               	movwf	?_atan& (0+255),b
  1488  001302  0E00               	movlw	0
  1489  001304  0100               	movlb	0	; () banked
  1490  001306  0100               	movlb	0	; () banked
  1491  001308  6F69               	movwf	(?_atan+1)& (0+255),b
  1492  00130A  0E00               	movlw	0
  1493  00130C  0100               	movlb	0	; () banked
  1494  00130E  0100               	movlb	0	; () banked
  1495  001310  6F6A               	movwf	(?_atan+2)& (0+255),b
  1496  001312  0012               	return	
  1497  001314                     l3223:
  1498                           
  1499                           ; BSR set to: 0
  1500  001314  0E00               	movlw	0
  1501  001316  6E01               	movwf	?___ftge,c
  1502  001318  0E80               	movlw	128
  1503  00131A  6E02               	movwf	?___ftge+1,c
  1504  00131C  0E3F               	movlw	63
  1505  00131E  6E03               	movwf	?___ftge+2,c
  1506  001320  C075  F004         	movff	atan@val,?___ftge+3
  1507  001324  C076  F005         	movff	atan@val+1,?___ftge+4
  1508  001328  C077  F006         	movff	atan@val+2,?___ftge+5
  1509  00132C  ECC0  F00F         	call	___ftge	;wreg free
  1510  001330  B0D8               	btfsc	status,0,c
  1511  001332  D002               	goto	u2930
  1512  001334  0E01               	movlw	1
  1513  001336  D001               	goto	u2936
  1514  001338                     u2930:
  1515  001338  0E00               	movlw	0
  1516  00133A                     u2936:
  1517  00133A  0100               	movlb	0	; () banked
  1518  00133C  0100               	movlb	0	; () banked
  1519  00133E  6F71               	movwf	atan@recip& (0+255),b
  1520  001340  0100               	movlb	0	; () banked
  1521  001342  5171               	movf	atan@recip& (0+255),w,b
  1522  001344  B4D8               	btfsc	status,2,c
  1523  001346  D014               	goto	l594
  1524                           
  1525                           ; BSR set to: 0
  1526  001348  0E00               	movlw	0
  1527  00134A  6E27               	movwf	?___ftdiv,c
  1528  00134C  0E80               	movlw	128
  1529  00134E  6E28               	movwf	?___ftdiv+1,c
  1530  001350  0E3F               	movlw	63
  1531  001352  6E29               	movwf	?___ftdiv+2,c
  1532  001354  C075  F02A         	movff	atan@val,?___ftdiv+3
  1533  001358  C076  F02B         	movff	atan@val+1,?___ftdiv+4
  1534  00135C  C077  F02C         	movff	atan@val+2,?___ftdiv+5
  1535  001360  EC89  F00C         	call	___ftdiv	;wreg free
  1536  001364  C029  F077         	movff	?___ftdiv+2,atan@val+2
  1537  001368  C028  F076         	movff	?___ftdiv+1,atan@val+1
  1538  00136C  C027  F075         	movff	?___ftdiv,atan@val
  1539  001370                     l594:
  1540  001370  C075  F038         	movff	atan@val,?___ftmul
  1541  001374  C076  F039         	movff	atan@val+1,?___ftmul+1
  1542  001378  C077  F03A         	movff	atan@val+2,?___ftmul+2
  1543  00137C  C075  F03B         	movff	atan@val,?___ftmul+3
  1544  001380  C076  F03C         	movff	atan@val+1,?___ftmul+4
  1545  001384  C077  F03D         	movff	atan@val+2,?___ftmul+5
  1546  001388  ECFB  F00B         	call	___ftmul	;wreg free
  1547  00138C  C03A  F074         	movff	?___ftmul+2,atan@val_squared+2
  1548  001390  C039  F073         	movff	?___ftmul+1,atan@val_squared+1
  1549  001394  C038  F072         	movff	?___ftmul,atan@val_squared
  1550  001398  C072  F057         	movff	atan@val_squared,?_eval_poly
  1551  00139C  C073  F058         	movff	atan@val_squared+1,?_eval_poly+1
  1552  0013A0  C074  F059         	movff	atan@val_squared+2,?_eval_poly+2
  1553  0013A4  0E10               	movlw	high atan@coeff_b
  1554  0013A6  6E5B               	movwf	?_eval_poly+4,c
  1555  0013A8  0E1C               	movlw	low atan@coeff_b
  1556  0013AA  6E5A               	movwf	?_eval_poly+3,c
  1557  0013AC  0E00               	movlw	0
  1558  0013AE  6E5D               	movwf	?_eval_poly+6,c
  1559  0013B0  0E04               	movlw	4
  1560  0013B2  6E5C               	movwf	?_eval_poly+5,c
  1561  0013B4  EC8F  F00D         	call	_eval_poly	;wreg free
  1562  0013B8  C059  F06D         	movff	?_eval_poly+2,atan@y+2
  1563  0013BC  C058  F06C         	movff	?_eval_poly+1,atan@y+1
  1564  0013C0  C057  F06B         	movff	?_eval_poly,atan@y
  1565  0013C4  C072  F057         	movff	atan@val_squared,?_eval_poly
  1566  0013C8  C073  F058         	movff	atan@val_squared+1,?_eval_poly+1
  1567  0013CC  C074  F059         	movff	atan@val_squared+2,?_eval_poly+2
  1568  0013D0  0E10               	movlw	high atan@coeff_a
  1569  0013D2  6E5B               	movwf	?_eval_poly+4,c
  1570  0013D4  0E0A               	movlw	low atan@coeff_a
  1571  0013D6  6E5A               	movwf	?_eval_poly+3,c
  1572  0013D8  0E00               	movlw	0
  1573  0013DA  6E5D               	movwf	?_eval_poly+6,c
  1574  0013DC  0E05               	movlw	5
  1575  0013DE  6E5C               	movwf	?_eval_poly+5,c
  1576  0013E0  EC8F  F00D         	call	_eval_poly	;wreg free
  1577  0013E4  C059  F070         	movff	?_eval_poly+2,atan@x+2
  1578  0013E8  C058  F06F         	movff	?_eval_poly+1,atan@x+1
  1579  0013EC  C057  F06E         	movff	?_eval_poly,atan@x
  1580  0013F0  0100               	movlb	0	; () banked
  1581  0013F2  0E00               	movlw	high atan@val
  1582  0013F4  6E4A               	movwf	?___asftmul+1,c
  1583  0013F6  0100               	movlb	0	; () banked
  1584  0013F8  0E75               	movlw	low atan@val
  1585  0013FA  6E49               	movwf	?___asftmul,c
  1586  0013FC  C06B  F02A         	movff	atan@y,?___ftdiv+3
  1587  001400  C06C  F02B         	movff	atan@y+1,?___ftdiv+4
  1588  001404  C06D  F02C         	movff	atan@y+2,?___ftdiv+5
  1589  001408  C06E  F027         	movff	atan@x,?___ftdiv
  1590  00140C  C06F  F028         	movff	atan@x+1,?___ftdiv+1
  1591  001410  C070  F029         	movff	atan@x+2,?___ftdiv+2
  1592  001414  EC89  F00C         	call	___ftdiv	;wreg free
  1593  001418  C029  F04D         	movff	?___ftdiv+2,?___asftmul+4
  1594  00141C  C028  F04C         	movff	?___ftdiv+1,?___asftmul+3
  1595  001420  C027  F04B         	movff	?___ftdiv,?___asftmul+2
  1596  001424  ECE1  F011         	call	___asftmul	;wreg free
  1597  001428  0100               	movlb	0	; () banked
  1598  00142A  0100               	movlb	0	; () banked
  1599  00142C  5171               	movf	atan@recip& (0+255),w,b
  1600  00142E  B4D8               	btfsc	status,2,c
  1601  001430  D01C               	goto	l3237
  1602                           
  1603                           ; BSR set to: 0
  1604  001432  C075  F010         	movff	atan@val,?___ftneg
  1605  001436  C076  F011         	movff	atan@val+1,?___ftneg+1
  1606  00143A  C077  F012         	movff	atan@val+2,?___ftneg+2
  1607  00143E  EC72  F012         	call	___ftneg	;wreg free
  1608  001442  C012  F04B         	movff	?___ftneg+2,?___ftadd+2
  1609  001446  C011  F04A         	movff	?___ftneg+1,?___ftadd+1
  1610  00144A  C010  F049         	movff	?___ftneg,?___ftadd
  1611  00144E  0E10               	movlw	16
  1612  001450  6E4C               	movwf	?___ftadd+3,c
  1613  001452  0EC9               	movlw	201
  1614  001454  6E4D               	movwf	?___ftadd+4,c
  1615  001456  0E3F               	movlw	63
  1616  001458  6E4E               	movwf	?___ftadd+5,c
  1617  00145A  EC5A  F00A         	call	___ftadd	;wreg free
  1618  00145E  C04B  F077         	movff	?___ftadd+2,atan@val+2
  1619  001462  C04A  F076         	movff	?___ftadd+1,atan@val+1
  1620  001466  C049  F075         	movff	?___ftadd,atan@val
  1621  00146A                     l3237:
  1622  00146A  0100               	movlb	0	; () banked
  1623  00146C  0100               	movlb	0	; () banked
  1624  00146E  516A               	movf	(atan@f+2)& (0+255),w,b
  1625  001470  0A80               	xorlw	128
  1626  001472  0F80               	addlw	128
  1627  001474  E107               	bnz	u2965
  1628  001476  0E00               	movlw	0
  1629  001478  0100               	movlb	0	; () banked
  1630  00147A  5D69               	subwf	(atan@f+1)& (0+255),w,b
  1631  00147C  E103               	bnz	u2965
  1632  00147E  0E00               	movlw	0
  1633  001480  0100               	movlb	0	; () banked
  1634  001482  5D68               	subwf	atan@f& (0+255),w,b
  1635  001484                     u2965:
  1636  001484  A0D8               	btfss	status,0,c
  1637  001486  D007               	goto	l3241
  1638                           
  1639                           ; BSR set to: 0
  1640  001488  C075  F068         	movff	atan@val,?_atan
  1641  00148C  C076  F069         	movff	atan@val+1,?_atan+1
  1642  001490  C077  F06A         	movff	atan@val+2,?_atan+2
  1643  001494  0012               	return	
  1644  001496                     l3241:
  1645                           
  1646                           ; BSR set to: 0
  1647  001496  C075  F010         	movff	atan@val,?___ftneg
  1648  00149A  C076  F011         	movff	atan@val+1,?___ftneg+1
  1649  00149E  C077  F012         	movff	atan@val+2,?___ftneg+2
  1650  0014A2  EC72  F012         	call	___ftneg	;wreg free
  1651  0014A6  C012  F06A         	movff	?___ftneg+2,?_atan+2
  1652  0014AA  C011  F069         	movff	?___ftneg+1,?_atan+1
  1653  0014AE  C010  F068         	movff	?___ftneg,?_atan
  1654  0014B2  0012               	return	
  1655  0014B4                     __end_of_atan:
  1656                           	opt stack 0
  1657                           wreg	equ	0xFE8
  1658                           status	equ	0xFD8
  1659                           
  1660 ;; *************** function _eval_poly *****************
  1661 ;; Defined at:
  1662 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\evalpoly.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  x               3   86[COMRAM] unsigned char 
  1665 ;;  d               2   89[COMRAM] PTR const 
  1666 ;;		 -> atan@coeff_a(18), atan@coeff_b(15), 
  1667 ;;  n               2   91[COMRAM] int 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  res             3    5[BANK0 ] int 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  3   86[COMRAM] int 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1679 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;      Totals:         7       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;Total ram usage:       15 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    2
  1686 ;; This function calls:
  1687 ;;		___ftadd
  1688 ;;		___ftmul
  1689 ;;		___wmul
  1690 ;; This function is called by:
  1691 ;;		_atan
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           	psect	text5
  1696  001B1E                     __ptext5:
  1697                           	opt stack 0
  1698  001B1E                     _eval_poly:
  1699                           	opt stack 27
  1700                           
  1701                           ;incstack = 0
  1702                           ;incstack = 0
  1703  001B1E  C05C  F00A         	movff	eval_poly@n,?___wmul
  1704  001B22  C05D  F00B         	movff	eval_poly@n+1,?___wmul+1
  1705  001B26  0E00               	movlw	0
  1706  001B28  6E0D               	movwf	?___wmul+3,c
  1707  001B2A  0E03               	movlw	3
  1708  001B2C  6E0C               	movwf	?___wmul+2,c
  1709  001B2E  ECFF  F011         	call	___wmul	;wreg free
  1710  001B32  500A               	movf	?___wmul,w,c
  1711  001B34  245A               	addwf	eval_poly@d,w,c
  1712  001B36  0100               	movlb	0	; () banked
  1713  001B38  6F60               	movwf	??_eval_poly& (0+255),b
  1714  001B3A  500B               	movf	?___wmul+1,w,c
  1715  001B3C  205B               	addwfc	eval_poly@d+1,w,c
  1716  001B3E  0100               	movlb	0	; () banked
  1717  001B40  6F61               	movwf	(??_eval_poly+1)& (0+255),b
  1718  001B42  C060  FFF6         	movff	??_eval_poly,tblptrl
  1719  001B46  C061  FFF7         	movff	??_eval_poly+1,tblptrh
  1720  001B4A  0E00               	movlw	low (__mediumconst shr (0+16))
  1721  001B4C  6EF8               	movwf	tblptru,c
  1722  001B4E  0009               	tblrd		*+
  1723  001B50  CFF5 F062          	movff	tablat,??_eval_poly+2
  1724  001B54  0009               	tblrd		*+
  1725  001B56  CFF5 F063          	movff	tablat,??_eval_poly+3
  1726  001B5A  0009               	tblrd		*+
  1727  001B5C  CFF5 F064          	movff	tablat,??_eval_poly+4
  1728  001B60  C064  F067         	movff	??_eval_poly+4,eval_poly@res+2
  1729  001B64  C063  F066         	movff	??_eval_poly+3,eval_poly@res+1
  1730  001B68  C062  F065         	movff	??_eval_poly+2,eval_poly@res
  1731  001B6C  D046               	goto	l3215
  1732  001B6E                     l3213:
  1733  001B6E  C065  F03B         	movff	eval_poly@res,?___ftmul+3
  1734  001B72  C066  F03C         	movff	eval_poly@res+1,?___ftmul+4
  1735  001B76  C067  F03D         	movff	eval_poly@res+2,?___ftmul+5
  1736  001B7A  C057  F038         	movff	eval_poly@x,?___ftmul
  1737  001B7E  C058  F039         	movff	eval_poly@x+1,?___ftmul+1
  1738  001B82  C059  F03A         	movff	eval_poly@x+2,?___ftmul+2
  1739  001B86  ECFB  F00B         	call	___ftmul	;wreg free
  1740  001B8A  C03A  F04B         	movff	?___ftmul+2,?___ftadd+2
  1741  001B8E  C039  F04A         	movff	?___ftmul+1,?___ftadd+1
  1742  001B92  C038  F049         	movff	?___ftmul,?___ftadd
  1743  001B96  0E00               	movlw	0
  1744  001B98  6E0D               	movwf	?___wmul+3,c
  1745  001B9A  0E03               	movlw	3
  1746  001B9C  6E0C               	movwf	?___wmul+2,c
  1747  001B9E  065C               	decf	eval_poly@n,f,c
  1748  001BA0  A0D8               	btfss	status,0,c
  1749  001BA2  065D               	decf	eval_poly@n+1,f,c
  1750  001BA4  C05C  F00A         	movff	eval_poly@n,?___wmul
  1751  001BA8  C05D  F00B         	movff	eval_poly@n+1,?___wmul+1
  1752  001BAC  ECFF  F011         	call	___wmul	;wreg free
  1753  001BB0  500A               	movf	?___wmul,w,c
  1754  001BB2  245A               	addwf	eval_poly@d,w,c
  1755  001BB4  0100               	movlb	0	; () banked
  1756  001BB6  6F60               	movwf	??_eval_poly& (0+255),b
  1757  001BB8  500B               	movf	?___wmul+1,w,c
  1758  001BBA  205B               	addwfc	eval_poly@d+1,w,c
  1759  001BBC  0100               	movlb	0	; () banked
  1760  001BBE  6F61               	movwf	(??_eval_poly+1)& (0+255),b
  1761  001BC0  C060  FFF6         	movff	??_eval_poly,tblptrl
  1762  001BC4  C061  FFF7         	movff	??_eval_poly+1,tblptrh
  1763  001BC8  0E00               	movlw	low (__mediumconst shr (0+16))
  1764  001BCA  6EF8               	movwf	tblptru,c
  1765  001BCC  0009               	tblrd		*+
  1766  001BCE  CFF5 F062          	movff	tablat,??_eval_poly+2
  1767  001BD2  0009               	tblrd		*+
  1768  001BD4  CFF5 F063          	movff	tablat,??_eval_poly+3
  1769  001BD8  0009               	tblrd		*+
  1770  001BDA  CFF5 F064          	movff	tablat,??_eval_poly+4
  1771  001BDE  C064  F04E         	movff	??_eval_poly+4,?___ftadd+5
  1772  001BE2  C063  F04D         	movff	??_eval_poly+3,?___ftadd+4
  1773  001BE6  C062  F04C         	movff	??_eval_poly+2,?___ftadd+3
  1774  001BEA  EC5A  F00A         	call	___ftadd	;wreg free
  1775  001BEE  C04B  F067         	movff	?___ftadd+2,eval_poly@res+2
  1776  001BF2  C04A  F066         	movff	?___ftadd+1,eval_poly@res+1
  1777  001BF6  C049  F065         	movff	?___ftadd,eval_poly@res
  1778  001BFA                     l3215:
  1779  001BFA  505D               	movf	eval_poly@n+1,w,c
  1780  001BFC  105C               	iorwf	eval_poly@n,w,c
  1781  001BFE  A4D8               	btfss	status,2,c
  1782  001C00  D7B6               	goto	l3213
  1783  001C02  C065  F057         	movff	eval_poly@res,?_eval_poly
  1784  001C06  C066  F058         	movff	eval_poly@res+1,?_eval_poly+1
  1785  001C0A  C067  F059         	movff	eval_poly@res+2,?_eval_poly+2
  1786  001C0E  0012               	return	
  1787  001C10                     __end_of_eval_poly:
  1788                           	opt stack 0
  1789                           tblptru	equ	0xFF8
  1790                           tblptrh	equ	0xFF7
  1791                           tblptrl	equ	0xFF6
  1792                           tablat	equ	0xFF5
  1793                           wreg	equ	0xFE8
  1794                           status	equ	0xFD8
  1795                           
  1796 ;; *************** function ___ftadd *****************
  1797 ;; Defined at:
  1798 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\ftadd.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  f1              3   72[COMRAM] float 
  1801 ;;  f2              3   75[COMRAM] float 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  exp1            1   85[COMRAM] unsigned char 
  1804 ;;  exp2            1   84[COMRAM] unsigned char 
  1805 ;;  sign            1   83[COMRAM] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  3   72[COMRAM] float 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1815 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;Total ram usage:       14 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    1
  1822 ;; This function calls:
  1823 ;;		___ftpack
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;;		_atan
  1827 ;;		_eval_poly
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text6
  1832  0014B4                     __ptext6:
  1833                           	opt stack 0
  1834  0014B4                     ___ftadd:
  1835                           	opt stack 29
  1836                           
  1837                           ;incstack = 0
  1838                           ;incstack = 0
  1839  0014B4  0E0F               	movlw	15
  1840  0014B6  6E4F               	movwf	??___ftadd& (0+255),c
  1841  0014B8  C049  F050         	movff	___ftadd@f1,??___ftadd+1
  1842  0014BC  C04A  F051         	movff	___ftadd@f1+1,??___ftadd+2
  1843  0014C0  C04B  F052         	movff	___ftadd@f1+2,??___ftadd+3
  1844  0014C4  284F               	incf	??___ftadd,w,c
  1845  0014C6  6E53               	movwf	(??___ftadd+4)& (0+255),c
  1846  0014C8  D004               	goto	u2700
  1847  0014CA                     u2705:
  1848  0014CA  90D8               	bcf	status,0,c
  1849  0014CC  3252               	rrcf	??___ftadd+3,f,c
  1850  0014CE  3251               	rrcf	??___ftadd+2,f,c
  1851  0014D0  3250               	rrcf	??___ftadd+1,f,c
  1852  0014D2                     u2700:
  1853  0014D2  2E53               	decfsz	(??___ftadd+4)& (0+255),f,c
  1854  0014D4  D7FA               	goto	u2705
  1855  0014D6  5050               	movf	??___ftadd+1,w,c
  1856  0014D8  6E56               	movwf	___ftadd@exp1,c
  1857  0014DA  0E0F               	movlw	15
  1858  0014DC  6E4F               	movwf	??___ftadd& (0+255),c
  1859  0014DE  C04C  F050         	movff	___ftadd@f2,??___ftadd+1
  1860  0014E2  C04D  F051         	movff	___ftadd@f2+1,??___ftadd+2
  1861  0014E6  C04E  F052         	movff	___ftadd@f2+2,??___ftadd+3
  1862  0014EA  284F               	incf	??___ftadd,w,c
  1863  0014EC  6E53               	movwf	(??___ftadd+4)& (0+255),c
  1864  0014EE  D004               	goto	u2710
  1865  0014F0                     u2715:
  1866  0014F0  90D8               	bcf	status,0,c
  1867  0014F2  3252               	rrcf	??___ftadd+3,f,c
  1868  0014F4  3251               	rrcf	??___ftadd+2,f,c
  1869  0014F6  3250               	rrcf	??___ftadd+1,f,c
  1870  0014F8                     u2710:
  1871  0014F8  2E53               	decfsz	(??___ftadd+4)& (0+255),f,c
  1872  0014FA  D7FA               	goto	u2715
  1873  0014FC  5050               	movf	??___ftadd+1,w,c
  1874  0014FE  6E55               	movwf	___ftadd@exp2,c
  1875  001500  5056               	movf	___ftadd@exp1,w,c
  1876  001502  B4D8               	btfsc	status,2,c
  1877  001504  D00B               	goto	l816
  1878  001506  5055               	movf	___ftadd@exp2,w,c
  1879  001508  6056               	cpfslt	___ftadd@exp1,c
  1880  00150A  D00F               	goto	l3145
  1881  00150C  5056               	movf	___ftadd@exp1,w,c
  1882  00150E  0800               	sublw	0
  1883  001510  2455               	addwf	___ftadd@exp2,w,c
  1884  001512  6E4F               	movwf	??___ftadd& (0+255),c
  1885  001514  0E19               	movlw	25
  1886  001516  5C4F               	subwf	??___ftadd,w,c
  1887  001518  A0D8               	btfss	status,0,c
  1888  00151A  D007               	goto	l3145
  1889  00151C                     l816:
  1890  00151C  C04C  F049         	movff	___ftadd@f2,?___ftadd
  1891  001520  C04D  F04A         	movff	___ftadd@f2+1,?___ftadd+1
  1892  001524  C04E  F04B         	movff	___ftadd@f2+2,?___ftadd+2
  1893  001528  0012               	return	
  1894  00152A                     l3145:
  1895  00152A  5055               	movf	___ftadd@exp2,w,c
  1896  00152C  B4D8               	btfsc	status,2,c
  1897  00152E  D00B               	goto	l820
  1898  001530  5056               	movf	___ftadd@exp1,w,c
  1899  001532  6055               	cpfslt	___ftadd@exp2,c
  1900  001534  D00F               	goto	l3151
  1901  001536  5055               	movf	___ftadd@exp2,w,c
  1902  001538  0800               	sublw	0
  1903  00153A  2456               	addwf	___ftadd@exp1,w,c
  1904  00153C  6E4F               	movwf	??___ftadd& (0+255),c
  1905  00153E  0E19               	movlw	25
  1906  001540  5C4F               	subwf	??___ftadd,w,c
  1907  001542  A0D8               	btfss	status,0,c
  1908  001544  D007               	goto	l3151
  1909  001546                     l820:
  1910  001546  C049  F049         	movff	___ftadd@f1,?___ftadd
  1911  00154A  C04A  F04A         	movff	___ftadd@f1+1,?___ftadd+1
  1912  00154E  C04B  F04B         	movff	___ftadd@f1+2,?___ftadd+2
  1913  001552  0012               	return	
  1914  001554                     l3151:
  1915  001554  6E4F               	movwf	??___ftadd& (0+255),c
  1916  001556  0E06               	movlw	6
  1917  001558  6E54               	movwf	___ftadd@sign,c
  1918  00155A  504F               	movf	??___ftadd& (0+255),w,c
  1919  00155C  BE4B               	btfsc	___ftadd@f1+2,7,c
  1920  00155E  8E54               	bsf	___ftadd@sign,7,c
  1921  001560  BE4E               	btfsc	___ftadd@f2+2,7,c
  1922  001562  8C54               	bsf	___ftadd@sign,6,c
  1923  001564  8E4A               	bsf	___ftadd@f1+1,7,c
  1924  001566  0EFF               	movlw	255
  1925  001568  1649               	andwf	___ftadd@f1,f,c
  1926  00156A  0EFF               	movlw	255
  1927  00156C  164A               	andwf	___ftadd@f1+1,f,c
  1928  00156E  0E00               	movlw	0
  1929  001570  164B               	andwf	___ftadd@f1+2,f,c
  1930  001572  8E4D               	bsf	___ftadd@f2+1,7,c
  1931  001574  0EFF               	movlw	255
  1932  001576  164C               	andwf	___ftadd@f2,f,c
  1933  001578  0EFF               	movlw	255
  1934  00157A  164D               	andwf	___ftadd@f2+1,f,c
  1935  00157C  0E00               	movlw	0
  1936  00157E  164E               	andwf	___ftadd@f2+2,f,c
  1937  001580  5055               	movf	___ftadd@exp2,w,c
  1938  001582  6056               	cpfslt	___ftadd@exp1,c
  1939  001584  D018               	goto	l3177
  1940  001586                     l3167:
  1941  001586  90D8               	bcf	status,0,c
  1942  001588  364C               	rlcf	___ftadd@f2,f,c
  1943  00158A  364D               	rlcf	___ftadd@f2+1,f,c
  1944  00158C  364E               	rlcf	___ftadd@f2+2,f,c
  1945  00158E  0655               	decf	___ftadd@exp2,f,c
  1946  001590  5055               	movf	___ftadd@exp2,w,c
  1947  001592  1856               	xorwf	___ftadd@exp1,w,c
  1948  001594  B4D8               	btfsc	status,2,c
  1949  001596  D00B               	goto	l3175
  1950  001598  0654               	decf	___ftadd@sign,f,c
  1951  00159A  5054               	movf	___ftadd@sign& (0+255),w,c
  1952  00159C  0B07               	andlw	7
  1953  00159E  B4D8               	btfsc	status,2,c
  1954  0015A0  D006               	goto	l3175
  1955  0015A2  D7F1               	goto	l3167
  1956  0015A4                     l3173:
  1957  0015A4  90D8               	bcf	status,0,c
  1958  0015A6  324B               	rrcf	___ftadd@f1+2,f,c
  1959  0015A8  324A               	rrcf	___ftadd@f1+1,f,c
  1960  0015AA  3249               	rrcf	___ftadd@f1,f,c
  1961  0015AC  2A56               	incf	___ftadd@exp1,f,c
  1962  0015AE                     l3175:
  1963  0015AE  5055               	movf	___ftadd@exp2,w,c
  1964  0015B0  6256               	cpfseq	___ftadd@exp1,c
  1965  0015B2  D7F8               	goto	l3173
  1966  0015B4  D01A               	goto	l831
  1967  0015B6                     l3177:
  1968  0015B6  5056               	movf	___ftadd@exp1,w,c
  1969  0015B8  6055               	cpfslt	___ftadd@exp2,c
  1970  0015BA  D017               	goto	l831
  1971  0015BC                     l3179:
  1972  0015BC  90D8               	bcf	status,0,c
  1973  0015BE  3649               	rlcf	___ftadd@f1,f,c
  1974  0015C0  364A               	rlcf	___ftadd@f1+1,f,c
  1975  0015C2  364B               	rlcf	___ftadd@f1+2,f,c
  1976  0015C4  0656               	decf	___ftadd@exp1,f,c
  1977  0015C6  5055               	movf	___ftadd@exp2,w,c
  1978  0015C8  1856               	xorwf	___ftadd@exp1,w,c
  1979  0015CA  B4D8               	btfsc	status,2,c
  1980  0015CC  D00B               	goto	l3187
  1981  0015CE  0654               	decf	___ftadd@sign,f,c
  1982  0015D0  5054               	movf	___ftadd@sign& (0+255),w,c
  1983  0015D2  0B07               	andlw	7
  1984  0015D4  B4D8               	btfsc	status,2,c
  1985  0015D6  D006               	goto	l3187
  1986  0015D8  D7F1               	goto	l3179
  1987  0015DA                     l3185:
  1988  0015DA  90D8               	bcf	status,0,c
  1989  0015DC  324E               	rrcf	___ftadd@f2+2,f,c
  1990  0015DE  324D               	rrcf	___ftadd@f2+1,f,c
  1991  0015E0  324C               	rrcf	___ftadd@f2,f,c
  1992  0015E2  2A55               	incf	___ftadd@exp2,f,c
  1993  0015E4                     l3187:
  1994  0015E4  5055               	movf	___ftadd@exp2,w,c
  1995  0015E6  6256               	cpfseq	___ftadd@exp1,c
  1996  0015E8  D7F8               	goto	l3185
  1997  0015EA                     l831:
  1998  0015EA  AE54               	btfss	___ftadd@sign,7,c
  1999  0015EC  D00C               	goto	l840
  2000  0015EE  0EFF               	movlw	255
  2001  0015F0  1A49               	xorwf	___ftadd@f1,f,c
  2002  0015F2  0EFF               	movlw	255
  2003  0015F4  1A4A               	xorwf	___ftadd@f1+1,f,c
  2004  0015F6  0EFF               	movlw	255
  2005  0015F8  1A4B               	xorwf	___ftadd@f1+2,f,c
  2006  0015FA  0E01               	movlw	1
  2007  0015FC  2649               	addwf	___ftadd@f1,f,c
  2008  0015FE  0E00               	movlw	0
  2009  001600  224A               	addwfc	___ftadd@f1+1,f,c
  2010  001602  0E00               	movlw	0
  2011  001604  224B               	addwfc	___ftadd@f1+2,f,c
  2012  001606                     l840:
  2013  001606  AC54               	btfss	___ftadd@sign,6,c
  2014  001608  D00C               	goto	l3193
  2015  00160A  0EFF               	movlw	255
  2016  00160C  1A4C               	xorwf	___ftadd@f2,f,c
  2017  00160E  0EFF               	movlw	255
  2018  001610  1A4D               	xorwf	___ftadd@f2+1,f,c
  2019  001612  0EFF               	movlw	255
  2020  001614  1A4E               	xorwf	___ftadd@f2+2,f,c
  2021  001616  0E01               	movlw	1
  2022  001618  264C               	addwf	___ftadd@f2,f,c
  2023  00161A  0E00               	movlw	0
  2024  00161C  224D               	addwfc	___ftadd@f2+1,f,c
  2025  00161E  0E00               	movlw	0
  2026  001620  224E               	addwfc	___ftadd@f2+2,f,c
  2027  001622                     l3193:
  2028  001622  6E4F               	movwf	??___ftadd& (0+255),c
  2029  001624  0E00               	movlw	0
  2030  001626  6E54               	movwf	___ftadd@sign,c
  2031  001628  504F               	movf	??___ftadd& (0+255),w,c
  2032  00162A  5049               	movf	___ftadd@f1,w,c
  2033  00162C  264C               	addwf	___ftadd@f2,f,c
  2034  00162E  504A               	movf	___ftadd@f1+1,w,c
  2035  001630  224D               	addwfc	___ftadd@f2+1,f,c
  2036  001632  504B               	movf	___ftadd@f1+2,w,c
  2037  001634  224E               	addwfc	___ftadd@f2+2,f,c
  2038  001636  AE4E               	btfss	___ftadd@f2+2,7,c
  2039  001638  D010               	goto	l3203
  2040  00163A  0EFF               	movlw	255
  2041  00163C  1A4C               	xorwf	___ftadd@f2,f,c
  2042  00163E  0EFF               	movlw	255
  2043  001640  1A4D               	xorwf	___ftadd@f2+1,f,c
  2044  001642  0EFF               	movlw	255
  2045  001644  1A4E               	xorwf	___ftadd@f2+2,f,c
  2046  001646  0E01               	movlw	1
  2047  001648  264C               	addwf	___ftadd@f2,f,c
  2048  00164A  0E00               	movlw	0
  2049  00164C  224D               	addwfc	___ftadd@f2+1,f,c
  2050  00164E  0E00               	movlw	0
  2051  001650  224E               	addwfc	___ftadd@f2+2,f,c
  2052  001652  6E4F               	movwf	??___ftadd& (0+255),c
  2053  001654  0E01               	movlw	1
  2054  001656  6E54               	movwf	___ftadd@sign,c
  2055  001658  504F               	movf	??___ftadd& (0+255),w,c
  2056  00165A                     l3203:
  2057  00165A  C04C  F001         	movff	___ftadd@f2,?___ftpack
  2058  00165E  C04D  F002         	movff	___ftadd@f2+1,?___ftpack+1
  2059  001662  C04E  F003         	movff	___ftadd@f2+2,?___ftpack+2
  2060  001666  C056  F004         	movff	___ftadd@exp1,?___ftpack+3
  2061  00166A  C054  F005         	movff	___ftadd@sign,?___ftpack+4
  2062  00166E  EC08  F00E         	call	___ftpack	;wreg free
  2063  001672  C003  F04B         	movff	?___ftpack+2,?___ftadd+2
  2064  001676  C002  F04A         	movff	?___ftpack+1,?___ftadd+1
  2065  00167A  C001  F049         	movff	?___ftpack,?___ftadd
  2066  00167E  0012               	return	
  2067  001680                     __end_of___ftadd:
  2068                           	opt stack 0
  2069                           tblptru	equ	0xFF8
  2070                           tblptrh	equ	0xFF7
  2071                           tblptrl	equ	0xFF6
  2072                           tablat	equ	0xFF5
  2073                           wreg	equ	0xFE8
  2074                           status	equ	0xFD8
  2075                           
  2076 ;; *************** function _fabs *****************
  2077 ;; Defined at:
  2078 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fabs.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  d               3   33[COMRAM] float 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;		None
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  3   33[COMRAM] float 
  2085 ;; Registers used:
  2086 ;;		wreg, status,2, status,0, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2092 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2095 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2096 ;;Total ram usage:        3 bytes
  2097 ;; Hardware stack levels used:    1
  2098 ;; Hardware stack levels required when called:    1
  2099 ;; This function calls:
  2100 ;;		___ftneg
  2101 ;; This function is called by:
  2102 ;;		_atan
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text7
  2107  002380                     __ptext7:
  2108                           	opt stack 0
  2109  002380                     _fabs:
  2110                           	opt stack 28
  2111                           
  2112                           ;incstack = 0
  2113                           ;incstack = 0
  2114  002380  5024               	movf	fabs@d+2,w,c
  2115  002382  0A80               	xorlw	128
  2116  002384  0F80               	addlw	128
  2117  002386  E105               	bnz	u2605
  2118  002388  0E00               	movlw	0
  2119  00238A  5C23               	subwf	fabs@d+1,w,c
  2120  00238C  E102               	bnz	u2605
  2121  00238E  0E00               	movlw	0
  2122  002390  5C22               	subwf	fabs@d,w,c
  2123  002392                     u2605:
  2124  002392  B0D8               	btfsc	status,0,c
  2125  002394  D00F               	goto	l707
  2126  002396  C022  F010         	movff	fabs@d,?___ftneg
  2127  00239A  C023  F011         	movff	fabs@d+1,?___ftneg+1
  2128  00239E  C024  F012         	movff	fabs@d+2,?___ftneg+2
  2129  0023A2  EC72  F012         	call	___ftneg	;wreg free
  2130  0023A6  C012  F024         	movff	?___ftneg+2,?_fabs+2
  2131  0023AA  C011  F023         	movff	?___ftneg+1,?_fabs+1
  2132  0023AE  C010  F022         	movff	?___ftneg,?_fabs
  2133  0023B2  0012               	return	
  2134  0023B4                     l707:
  2135  0023B4  C022  F022         	movff	fabs@d,?_fabs
  2136  0023B8  C023  F023         	movff	fabs@d+1,?_fabs+1
  2137  0023BC  C024  F024         	movff	fabs@d+2,?_fabs+2
  2138  0023C0  0012               	return	
  2139  0023C2                     __end_of_fabs:
  2140                           	opt stack 0
  2141                           tblptru	equ	0xFF8
  2142                           tblptrh	equ	0xFF7
  2143                           tblptrl	equ	0xFF6
  2144                           tablat	equ	0xFF5
  2145                           wreg	equ	0xFE8
  2146                           status	equ	0xFD8
  2147                           
  2148 ;; *************** function ___asftmul *****************
  2149 ;; Defined at:
  2150 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asftmul.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  f1p             2   72[COMRAM] PTR float 
  2153 ;;		 -> atan@val(3), 
  2154 ;;  f2              3   74[COMRAM] float 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  3   72[COMRAM] float 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2166 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;Total ram usage:        5 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    2
  2173 ;; This function calls:
  2174 ;;		___ftmul
  2175 ;; This function is called by:
  2176 ;;		_atan
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text8
  2181  0023C2                     __ptext8:
  2182                           	opt stack 0
  2183  0023C2                     ___asftmul:
  2184                           	opt stack 27
  2185                           
  2186                           ;	Return value of ___asftmul is never used
  2187                           
  2188                           ;incstack = 0
  2189                           ;incstack = 0
  2190  0023C2  C049  FFD9         	movff	___asftmul@f1p,fsr2l
  2191  0023C6  C04A  FFDA         	movff	___asftmul@f1p+1,fsr2h
  2192  0023CA  CFDE F038          	movff	postinc2,?___ftmul
  2193  0023CE  CFDE F039          	movff	postinc2,?___ftmul+1
  2194  0023D2  CFDD F03A          	movff	postdec2,?___ftmul+2
  2195  0023D6  C04B  F03B         	movff	___asftmul@f2,?___ftmul+3
  2196  0023DA  C04C  F03C         	movff	___asftmul@f2+1,?___ftmul+4
  2197  0023DE  C04D  F03D         	movff	___asftmul@f2+2,?___ftmul+5
  2198  0023E2  ECFB  F00B         	call	___ftmul	;wreg free
  2199  0023E6  C049  FFD9         	movff	___asftmul@f1p,fsr2l
  2200  0023EA  C04A  FFDA         	movff	___asftmul@f1p+1,fsr2h
  2201  0023EE  C038  FFDE         	movff	?___ftmul,postinc2
  2202  0023F2  C039  FFDE         	movff	?___ftmul+1,postinc2
  2203  0023F6  C03A  FFDD         	movff	?___ftmul+2,postdec2
  2204  0023FA  52DD               	movf	postdec2,f,c
  2205  0023FC  0012               	return	
  2206  0023FE                     __end_of___asftmul:
  2207                           	opt stack 0
  2208                           tblptru	equ	0xFF8
  2209                           tblptrh	equ	0xFF7
  2210                           tblptrl	equ	0xFF6
  2211                           tablat	equ	0xFF5
  2212                           wreg	equ	0xFE8
  2213                           postinc2	equ	0xFDE
  2214                           postdec2	equ	0xFDD
  2215                           fsr2h	equ	0xFDA
  2216                           fsr2l	equ	0xFD9
  2217                           status	equ	0xFD8
  2218                           
  2219 ;; *************** function ___ftdiv *****************
  2220 ;; Defined at:
  2221 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\ftdiv.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  f1              3   38[COMRAM] float 
  2224 ;;  f2              3   41[COMRAM] float 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  f3              3   50[COMRAM] float 
  2227 ;;  sign            1   54[COMRAM] unsigned char 
  2228 ;;  exp             1   53[COMRAM] unsigned char 
  2229 ;;  cntr            1   49[COMRAM] unsigned char 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  3   38[COMRAM] float 
  2232 ;; Registers used:
  2233 ;;		wreg, status,2, status,0, cstack
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2239 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2242 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;Total ram usage:       17 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:    1
  2246 ;; This function calls:
  2247 ;;		___ftpack
  2248 ;; This function is called by:
  2249 ;;		_main
  2250 ;;		_atan
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text9
  2255  001912                     __ptext9:
  2256                           	opt stack 0
  2257  001912                     ___ftdiv:
  2258                           	opt stack 29
  2259                           
  2260                           ;incstack = 0
  2261                           ;incstack = 0
  2262  001912  0E0F               	movlw	15
  2263  001914  6E2D               	movwf	??___ftdiv& (0+255),c
  2264  001916  C027  F02E         	movff	___ftdiv@f1,??___ftdiv+1
  2265  00191A  C028  F02F         	movff	___ftdiv@f1+1,??___ftdiv+2
  2266  00191E  C029  F030         	movff	___ftdiv@f1+2,??___ftdiv+3
  2267  001922  282D               	incf	??___ftdiv,w,c
  2268  001924  6E31               	movwf	(??___ftdiv+4)& (0+255),c
  2269  001926  D004               	goto	u2550
  2270  001928                     u2555:
  2271  001928  90D8               	bcf	status,0,c
  2272  00192A  3230               	rrcf	??___ftdiv+3,f,c
  2273  00192C  322F               	rrcf	??___ftdiv+2,f,c
  2274  00192E  322E               	rrcf	??___ftdiv+1,f,c
  2275  001930                     u2550:
  2276  001930  2E31               	decfsz	(??___ftdiv+4)& (0+255),f,c
  2277  001932  D7FA               	goto	u2555
  2278  001934  502E               	movf	??___ftdiv+1,w,c
  2279  001936  6E36               	movwf	___ftdiv@exp,c
  2280  001938  6636               	tstfsz	___ftdiv@exp& (0+255),c
  2281  00193A  D007               	goto	l3035
  2282  00193C  0E00               	movlw	0
  2283  00193E  6E27               	movwf	?___ftdiv,c
  2284  001940  0E00               	movlw	0
  2285  001942  6E28               	movwf	?___ftdiv+1,c
  2286  001944  0E00               	movlw	0
  2287  001946  6E29               	movwf	?___ftdiv+2,c
  2288  001948  0012               	return	
  2289  00194A                     l3035:
  2290  00194A  0E0F               	movlw	15
  2291  00194C  6E2D               	movwf	??___ftdiv& (0+255),c
  2292  00194E  C02A  F02E         	movff	___ftdiv@f2,??___ftdiv+1
  2293  001952  C02B  F02F         	movff	___ftdiv@f2+1,??___ftdiv+2
  2294  001956  C02C  F030         	movff	___ftdiv@f2+2,??___ftdiv+3
  2295  00195A  282D               	incf	??___ftdiv,w,c
  2296  00195C  6E31               	movwf	(??___ftdiv+4)& (0+255),c
  2297  00195E  D004               	goto	u2570
  2298  001960                     u2575:
  2299  001960  90D8               	bcf	status,0,c
  2300  001962  3230               	rrcf	??___ftdiv+3,f,c
  2301  001964  322F               	rrcf	??___ftdiv+2,f,c
  2302  001966  322E               	rrcf	??___ftdiv+1,f,c
  2303  001968                     u2570:
  2304  001968  2E31               	decfsz	(??___ftdiv+4)& (0+255),f,c
  2305  00196A  D7FA               	goto	u2575
  2306  00196C  502E               	movf	??___ftdiv+1,w,c
  2307  00196E  6E37               	movwf	___ftdiv@sign,c
  2308  001970  6637               	tstfsz	___ftdiv@sign& (0+255),c
  2309  001972  D007               	goto	l3041
  2310  001974  0E00               	movlw	0
  2311  001976  6E27               	movwf	?___ftdiv,c
  2312  001978  0E00               	movlw	0
  2313  00197A  6E28               	movwf	?___ftdiv+1,c
  2314  00197C  0E00               	movlw	0
  2315  00197E  6E29               	movwf	?___ftdiv+2,c
  2316  001980  0012               	return	
  2317  001982                     l3041:
  2318  001982  0E00               	movlw	0
  2319  001984  6E33               	movwf	___ftdiv@f3,c
  2320  001986  0E00               	movlw	0
  2321  001988  6E34               	movwf	___ftdiv@f3+1,c
  2322  00198A  0E00               	movlw	0
  2323  00198C  6E35               	movwf	___ftdiv@f3+2,c
  2324  00198E  5037               	movf	___ftdiv@sign,w,c
  2325  001990  0F89               	addlw	137
  2326  001992  5E36               	subwf	___ftdiv@exp,f,c
  2327  001994  C029  F037         	movff	___ftdiv@f1+2,___ftdiv@sign
  2328  001998  502C               	movf	(___ftdiv@f2+2)& (0+255),w,c
  2329  00199A  1A37               	xorwf	___ftdiv@sign,f,c
  2330  00199C  0E80               	movlw	128
  2331  00199E  1637               	andwf	___ftdiv@sign,f,c
  2332  0019A0  8E28               	bsf	___ftdiv@f1+1,7,c
  2333  0019A2  0EFF               	movlw	255
  2334  0019A4  1627               	andwf	___ftdiv@f1,f,c
  2335  0019A6  0EFF               	movlw	255
  2336  0019A8  1628               	andwf	___ftdiv@f1+1,f,c
  2337  0019AA  0E00               	movlw	0
  2338  0019AC  1629               	andwf	___ftdiv@f1+2,f,c
  2339  0019AE  8E2B               	bsf	___ftdiv@f2+1,7,c
  2340  0019B0  0EFF               	movlw	255
  2341  0019B2  162A               	andwf	___ftdiv@f2,f,c
  2342  0019B4  0EFF               	movlw	255
  2343  0019B6  162B               	andwf	___ftdiv@f2+1,f,c
  2344  0019B8  0E00               	movlw	0
  2345  0019BA  162C               	andwf	___ftdiv@f2+2,f,c
  2346  0019BC  6E2D               	movwf	??___ftdiv& (0+255),c
  2347  0019BE  0E18               	movlw	24
  2348  0019C0  6E32               	movwf	___ftdiv@cntr,c
  2349  0019C2  502D               	movf	??___ftdiv& (0+255),w,c
  2350  0019C4                     l850:
  2351  0019C4  90D8               	bcf	status,0,c
  2352  0019C6  3633               	rlcf	___ftdiv@f3,f,c
  2353  0019C8  3634               	rlcf	___ftdiv@f3+1,f,c
  2354  0019CA  3635               	rlcf	___ftdiv@f3+2,f,c
  2355  0019CC  502A               	movf	___ftdiv@f2,w,c
  2356  0019CE  5C27               	subwf	___ftdiv@f1,w,c
  2357  0019D0  502B               	movf	___ftdiv@f2+1,w,c
  2358  0019D2  5828               	subwfb	___ftdiv@f1+1,w,c
  2359  0019D4  502C               	movf	___ftdiv@f2+2,w,c
  2360  0019D6  5829               	subwfb	___ftdiv@f1+2,w,c
  2361  0019D8  A0D8               	btfss	status,0,c
  2362  0019DA  D007               	goto	l851
  2363  0019DC  502A               	movf	___ftdiv@f2,w,c
  2364  0019DE  5E27               	subwf	___ftdiv@f1,f,c
  2365  0019E0  502B               	movf	___ftdiv@f2+1,w,c
  2366  0019E2  5A28               	subwfb	___ftdiv@f1+1,f,c
  2367  0019E4  502C               	movf	___ftdiv@f2+2,w,c
  2368  0019E6  5A29               	subwfb	___ftdiv@f1+2,f,c
  2369  0019E8  8033               	bsf	___ftdiv@f3,0,c
  2370  0019EA                     l851:
  2371  0019EA  90D8               	bcf	status,0,c
  2372  0019EC  3627               	rlcf	___ftdiv@f1,f,c
  2373  0019EE  3628               	rlcf	___ftdiv@f1+1,f,c
  2374  0019F0  3629               	rlcf	___ftdiv@f1+2,f,c
  2375  0019F2  2E32               	decfsz	___ftdiv@cntr,f,c
  2376  0019F4  D7E7               	goto	l850
  2377  0019F6  C033  F001         	movff	___ftdiv@f3,?___ftpack
  2378  0019FA  C034  F002         	movff	___ftdiv@f3+1,?___ftpack+1
  2379  0019FE  C035  F003         	movff	___ftdiv@f3+2,?___ftpack+2
  2380  001A02  C036  F004         	movff	___ftdiv@exp,?___ftpack+3
  2381  001A06  C037  F005         	movff	___ftdiv@sign,?___ftpack+4
  2382  001A0A  EC08  F00E         	call	___ftpack	;wreg free
  2383  001A0E  C003  F029         	movff	?___ftpack+2,?___ftdiv+2
  2384  001A12  C002  F028         	movff	?___ftpack+1,?___ftdiv+1
  2385  001A16  C001  F027         	movff	?___ftpack,?___ftdiv
  2386  001A1A  0012               	return	
  2387  001A1C                     __end_of___ftdiv:
  2388                           	opt stack 0
  2389                           tblptru	equ	0xFF8
  2390                           tblptrh	equ	0xFF7
  2391                           tblptrl	equ	0xFF6
  2392                           tablat	equ	0xFF5
  2393                           wreg	equ	0xFE8
  2394                           postinc2	equ	0xFDE
  2395                           postdec2	equ	0xFDD
  2396                           fsr2h	equ	0xFDA
  2397                           fsr2l	equ	0xFD9
  2398                           status	equ	0xFD8
  2399                           
  2400 ;; *************** function ___ftpack *****************
  2401 ;; Defined at:
  2402 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\float.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  arg             3    0[COMRAM] unsigned um
  2405 ;;  exp             1    3[COMRAM] unsigned char 
  2406 ;;  sign            1    4[COMRAM] unsigned char 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  3    0[COMRAM] float 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2418 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;Total ram usage:        8 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		___awtoft
  2428 ;;		___ftadd
  2429 ;;		___ftdiv
  2430 ;;		___ftmul
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text10
  2435  001C10                     __ptext10:
  2436                           	opt stack 0
  2437  001C10                     ___ftpack:
  2438                           	opt stack 29
  2439                           
  2440                           ;incstack = 0
  2441                           ;incstack = 0
  2442  001C10  5004               	movf	___ftpack@exp,w,c
  2443  001C12  B4D8               	btfsc	status,2,c
  2444  001C14  D005               	goto	l2695
  2445  001C16  5001               	movf	___ftpack@arg,w,c
  2446  001C18  1002               	iorwf	___ftpack@arg+1,w,c
  2447  001C1A  1003               	iorwf	___ftpack@arg+2,w,c
  2448  001C1C  A4D8               	btfss	status,2,c
  2449  001C1E  D00C               	goto	l2701
  2450  001C20                     l2695:
  2451  001C20  0E00               	movlw	0
  2452  001C22  6E01               	movwf	?___ftpack,c
  2453  001C24  0E00               	movlw	0
  2454  001C26  6E02               	movwf	?___ftpack+1,c
  2455  001C28  0E00               	movlw	0
  2456  001C2A  6E03               	movwf	?___ftpack+2,c
  2457  001C2C  0012               	return	
  2458  001C2E                     l2699:
  2459  001C2E  2A04               	incf	___ftpack@exp,f,c
  2460  001C30  90D8               	bcf	status,0,c
  2461  001C32  3203               	rrcf	___ftpack@arg+2,f,c
  2462  001C34  3202               	rrcf	___ftpack@arg+1,f,c
  2463  001C36  3201               	rrcf	___ftpack@arg,f,c
  2464  001C38                     l2701:
  2465  001C38  0E00               	movlw	0
  2466  001C3A  1401               	andwf	___ftpack@arg,w,c
  2467  001C3C  6E06               	movwf	??___ftpack& (0+255),c
  2468  001C3E  0E00               	movlw	0
  2469  001C40  1402               	andwf	___ftpack@arg+1,w,c
  2470  001C42  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2471  001C44  0EFE               	movlw	254
  2472  001C46  1403               	andwf	___ftpack@arg+2,w,c
  2473  001C48  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2474  001C4A  5006               	movf	??___ftpack,w,c
  2475  001C4C  1007               	iorwf	??___ftpack+1,w,c
  2476  001C4E  1008               	iorwf	??___ftpack+2,w,c
  2477  001C50  B4D8               	btfsc	status,2,c
  2478  001C52  D00C               	goto	l2707
  2479  001C54  D7EC               	goto	l2699
  2480  001C56                     l2703:
  2481  001C56  2A04               	incf	___ftpack@exp,f,c
  2482  001C58  0E01               	movlw	1
  2483  001C5A  2601               	addwf	___ftpack@arg,f,c
  2484  001C5C  0E00               	movlw	0
  2485  001C5E  2202               	addwfc	___ftpack@arg+1,f,c
  2486  001C60  0E00               	movlw	0
  2487  001C62  2203               	addwfc	___ftpack@arg+2,f,c
  2488  001C64  90D8               	bcf	status,0,c
  2489  001C66  3203               	rrcf	___ftpack@arg+2,f,c
  2490  001C68  3202               	rrcf	___ftpack@arg+1,f,c
  2491  001C6A  3201               	rrcf	___ftpack@arg,f,c
  2492  001C6C                     l2707:
  2493  001C6C  0E00               	movlw	0
  2494  001C6E  1401               	andwf	___ftpack@arg,w,c
  2495  001C70  6E06               	movwf	??___ftpack& (0+255),c
  2496  001C72  0E00               	movlw	0
  2497  001C74  1402               	andwf	___ftpack@arg+1,w,c
  2498  001C76  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2499  001C78  0EFF               	movlw	255
  2500  001C7A  1403               	andwf	___ftpack@arg+2,w,c
  2501  001C7C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2502  001C7E  5006               	movf	??___ftpack,w,c
  2503  001C80  1007               	iorwf	??___ftpack+1,w,c
  2504  001C82  1008               	iorwf	??___ftpack+2,w,c
  2505  001C84  B4D8               	btfsc	status,2,c
  2506  001C86  D006               	goto	l2711
  2507  001C88  D7E6               	goto	l2703
  2508  001C8A                     l2709:
  2509  001C8A  0604               	decf	___ftpack@exp,f,c
  2510  001C8C  90D8               	bcf	status,0,c
  2511  001C8E  3601               	rlcf	___ftpack@arg,f,c
  2512  001C90  3602               	rlcf	___ftpack@arg+1,f,c
  2513  001C92  3603               	rlcf	___ftpack@arg+2,f,c
  2514  001C94                     l2711:
  2515  001C94  AE02               	btfss	___ftpack@arg+1,7,c
  2516  001C96  D7F9               	goto	l2709
  2517  001C98  A004               	btfss	___ftpack@exp,0,c
  2518  001C9A  9E02               	bcf	___ftpack@arg+1,7,c
  2519  001C9C  90D8               	bcf	status,0,c
  2520  001C9E  3204               	rrcf	___ftpack@exp,f,c
  2521  001CA0  5004               	movf	___ftpack@exp,w,c
  2522  001CA2  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2523  001CA4  6A07               	clrf	(??___ftpack+1)& (0+255),c
  2524  001CA6  6A06               	clrf	??___ftpack& (0+255),c
  2525  001CA8  5006               	movf	??___ftpack,w,c
  2526  001CAA  1201               	iorwf	___ftpack@arg,f,c
  2527  001CAC  5007               	movf	??___ftpack+1,w,c
  2528  001CAE  1202               	iorwf	___ftpack@arg+1,f,c
  2529  001CB0  5008               	movf	??___ftpack+2,w,c
  2530  001CB2  1203               	iorwf	___ftpack@arg+2,f,c
  2531  001CB4  5005               	movf	___ftpack@sign,w,c
  2532  001CB6  A4D8               	btfss	status,2,c
  2533  001CB8  8E03               	bsf	___ftpack@arg+2,7,c
  2534  001CBA  C001  F001         	movff	___ftpack@arg,?___ftpack
  2535  001CBE  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2536  001CC2  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2537  001CC6  0012               	return	
  2538  001CC8                     __end_of___ftpack:
  2539                           	opt stack 0
  2540                           tblptru	equ	0xFF8
  2541                           tblptrh	equ	0xFF7
  2542                           tblptrl	equ	0xFF6
  2543                           tablat	equ	0xFF5
  2544                           wreg	equ	0xFE8
  2545                           postinc2	equ	0xFDE
  2546                           postdec2	equ	0xFDD
  2547                           fsr2h	equ	0xFDA
  2548                           fsr2l	equ	0xFD9
  2549                           status	equ	0xFD8
  2550                           
  2551 ;; *************** function _putrs1USART *****************
  2552 ;; Defined at:
  2553 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\u1putrs.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  data            2    1[COMRAM] PTR const unsigned char 
  2556 ;;		 -> main@buff(30), 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;		None
  2559 ;; Return value:  Size  Location     Type
  2560 ;;		None               void
  2561 ;; Registers used:
  2562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;Total ram usage:        2 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; Hardware stack levels required when called:    1
  2575 ;; This function calls:
  2576 ;;		_Write1USART
  2577 ;; This function is called by:
  2578 ;;		_main
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text11
  2583  002470                     __ptext11:
  2584                           	opt stack 0
  2585  002470                     _putrs1USART:
  2586                           	opt stack 29
  2587  002470                     l354:
  2588  002470  A2AC               	btfss	4012,1,c	;volatile
  2589  002472  D7FE               	goto	l354
  2590  002474  C002  FFD9         	movff	putrs1USART@data,fsr2l
  2591  002478  C003  FFDA         	movff	putrs1USART@data+1,fsr2h
  2592  00247C  50DF               	movf	indf2,w,c
  2593  00247E  6E01               	movwf	?_Write1USART,c
  2594  002480  EC9F  F012         	call	_Write1USART	;wreg free
  2595  002484  C002  FFD9         	movff	putrs1USART@data,fsr2l
  2596  002488  C003  FFDA         	movff	putrs1USART@data+1,fsr2h
  2597  00248C  4A02               	infsnz	putrs1USART@data,f,c
  2598  00248E  2A03               	incf	putrs1USART@data+1,f,c
  2599  002490  50DF               	movf	indf2,w,c
  2600  002492  B4D8               	btfsc	status,2,c
  2601  002494  0012               	return	
  2602  002496  D7EC               	goto	l354
  2603  002498                     __end_of_putrs1USART:
  2604                           	opt stack 0
  2605                           tblptru	equ	0xFF8
  2606                           tblptrh	equ	0xFF7
  2607                           tblptrl	equ	0xFF6
  2608                           tablat	equ	0xFF5
  2609                           wreg	equ	0xFE8
  2610                           indf2	equ	0xFDF
  2611                           postinc2	equ	0xFDE
  2612                           postdec2	equ	0xFDD
  2613                           fsr2h	equ	0xFDA
  2614                           fsr2l	equ	0xFD9
  2615                           status	equ	0xFD8
  2616                           
  2617 ;; *************** function _Write1USART *****************
  2618 ;; Defined at:
  2619 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\u1write.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  data            1    0[COMRAM] unsigned char 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;		None               void
  2626 ;; Registers used:
  2627 ;;		None
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2633 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;Total ram usage:        1 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_putrs1USART
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text12
  2647  00253E                     __ptext12:
  2648                           	opt stack 0
  2649  00253E                     _Write1USART:
  2650                           	opt stack 29
  2651                           
  2652                           ;incstack = 0
  2653                           ;incstack = 0
  2654  00253E  ACAC               	btfss	4012,6,c	;volatile
  2655  002540  D005               	goto	l367
  2656  002542  90AC               	bcf	4012,0,c	;volatile
  2657  002544  0100               	movlb	0	; () banked
  2658  002546  0100               	movlb	0	; () banked
  2659  002548  B3BB               	btfsc	_USART1_Status& (0+255),1,b
  2660                           
  2661                           ; BSR set to: 0
  2662  00254A  80AC               	bsf	4012,0,c	;volatile
  2663  00254C                     l367:
  2664  00254C  C001  FFAD         	movff	Write1USART@data,4013	;volatile
  2665  002550  0012               	return	
  2666  002552                     __end_of_Write1USART:
  2667                           	opt stack 0
  2668                           tblptru	equ	0xFF8
  2669                           tblptrh	equ	0xFF7
  2670                           tblptrl	equ	0xFF6
  2671                           tablat	equ	0xFF5
  2672                           wreg	equ	0xFE8
  2673                           indf2	equ	0xFDF
  2674                           postinc2	equ	0xFDE
  2675                           postdec2	equ	0xFDD
  2676                           fsr2h	equ	0xFDA
  2677                           fsr2l	equ	0xFD9
  2678                           status	equ	0xFD8
  2679                           
  2680 ;; *************** function _sprintf *****************
  2681 ;; Defined at:
  2682 ;;		line 493 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\doprnt.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  sp              2   14[COMRAM] PTR unsigned char 
  2685 ;;		 -> main@buff(30), 
  2686 ;;  f               2   16[COMRAM] PTR const unsigned char 
  2687 ;;		 -> STR_1(10), 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  _val            5   30[COMRAM] struct .
  2690 ;;  ap              2   26[COMRAM] PTR void [1]
  2691 ;;		 -> ?_sprintf(2), 
  2692 ;;  c               1   35[COMRAM] char 
  2693 ;;  prec            1   29[COMRAM] char 
  2694 ;;  flag            1   28[COMRAM] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  2   14[COMRAM] int 
  2697 ;; Registers used:
  2698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2704 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;Total ram usage:       22 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    1
  2711 ;; This function calls:
  2712 ;;		___lwdiv
  2713 ;;		___lwmod
  2714 ;; This function is called by:
  2715 ;;		_main
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text13
  2720  001680                     __ptext13:
  2721                           	opt stack 0
  2722  001680                     _sprintf:
  2723                           	opt stack 29
  2724                           
  2725                           ;doprnt.c: 494: va_list ap;
  2726                           ;doprnt.c: 499: signed char c;
  2727                           ;doprnt.c: 506: signed char prec;
  2728                           ;doprnt.c: 508: unsigned char flag;
  2729                           ;doprnt.c: 527: union {
  2730                           ;doprnt.c: 528: unsigned int _val;
  2731                           ;doprnt.c: 529: struct {
  2732                           ;doprnt.c: 530: const char * _cp;
  2733                           ;doprnt.c: 531: unsigned _len;
  2734                           ;doprnt.c: 532: } _str;
  2735                           ;doprnt.c: 533: } _val;
  2736                           ;doprnt.c: 542: *ap = __va_start();
  2737                           
  2738                           ;incstack = 0
  2739                           ;incstack = 0
  2740  001680  0E00               	movlw	high (?_sprintf+4)
  2741  001682  6E1C               	movwf	sprintf@ap+1,c
  2742  001684  0E13               	movlw	low (?_sprintf+4)
  2743  001686  6E1B               	movwf	sprintf@ap,c
  2744                           
  2745                           ;doprnt.c: 545: while(c = *f++) {
  2746  001688  D09E               	goto	l2979
  2747  00168A                     l2927:
  2748                           
  2749                           ;doprnt.c: 547: if(c != '%')
  2750  00168A  5024               	movf	sprintf@c,w,c
  2751  00168C  0A25               	xorlw	37
  2752  00168E  B4D8               	btfsc	status,2,c
  2753  001690  D009               	goto	l2933
  2754                           
  2755                           ;doprnt.c: 549: {
  2756                           ;doprnt.c: 550: ((*sp++ = (c)));
  2757  001692  C00F  FFD9         	movff	sprintf@sp,fsr2l
  2758  001696  C010  FFDA         	movff	sprintf@sp+1,fsr2h
  2759  00169A  C024  FFDF         	movff	sprintf@c,indf2
  2760  00169E  4A0F               	infsnz	sprintf@sp,f,c
  2761  0016A0  2A10               	incf	sprintf@sp+1,f,c
  2762                           
  2763                           ;doprnt.c: 551: continue;
  2764  0016A2  D091               	goto	l2979
  2765  0016A4                     l2933:
  2766                           
  2767                           ;doprnt.c: 552: }
  2768                           ;doprnt.c: 557: flag = 0;
  2769  0016A4  6E19               	movwf	??_sprintf& (0+255),c
  2770  0016A6  0E00               	movlw	0
  2771  0016A8  6E1D               	movwf	sprintf@flag,c
  2772  0016AA  5019               	movf	??_sprintf& (0+255),w,c
  2773                           
  2774                           ;doprnt.c: 831: }
  2775                           
  2776                           ;doprnt.c: 822: continue;
  2777                           
  2778                           ;doprnt.c: 811: default:
  2779                           
  2780                           ;doprnt.c: 707: case 'i':
  2781                           ;doprnt.c: 708: break;
  2782                           
  2783                           ;doprnt.c: 706: case 'd':
  2784                           
  2785                           ;doprnt.c: 647: goto alldone;
  2786                           
  2787                           ;doprnt.c: 646: case 0:
  2788                           
  2789                           ;doprnt.c: 644: switch(c = *f++) {
  2790  0016AC  5011               	movf	sprintf@f,w,c
  2791  0016AE  6E19               	movwf	??_sprintf& (0+255),c
  2792  0016B0  5012               	movf	sprintf@f+1,w,c
  2793  0016B2  6E1A               	movwf	(??_sprintf+1)& (0+255),c
  2794  0016B4  4A11               	infsnz	sprintf@f,f,c
  2795  0016B6  2A12               	incf	sprintf@f+1,f,c
  2796  0016B8  C019  FFF6         	movff	??_sprintf,tblptrl
  2797  0016BC  C01A  FFF7         	movff	??_sprintf+1,tblptrh
  2798  0016C0  0E00               	movlw	low (__mediumconst shr (0+16))
  2799  0016C2  6EF8               	movwf	tblptru,c
  2800  0016C4  0008               	tblrd		*
  2801  0016C6  CFF5 F024          	movff	tablat,sprintf@c
  2802  0016CA  5024               	movf	sprintf@c& (0+255),w,c
  2803                           
  2804                           ; Switch size 1, requested type "space"
  2805                           ; Number of cases is 3, Range of values is 0 to 105
  2806                           ; switch strategies available:
  2807                           ; Name         Instructions Cycles
  2808                           ; simple_byte           10     6 (average)
  2809                           ;	Chosen strategy is simple_byte
  2810  0016CC  0A00               	xorlw	0	; case 0
  2811  0016CE  B4D8               	btfsc	status,2,c
  2812  0016D0  D08B               	goto	l2981
  2813  0016D2  0A64               	xorlw	100	; case 100
  2814  0016D4  B4D8               	btfsc	status,2,c
  2815  0016D6  D003               	goto	l2939
  2816  0016D8  0A0D               	xorlw	13	; case 105
  2817  0016DA  A4D8               	btfss	status,2,c
  2818  0016DC  D074               	goto	l2979
  2819  0016DE                     l2939:
  2820                           
  2821                           ;doprnt.c: 1260: {
  2822                           ;doprnt.c: 1266: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2823  0016DE  C01B  FFD9         	movff	sprintf@ap,fsr2l
  2824  0016E2  C01C  FFDA         	movff	sprintf@ap+1,fsr2h
  2825  0016E6  CFDE F01F          	movff	postinc2,sprintf@_val
  2826  0016EA  CFDD F020          	movff	postdec2,sprintf@_val+1
  2827  0016EE  0E02               	movlw	2
  2828  0016F0  261B               	addwf	sprintf@ap,f,c
  2829  0016F2  0E00               	movlw	0
  2830  0016F4  221C               	addwfc	sprintf@ap+1,f,c
  2831                           
  2832                           ;doprnt.c: 1268: if((int)_val._val < 0) {
  2833  0016F6  AE20               	btfss	sprintf@_val+1,7,c
  2834  0016F8  D006               	goto	l2949
  2835                           
  2836                           ;doprnt.c: 1269: flag |= 0x03;
  2837  0016FA  0E03               	movlw	3
  2838  0016FC  121D               	iorwf	sprintf@flag,f,c
  2839                           
  2840                           ;doprnt.c: 1270: _val._val = -_val._val;
  2841  0016FE  6C1F               	negf	sprintf@_val,c
  2842  001700  1E20               	comf	sprintf@_val+1,f,c
  2843  001702  B0D8               	btfsc	status,0,c
  2844  001704  2A20               	incf	sprintf@_val+1,f,c
  2845  001706                     l2949:
  2846                           
  2847                           ;doprnt.c: 1271: }
  2848                           ;doprnt.c: 1273: }
  2849                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2850  001706  6E19               	movwf	??_sprintf& (0+255),c
  2851  001708  0E01               	movlw	1
  2852  00170A  6E24               	movwf	sprintf@c,c
  2853  00170C  5019               	movf	??_sprintf& (0+255),w,c
  2854  00170E  5024               	movf	sprintf@c,w,c
  2855  001710  0A05               	xorlw	5
  2856  001712  B4D8               	btfsc	status,2,c
  2857  001714  D019               	goto	l2963
  2858                           
  2859                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
  2860  001716  5024               	movf	sprintf@c,w,c
  2861  001718  0D02               	mullw	2
  2862  00171A  0E00               	movlw	low _dpowers
  2863  00171C  24F3               	addwf	prodl,w,c
  2864  00171E  6EF6               	movwf	tblptrl,c
  2865  001720  0E10               	movlw	high _dpowers
  2866  001722  20F4               	addwfc	prodh,w,c
  2867  001724  6EF7               	movwf	tblptrh,c
  2868  001726  6AF8               	clrf	tblptru,c
  2869  001728  0E00               	movlw	low (__mediumconst shr (0+16))
  2870  00172A  22F8               	addwfc	tblptru,f,c
  2871  00172C  0009               	tblrd		*+
  2872  00172E  CFF5 F019          	movff	tablat,??_sprintf
  2873  001732  0009               	tblrd		*+
  2874  001734  CFF5 F01A          	movff	tablat,??_sprintf+1
  2875  001738  5019               	movf	??_sprintf,w,c
  2876  00173A  5C1F               	subwf	sprintf@_val,w,c
  2877  00173C  501A               	movf	??_sprintf+1,w,c
  2878  00173E  5820               	subwfb	sprintf@_val+1,w,c
  2879  001740  A0D8               	btfss	status,0,c
  2880  001742  D002               	goto	l2963
  2881                           
  2882                           ;doprnt.c: 1314: break;
  2883  001744  2A24               	incf	sprintf@c,f,c
  2884  001746  D7E3               	goto	L3
  2885  001748                     l2963:
  2886                           
  2887                           ;doprnt.c: 1429: {
  2888                           ;doprnt.c: 1445: if(flag & 0x03)
  2889  001748  501D               	movf	sprintf@flag,w,c
  2890  00174A  0B03               	andlw	3
  2891  00174C  B4D8               	btfsc	status,2,c
  2892  00174E  D008               	goto	l2969
  2893                           
  2894                           ;doprnt.c: 1446: ((*sp++ = ('-')));
  2895  001750  C00F  FFD9         	movff	sprintf@sp,fsr2l
  2896  001754  C010  FFDA         	movff	sprintf@sp+1,fsr2h
  2897  001758  0E2D               	movlw	45
  2898  00175A  6EDF               	movwf	indf2,c
  2899  00175C  4A0F               	infsnz	sprintf@sp,f,c
  2900  00175E  2A10               	incf	sprintf@sp+1,f,c
  2901  001760                     l2969:
  2902                           
  2903                           ;doprnt.c: 1476: }
  2904                           ;doprnt.c: 1479: prec = c;
  2905  001760  C024  F01E         	movff	sprintf@c,sprintf@prec
  2906                           
  2907                           ;doprnt.c: 1481: while(prec--) {
  2908  001764  D02C               	goto	l2977
  2909  001766                     l2971:
  2910                           
  2911                           ;doprnt.c: 1485: {
  2912                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
  2913  001766  501E               	movf	sprintf@prec,w,c
  2914  001768  0D02               	mullw	2
  2915  00176A  0E00               	movlw	low _dpowers
  2916  00176C  24F3               	addwf	prodl,w,c
  2917  00176E  6EF6               	movwf	tblptrl,c
  2918  001770  0E10               	movlw	high _dpowers
  2919  001772  20F4               	addwfc	prodh,w,c
  2920  001774  6EF7               	movwf	tblptrh,c
  2921  001776  6AF8               	clrf	tblptru,c
  2922  001778  0E00               	movlw	low (__mediumconst shr (0+16))
  2923  00177A  22F8               	addwfc	tblptru,f,c
  2924  00177C  0009               	tblrd		*+
  2925  00177E  CFF5 F003          	movff	tablat,?___lwdiv+2
  2926  001782  000A               	tblrd		*-
  2927  001784  CFF5 F004          	movff	tablat,?___lwdiv+3
  2928  001788  C01F  F001         	movff	sprintf@_val,?___lwdiv
  2929  00178C  C020  F002         	movff	sprintf@_val+1,?___lwdiv+1
  2930  001790  EC01  F011         	call	___lwdiv	;wreg free
  2931  001794  C001  F009         	movff	?___lwdiv,?___lwmod
  2932  001798  C002  F00A         	movff	?___lwdiv+1,?___lwmod+1
  2933  00179C  0E00               	movlw	0
  2934  00179E  6E0C               	movwf	?___lwmod+3,c
  2935  0017A0  0E0A               	movlw	10
  2936  0017A2  6E0B               	movwf	?___lwmod+2,c
  2937  0017A4  EC7B  F011         	call	___lwmod	;wreg free
  2938  0017A8  5009               	movf	?___lwmod,w,c
  2939  0017AA  0F30               	addlw	48
  2940  0017AC  6E24               	movwf	sprintf@c,c
  2941                           
  2942                           ;doprnt.c: 1530: }
  2943                           ;doprnt.c: 1531: ((*sp++ = (c)));
  2944  0017AE  C00F  FFD9         	movff	sprintf@sp,fsr2l
  2945  0017B2  C010  FFDA         	movff	sprintf@sp+1,fsr2h
  2946  0017B6  C024  FFDF         	movff	sprintf@c,indf2
  2947  0017BA  4A0F               	infsnz	sprintf@sp,f,c
  2948  0017BC  2A10               	incf	sprintf@sp+1,f,c
  2949  0017BE                     l2977:
  2950  0017BE  061E               	decf	sprintf@prec,f,c
  2951  0017C0  281E               	incf	sprintf@prec& (0+255),w,c
  2952  0017C2  A4D8               	btfss	status,2,c
  2953  0017C4  D7D0               	goto	l2971
  2954  0017C6                     l2979:
  2955  0017C6  5011               	movf	sprintf@f,w,c
  2956  0017C8  6E19               	movwf	??_sprintf& (0+255),c
  2957  0017CA  5012               	movf	sprintf@f+1,w,c
  2958  0017CC  6E1A               	movwf	(??_sprintf+1)& (0+255),c
  2959  0017CE  4A11               	infsnz	sprintf@f,f,c
  2960  0017D0  2A12               	incf	sprintf@f+1,f,c
  2961  0017D2  C019  FFF6         	movff	??_sprintf,tblptrl
  2962  0017D6  C01A  FFF7         	movff	??_sprintf+1,tblptrh
  2963  0017DA  0E00               	movlw	low (__mediumconst shr (0+16))
  2964  0017DC  6EF8               	movwf	tblptru,c
  2965  0017DE  0008               	tblrd		*
  2966  0017E0  CFF5 F024          	movff	tablat,sprintf@c
  2967  0017E4  6624               	tstfsz	sprintf@c& (0+255),c
  2968  0017E6  D751               	goto	l2927
  2969  0017E8                     l2981:
  2970                           
  2971                           ;doprnt.c: 1545: *sp = 0;
  2972  0017E8  C00F  FFD9         	movff	sprintf@sp,fsr2l
  2973  0017EC  C010  FFDA         	movff	sprintf@sp+1,fsr2h
  2974  0017F0  0E00               	movlw	0
  2975  0017F2  6EDF               	movwf	indf2,c
  2976  0017F4  0012               	return	
  2977  0017F6                     __end_of_sprintf:
  2978                           	opt stack 0
  2979                           tblptru	equ	0xFF8
  2980                           tblptrh	equ	0xFF7
  2981                           tblptrl	equ	0xFF6
  2982                           tablat	equ	0xFF5
  2983                           prodh	equ	0xFF4
  2984                           prodl	equ	0xFF3
  2985                           wreg	equ	0xFE8
  2986                           indf2	equ	0xFDF
  2987                           postinc2	equ	0xFDE
  2988                           postdec2	equ	0xFDD
  2989                           fsr2h	equ	0xFDA
  2990                           fsr2l	equ	0xFD9
  2991                           status	equ	0xFD8
  2992                           
  2993 ;; *************** function ___lwmod *****************
  2994 ;; Defined at:
  2995 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lwmod.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;  dividend        2    8[COMRAM] unsigned int 
  2998 ;;  divisor         2   10[COMRAM] unsigned int 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;  counter         1   13[COMRAM] unsigned char 
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  2    8[COMRAM] unsigned int 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2, status,0
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3010 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;Total ram usage:        6 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; This function calls:
  3017 ;;		Nothing
  3018 ;; This function is called by:
  3019 ;;		_sprintf
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text14
  3024  0022F6                     __ptext14:
  3025                           	opt stack 0
  3026  0022F6                     ___lwmod:
  3027                           	opt stack 29
  3028                           
  3029                           ;incstack = 0
  3030                           ;incstack = 0
  3031  0022F6  500C               	movf	___lwmod@divisor+1,w,c
  3032  0022F8  100B               	iorwf	___lwmod@divisor,w,c
  3033  0022FA  B4D8               	btfsc	status,2,c
  3034  0022FC  D01A               	goto	l1001
  3035  0022FE  6E0D               	movwf	??___lwmod& (0+255),c
  3036  002300  0E01               	movlw	1
  3037  002302  6E0E               	movwf	___lwmod@counter,c
  3038  002304  500D               	movf	??___lwmod& (0+255),w,c
  3039  002306  D004               	goto	l2909
  3040  002308                     l2907:
  3041  002308  90D8               	bcf	status,0,c
  3042  00230A  360B               	rlcf	___lwmod@divisor,f,c
  3043  00230C  360C               	rlcf	___lwmod@divisor+1,f,c
  3044  00230E  2A0E               	incf	___lwmod@counter,f,c
  3045  002310                     l2909:
  3046  002310  AE0C               	btfss	___lwmod@divisor+1,7,c
  3047  002312  D7FA               	goto	l2907
  3048  002314                     l2911:
  3049  002314  500B               	movf	___lwmod@divisor,w,c
  3050  002316  5C09               	subwf	___lwmod@dividend,w,c
  3051  002318  500C               	movf	___lwmod@divisor+1,w,c
  3052  00231A  580A               	subwfb	___lwmod@dividend+1,w,c
  3053  00231C  A0D8               	btfss	status,0,c
  3054  00231E  D004               	goto	l2915
  3055  002320  500B               	movf	___lwmod@divisor,w,c
  3056  002322  5E09               	subwf	___lwmod@dividend,f,c
  3057  002324  500C               	movf	___lwmod@divisor+1,w,c
  3058  002326  5A0A               	subwfb	___lwmod@dividend+1,f,c
  3059  002328                     l2915:
  3060  002328  90D8               	bcf	status,0,c
  3061  00232A  320C               	rrcf	___lwmod@divisor+1,f,c
  3062  00232C  320B               	rrcf	___lwmod@divisor,f,c
  3063  00232E  2E0E               	decfsz	___lwmod@counter,f,c
  3064  002330  D7F1               	goto	l2911
  3065  002332                     l1001:
  3066  002332  C009  F009         	movff	___lwmod@dividend,?___lwmod
  3067  002336  C00A  F00A         	movff	___lwmod@dividend+1,?___lwmod+1
  3068  00233A  0012               	return	
  3069  00233C                     __end_of___lwmod:
  3070                           	opt stack 0
  3071                           tblptru	equ	0xFF8
  3072                           tblptrh	equ	0xFF7
  3073                           tblptrl	equ	0xFF6
  3074                           tablat	equ	0xFF5
  3075                           prodh	equ	0xFF4
  3076                           prodl	equ	0xFF3
  3077                           wreg	equ	0xFE8
  3078                           indf2	equ	0xFDF
  3079                           postinc2	equ	0xFDE
  3080                           postdec2	equ	0xFDD
  3081                           fsr2h	equ	0xFDA
  3082                           fsr2l	equ	0xFD9
  3083                           status	equ	0xFD8
  3084                           
  3085 ;; *************** function ___lwdiv *****************
  3086 ;; Defined at:
  3087 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lwdiv.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  dividend        2    0[COMRAM] unsigned int 
  3090 ;;  divisor         2    2[COMRAM] unsigned int 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  quotient        2    5[COMRAM] unsigned int 
  3093 ;;  counter         1    7[COMRAM] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  2    0[COMRAM] unsigned int 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3103 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;Total ram usage:        8 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; This function calls:
  3110 ;;		Nothing
  3111 ;; This function is called by:
  3112 ;;		_sprintf
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           	psect	text15
  3117  002202                     __ptext15:
  3118                           	opt stack 0
  3119  002202                     ___lwdiv:
  3120                           	opt stack 29
  3121                           
  3122                           ;incstack = 0
  3123                           ;incstack = 0
  3124  002202  0E00               	movlw	0
  3125  002204  6E07               	movwf	___lwdiv@quotient+1,c
  3126  002206  0E00               	movlw	0
  3127  002208  6E06               	movwf	___lwdiv@quotient,c
  3128  00220A  5004               	movf	___lwdiv@divisor+1,w,c
  3129  00220C  1003               	iorwf	___lwdiv@divisor,w,c
  3130  00220E  B4D8               	btfsc	status,2,c
  3131  002210  D01E               	goto	l991
  3132  002212  6E05               	movwf	??___lwdiv& (0+255),c
  3133  002214  0E01               	movlw	1
  3134  002216  6E08               	movwf	___lwdiv@counter,c
  3135  002218  5005               	movf	??___lwdiv& (0+255),w,c
  3136  00221A  D004               	goto	l2795
  3137  00221C                     l2793:
  3138  00221C  90D8               	bcf	status,0,c
  3139  00221E  3603               	rlcf	___lwdiv@divisor,f,c
  3140  002220  3604               	rlcf	___lwdiv@divisor+1,f,c
  3141  002222  2A08               	incf	___lwdiv@counter,f,c
  3142  002224                     l2795:
  3143  002224  AE04               	btfss	___lwdiv@divisor+1,7,c
  3144  002226  D7FA               	goto	l2793
  3145  002228                     l2797:
  3146  002228  90D8               	bcf	status,0,c
  3147  00222A  3606               	rlcf	___lwdiv@quotient,f,c
  3148  00222C  3607               	rlcf	___lwdiv@quotient+1,f,c
  3149  00222E  5003               	movf	___lwdiv@divisor,w,c
  3150  002230  5C01               	subwf	___lwdiv@dividend,w,c
  3151  002232  5004               	movf	___lwdiv@divisor+1,w,c
  3152  002234  5802               	subwfb	___lwdiv@dividend+1,w,c
  3153  002236  A0D8               	btfss	status,0,c
  3154  002238  D005               	goto	l2805
  3155  00223A  5003               	movf	___lwdiv@divisor,w,c
  3156  00223C  5E01               	subwf	___lwdiv@dividend,f,c
  3157  00223E  5004               	movf	___lwdiv@divisor+1,w,c
  3158  002240  5A02               	subwfb	___lwdiv@dividend+1,f,c
  3159  002242  8006               	bsf	___lwdiv@quotient,0,c
  3160  002244                     l2805:
  3161  002244  90D8               	bcf	status,0,c
  3162  002246  3204               	rrcf	___lwdiv@divisor+1,f,c
  3163  002248  3203               	rrcf	___lwdiv@divisor,f,c
  3164  00224A  2E08               	decfsz	___lwdiv@counter,f,c
  3165  00224C  D7ED               	goto	l2797
  3166  00224E                     l991:
  3167  00224E  C006  F001         	movff	___lwdiv@quotient,?___lwdiv
  3168  002252  C007  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3169  002256  0012               	return	
  3170  002258                     __end_of___lwdiv:
  3171                           	opt stack 0
  3172                           tblptru	equ	0xFF8
  3173                           tblptrh	equ	0xFF7
  3174                           tblptrl	equ	0xFF6
  3175                           tablat	equ	0xFF5
  3176                           prodh	equ	0xFF4
  3177                           prodl	equ	0xFF3
  3178                           wreg	equ	0xFE8
  3179                           indf2	equ	0xFDF
  3180                           postinc2	equ	0xFDE
  3181                           postdec2	equ	0xFDD
  3182                           fsr2h	equ	0xFDA
  3183                           fsr2l	equ	0xFD9
  3184                           status	equ	0xFD8
  3185                           
  3186 ;; *************** function _readLSM9_mag *****************
  3187 ;; Defined at:
  3188 ;;		line 181 in file "LSM9DS0.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  dest            2    7[COMRAM] PTR unsigned int 
  3191 ;;		 -> main@mag(6), 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;		None               void
  3196 ;; Registers used:
  3197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;Total ram usage:        8 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:    3
  3210 ;; This function calls:
  3211 ;;		_xmReadByte
  3212 ;; This function is called by:
  3213 ;;		_main
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           	psect	text16
  3218  001CC8                     __ptext16:
  3219                           	opt stack 0
  3220  001CC8                     _readLSM9_mag:
  3221                           	opt stack 27
  3222                           
  3223                           ;LSM9DS0.c: 183: dest[0] = (xmReadByte(0x09) << 8) | xmReadByte(0x08);
  3224                           
  3225                           ;incstack = 0
  3226                           ;incstack = 0
  3227  001CC8  6E0A               	movwf	??_readLSM9_mag& (0+255),c
  3228  001CCA  0E09               	movlw	9
  3229  001CCC  6E07               	movwf	?_xmReadByte,c
  3230  001CCE  500A               	movf	??_readLSM9_mag& (0+255),w,c
  3231  001CD0  ECB3  F012         	call	_xmReadByte	;wreg free
  3232  001CD4  6E0B               	movwf	(??_readLSM9_mag+1)& (0+255),c
  3233  001CD6  500B               	movf	??_readLSM9_mag+1,w,c
  3234  001CD8  6E0D               	movwf	(??_readLSM9_mag+3)& (0+255),c
  3235  001CDA  6A0C               	clrf	(??_readLSM9_mag+2)& (0+255),c
  3236  001CDC  6E0E               	movwf	(??_readLSM9_mag+4)& (0+255),c
  3237  001CDE  0E08               	movlw	8
  3238  001CE0  6E07               	movwf	?_xmReadByte,c
  3239  001CE2  500E               	movf	(??_readLSM9_mag+4)& (0+255),w,c
  3240  001CE4  ECB3  F012         	call	_xmReadByte	;wreg free
  3241  001CE8  6E0F               	movwf	(??_readLSM9_mag+5)& (0+255),c
  3242  001CEA  500F               	movf	??_readLSM9_mag+5,w,c
  3243  001CEC  120C               	iorwf	??_readLSM9_mag+2,f,c
  3244  001CEE  0E00               	movlw	0
  3245  001CF0  120D               	iorwf	??_readLSM9_mag+3,f,c
  3246  001CF2  C008  FFD9         	movff	readLSM9_mag@dest,fsr2l
  3247  001CF6  C009  FFDA         	movff	readLSM9_mag@dest+1,fsr2h
  3248  001CFA  C00C  FFDE         	movff	??_readLSM9_mag+2,postinc2
  3249  001CFE  C00D  FFDD         	movff	??_readLSM9_mag+3,postdec2
  3250                           
  3251                           ;LSM9DS0.c: 184: dest[1] = (xmReadByte(0x0B) << 8) | xmReadByte(0x0A);
  3252  001D02  6E0A               	movwf	??_readLSM9_mag& (0+255),c
  3253  001D04  0E0B               	movlw	11
  3254  001D06  6E07               	movwf	?_xmReadByte,c
  3255  001D08  500A               	movf	??_readLSM9_mag& (0+255),w,c
  3256  001D0A  ECB3  F012         	call	_xmReadByte	;wreg free
  3257  001D0E  6E0B               	movwf	(??_readLSM9_mag+1)& (0+255),c
  3258  001D10  500B               	movf	??_readLSM9_mag+1,w,c
  3259  001D12  6E0D               	movwf	(??_readLSM9_mag+3)& (0+255),c
  3260  001D14  6A0C               	clrf	(??_readLSM9_mag+2)& (0+255),c
  3261  001D16  6E0E               	movwf	(??_readLSM9_mag+4)& (0+255),c
  3262  001D18  0E0A               	movlw	10
  3263  001D1A  6E07               	movwf	?_xmReadByte,c
  3264  001D1C  500E               	movf	(??_readLSM9_mag+4)& (0+255),w,c
  3265  001D1E  ECB3  F012         	call	_xmReadByte	;wreg free
  3266  001D22  6E0F               	movwf	(??_readLSM9_mag+5)& (0+255),c
  3267  001D24  500F               	movf	??_readLSM9_mag+5,w,c
  3268  001D26  120C               	iorwf	??_readLSM9_mag+2,f,c
  3269  001D28  0E00               	movlw	0
  3270  001D2A  120D               	iorwf	??_readLSM9_mag+3,f,c
  3271  001D2C  EE20 F002          	lfsr	2,2
  3272  001D30  5008               	movf	readLSM9_mag@dest,w,c
  3273  001D32  26D9               	addwf	fsr2l,f,c
  3274  001D34  5009               	movf	readLSM9_mag@dest+1,w,c
  3275  001D36  22DA               	addwfc	fsr2h,f,c
  3276  001D38  C00C  FFDE         	movff	??_readLSM9_mag+2,postinc2
  3277  001D3C  C00D  FFDD         	movff	??_readLSM9_mag+3,postdec2
  3278                           
  3279                           ;LSM9DS0.c: 185: dest[2] = (xmReadByte(0x0D) << 8) | xmReadByte(0x0C);
  3280  001D40  6E0A               	movwf	??_readLSM9_mag& (0+255),c
  3281  001D42  0E0D               	movlw	13
  3282  001D44  6E07               	movwf	?_xmReadByte,c
  3283  001D46  500A               	movf	??_readLSM9_mag& (0+255),w,c
  3284  001D48  ECB3  F012         	call	_xmReadByte	;wreg free
  3285  001D4C  6E0B               	movwf	(??_readLSM9_mag+1)& (0+255),c
  3286  001D4E  500B               	movf	??_readLSM9_mag+1,w,c
  3287  001D50  6E0D               	movwf	(??_readLSM9_mag+3)& (0+255),c
  3288  001D52  6A0C               	clrf	(??_readLSM9_mag+2)& (0+255),c
  3289  001D54  6E0E               	movwf	(??_readLSM9_mag+4)& (0+255),c
  3290  001D56  0E0C               	movlw	12
  3291  001D58  6E07               	movwf	?_xmReadByte,c
  3292  001D5A  500E               	movf	(??_readLSM9_mag+4)& (0+255),w,c
  3293  001D5C  ECB3  F012         	call	_xmReadByte	;wreg free
  3294  001D60  6E0F               	movwf	(??_readLSM9_mag+5)& (0+255),c
  3295  001D62  500F               	movf	??_readLSM9_mag+5,w,c
  3296  001D64  120C               	iorwf	??_readLSM9_mag+2,f,c
  3297  001D66  0E00               	movlw	0
  3298  001D68  120D               	iorwf	??_readLSM9_mag+3,f,c
  3299  001D6A  EE20 F004          	lfsr	2,4
  3300  001D6E  5008               	movf	readLSM9_mag@dest,w,c
  3301  001D70  26D9               	addwf	fsr2l,f,c
  3302  001D72  5009               	movf	readLSM9_mag@dest+1,w,c
  3303  001D74  22DA               	addwfc	fsr2h,f,c
  3304  001D76  C00C  FFDE         	movff	??_readLSM9_mag+2,postinc2
  3305  001D7A  C00D  FFDD         	movff	??_readLSM9_mag+3,postdec2
  3306  001D7E  0012               	return	
  3307  001D80                     __end_of_readLSM9_mag:
  3308                           	opt stack 0
  3309                           tblptru	equ	0xFF8
  3310                           tblptrh	equ	0xFF7
  3311                           tblptrl	equ	0xFF6
  3312                           tablat	equ	0xFF5
  3313                           prodh	equ	0xFF4
  3314                           prodl	equ	0xFF3
  3315                           wreg	equ	0xFE8
  3316                           indf2	equ	0xFDF
  3317                           postinc2	equ	0xFDE
  3318                           postdec2	equ	0xFDD
  3319                           fsr2h	equ	0xFDA
  3320                           fsr2l	equ	0xFD9
  3321                           status	equ	0xFD8
  3322                           
  3323 ;; *************** function _readLSM9_gyro *****************
  3324 ;; Defined at:
  3325 ;;		line 188 in file "LSM9DS0.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  dest            2    7[COMRAM] PTR unsigned int 
  3328 ;;		 -> main@gyro(6), 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;		None
  3331 ;; Return value:  Size  Location     Type
  3332 ;;		None               void
  3333 ;; Registers used:
  3334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;Total ram usage:        8 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    3
  3347 ;; This function calls:
  3348 ;;		_gReadByte
  3349 ;; This function is called by:
  3350 ;;		_main
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text17
  3355  001D80                     __ptext17:
  3356                           	opt stack 0
  3357  001D80                     _readLSM9_gyro:
  3358                           	opt stack 27
  3359                           
  3360                           ;LSM9DS0.c: 190: dest[0] = (gReadByte(0x29) << 8) | gReadByte(0x28);
  3361                           
  3362                           ;incstack = 0
  3363                           ;incstack = 0
  3364  001D80  6E0A               	movwf	??_readLSM9_gyro& (0+255),c
  3365  001D82  0E29               	movlw	41
  3366  001D84  6E07               	movwf	?_gReadByte,c
  3367  001D86  500A               	movf	??_readLSM9_gyro& (0+255),w,c
  3368  001D88  ECA9  F012         	call	_gReadByte	;wreg free
  3369  001D8C  6E0B               	movwf	(??_readLSM9_gyro+1)& (0+255),c
  3370  001D8E  500B               	movf	??_readLSM9_gyro+1,w,c
  3371  001D90  6E0D               	movwf	(??_readLSM9_gyro+3)& (0+255),c
  3372  001D92  6A0C               	clrf	(??_readLSM9_gyro+2)& (0+255),c
  3373  001D94  6E0E               	movwf	(??_readLSM9_gyro+4)& (0+255),c
  3374  001D96  0E28               	movlw	40
  3375  001D98  6E07               	movwf	?_gReadByte,c
  3376  001D9A  500E               	movf	(??_readLSM9_gyro+4)& (0+255),w,c
  3377  001D9C  ECA9  F012         	call	_gReadByte	;wreg free
  3378  001DA0  6E0F               	movwf	(??_readLSM9_gyro+5)& (0+255),c
  3379  001DA2  500F               	movf	??_readLSM9_gyro+5,w,c
  3380  001DA4  120C               	iorwf	??_readLSM9_gyro+2,f,c
  3381  001DA6  0E00               	movlw	0
  3382  001DA8  120D               	iorwf	??_readLSM9_gyro+3,f,c
  3383  001DAA  C008  FFD9         	movff	readLSM9_gyro@dest,fsr2l
  3384  001DAE  C009  FFDA         	movff	readLSM9_gyro@dest+1,fsr2h
  3385  001DB2  C00C  FFDE         	movff	??_readLSM9_gyro+2,postinc2
  3386  001DB6  C00D  FFDD         	movff	??_readLSM9_gyro+3,postdec2
  3387                           
  3388                           ;LSM9DS0.c: 191: dest[1] = (gReadByte(0x2B) << 8) | gReadByte(0x2A);
  3389  001DBA  6E0A               	movwf	??_readLSM9_gyro& (0+255),c
  3390  001DBC  0E2B               	movlw	43
  3391  001DBE  6E07               	movwf	?_gReadByte,c
  3392  001DC0  500A               	movf	??_readLSM9_gyro& (0+255),w,c
  3393  001DC2  ECA9  F012         	call	_gReadByte	;wreg free
  3394  001DC6  6E0B               	movwf	(??_readLSM9_gyro+1)& (0+255),c
  3395  001DC8  500B               	movf	??_readLSM9_gyro+1,w,c
  3396  001DCA  6E0D               	movwf	(??_readLSM9_gyro+3)& (0+255),c
  3397  001DCC  6A0C               	clrf	(??_readLSM9_gyro+2)& (0+255),c
  3398  001DCE  6E0E               	movwf	(??_readLSM9_gyro+4)& (0+255),c
  3399  001DD0  0E2A               	movlw	42
  3400  001DD2  6E07               	movwf	?_gReadByte,c
  3401  001DD4  500E               	movf	(??_readLSM9_gyro+4)& (0+255),w,c
  3402  001DD6  ECA9  F012         	call	_gReadByte	;wreg free
  3403  001DDA  6E0F               	movwf	(??_readLSM9_gyro+5)& (0+255),c
  3404  001DDC  500F               	movf	??_readLSM9_gyro+5,w,c
  3405  001DDE  120C               	iorwf	??_readLSM9_gyro+2,f,c
  3406  001DE0  0E00               	movlw	0
  3407  001DE2  120D               	iorwf	??_readLSM9_gyro+3,f,c
  3408  001DE4  EE20 F002          	lfsr	2,2
  3409  001DE8  5008               	movf	readLSM9_gyro@dest,w,c
  3410  001DEA  26D9               	addwf	fsr2l,f,c
  3411  001DEC  5009               	movf	readLSM9_gyro@dest+1,w,c
  3412  001DEE  22DA               	addwfc	fsr2h,f,c
  3413  001DF0  C00C  FFDE         	movff	??_readLSM9_gyro+2,postinc2
  3414  001DF4  C00D  FFDD         	movff	??_readLSM9_gyro+3,postdec2
  3415                           
  3416                           ;LSM9DS0.c: 192: dest[2] = (gReadByte(0x2D) << 8) | gReadByte(0x2C);
  3417  001DF8  6E0A               	movwf	??_readLSM9_gyro& (0+255),c
  3418  001DFA  0E2D               	movlw	45
  3419  001DFC  6E07               	movwf	?_gReadByte,c
  3420  001DFE  500A               	movf	??_readLSM9_gyro& (0+255),w,c
  3421  001E00  ECA9  F012         	call	_gReadByte	;wreg free
  3422  001E04  6E0B               	movwf	(??_readLSM9_gyro+1)& (0+255),c
  3423  001E06  500B               	movf	??_readLSM9_gyro+1,w,c
  3424  001E08  6E0D               	movwf	(??_readLSM9_gyro+3)& (0+255),c
  3425  001E0A  6A0C               	clrf	(??_readLSM9_gyro+2)& (0+255),c
  3426  001E0C  6E0E               	movwf	(??_readLSM9_gyro+4)& (0+255),c
  3427  001E0E  0E2C               	movlw	44
  3428  001E10  6E07               	movwf	?_gReadByte,c
  3429  001E12  500E               	movf	(??_readLSM9_gyro+4)& (0+255),w,c
  3430  001E14  ECA9  F012         	call	_gReadByte	;wreg free
  3431  001E18  6E0F               	movwf	(??_readLSM9_gyro+5)& (0+255),c
  3432  001E1A  500F               	movf	??_readLSM9_gyro+5,w,c
  3433  001E1C  120C               	iorwf	??_readLSM9_gyro+2,f,c
  3434  001E1E  0E00               	movlw	0
  3435  001E20  120D               	iorwf	??_readLSM9_gyro+3,f,c
  3436  001E22  EE20 F004          	lfsr	2,4
  3437  001E26  5008               	movf	readLSM9_gyro@dest,w,c
  3438  001E28  26D9               	addwf	fsr2l,f,c
  3439  001E2A  5009               	movf	readLSM9_gyro@dest+1,w,c
  3440  001E2C  22DA               	addwfc	fsr2h,f,c
  3441  001E2E  C00C  FFDE         	movff	??_readLSM9_gyro+2,postinc2
  3442  001E32  C00D  FFDD         	movff	??_readLSM9_gyro+3,postdec2
  3443  001E36  0012               	return	
  3444  001E38                     __end_of_readLSM9_gyro:
  3445                           	opt stack 0
  3446                           tblptru	equ	0xFF8
  3447                           tblptrh	equ	0xFF7
  3448                           tblptrl	equ	0xFF6
  3449                           tablat	equ	0xFF5
  3450                           prodh	equ	0xFF4
  3451                           prodl	equ	0xFF3
  3452                           wreg	equ	0xFE8
  3453                           indf2	equ	0xFDF
  3454                           postinc2	equ	0xFDE
  3455                           postdec2	equ	0xFDD
  3456                           fsr2h	equ	0xFDA
  3457                           fsr2l	equ	0xFD9
  3458                           status	equ	0xFD8
  3459                           
  3460 ;; *************** function _readLSM9_accel *****************
  3461 ;; Defined at:
  3462 ;;		line 174 in file "LSM9DS0.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  dest            2    7[COMRAM] PTR unsigned int 
  3465 ;;		 -> main@accel(6), 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;		None               void
  3470 ;; Registers used:
  3471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3477 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;Total ram usage:        8 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    3
  3484 ;; This function calls:
  3485 ;;		_xmReadByte
  3486 ;; This function is called by:
  3487 ;;		_main
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text18
  3492  001E38                     __ptext18:
  3493                           	opt stack 0
  3494  001E38                     _readLSM9_accel:
  3495                           	opt stack 27
  3496                           
  3497                           ;LSM9DS0.c: 176: dest[0] = (xmReadByte(0x29) << 8) | xmReadByte(0x28);
  3498                           
  3499                           ;incstack = 0
  3500                           ;incstack = 0
  3501  001E38  6E0A               	movwf	??_readLSM9_accel& (0+255),c
  3502  001E3A  0E29               	movlw	41
  3503  001E3C  6E07               	movwf	?_xmReadByte,c
  3504  001E3E  500A               	movf	??_readLSM9_accel& (0+255),w,c
  3505  001E40  ECB3  F012         	call	_xmReadByte	;wreg free
  3506  001E44  6E0B               	movwf	(??_readLSM9_accel+1)& (0+255),c
  3507  001E46  500B               	movf	??_readLSM9_accel+1,w,c
  3508  001E48  6E0D               	movwf	(??_readLSM9_accel+3)& (0+255),c
  3509  001E4A  6A0C               	clrf	(??_readLSM9_accel+2)& (0+255),c
  3510  001E4C  6E0E               	movwf	(??_readLSM9_accel+4)& (0+255),c
  3511  001E4E  0E28               	movlw	40
  3512  001E50  6E07               	movwf	?_xmReadByte,c
  3513  001E52  500E               	movf	(??_readLSM9_accel+4)& (0+255),w,c
  3514  001E54  ECB3  F012         	call	_xmReadByte	;wreg free
  3515  001E58  6E0F               	movwf	(??_readLSM9_accel+5)& (0+255),c
  3516  001E5A  500F               	movf	??_readLSM9_accel+5,w,c
  3517  001E5C  120C               	iorwf	??_readLSM9_accel+2,f,c
  3518  001E5E  0E00               	movlw	0
  3519  001E60  120D               	iorwf	??_readLSM9_accel+3,f,c
  3520  001E62  C008  FFD9         	movff	readLSM9_accel@dest,fsr2l
  3521  001E66  C009  FFDA         	movff	readLSM9_accel@dest+1,fsr2h
  3522  001E6A  C00C  FFDE         	movff	??_readLSM9_accel+2,postinc2
  3523  001E6E  C00D  FFDD         	movff	??_readLSM9_accel+3,postdec2
  3524                           
  3525                           ;LSM9DS0.c: 177: dest[1] = (xmReadByte(0x2B) << 8) | xmReadByte(0x2A);
  3526  001E72  6E0A               	movwf	??_readLSM9_accel& (0+255),c
  3527  001E74  0E2B               	movlw	43
  3528  001E76  6E07               	movwf	?_xmReadByte,c
  3529  001E78  500A               	movf	??_readLSM9_accel& (0+255),w,c
  3530  001E7A  ECB3  F012         	call	_xmReadByte	;wreg free
  3531  001E7E  6E0B               	movwf	(??_readLSM9_accel+1)& (0+255),c
  3532  001E80  500B               	movf	??_readLSM9_accel+1,w,c
  3533  001E82  6E0D               	movwf	(??_readLSM9_accel+3)& (0+255),c
  3534  001E84  6A0C               	clrf	(??_readLSM9_accel+2)& (0+255),c
  3535  001E86  6E0E               	movwf	(??_readLSM9_accel+4)& (0+255),c
  3536  001E88  0E2A               	movlw	42
  3537  001E8A  6E07               	movwf	?_xmReadByte,c
  3538  001E8C  500E               	movf	(??_readLSM9_accel+4)& (0+255),w,c
  3539  001E8E  ECB3  F012         	call	_xmReadByte	;wreg free
  3540  001E92  6E0F               	movwf	(??_readLSM9_accel+5)& (0+255),c
  3541  001E94  500F               	movf	??_readLSM9_accel+5,w,c
  3542  001E96  120C               	iorwf	??_readLSM9_accel+2,f,c
  3543  001E98  0E00               	movlw	0
  3544  001E9A  120D               	iorwf	??_readLSM9_accel+3,f,c
  3545  001E9C  EE20 F002          	lfsr	2,2
  3546  001EA0  5008               	movf	readLSM9_accel@dest,w,c
  3547  001EA2  26D9               	addwf	fsr2l,f,c
  3548  001EA4  5009               	movf	readLSM9_accel@dest+1,w,c
  3549  001EA6  22DA               	addwfc	fsr2h,f,c
  3550  001EA8  C00C  FFDE         	movff	??_readLSM9_accel+2,postinc2
  3551  001EAC  C00D  FFDD         	movff	??_readLSM9_accel+3,postdec2
  3552                           
  3553                           ;LSM9DS0.c: 178: dest[2] = (xmReadByte(0x2D) << 8) | xmReadByte(0x2C);
  3554  001EB0  6E0A               	movwf	??_readLSM9_accel& (0+255),c
  3555  001EB2  0E2D               	movlw	45
  3556  001EB4  6E07               	movwf	?_xmReadByte,c
  3557  001EB6  500A               	movf	??_readLSM9_accel& (0+255),w,c
  3558  001EB8  ECB3  F012         	call	_xmReadByte	;wreg free
  3559  001EBC  6E0B               	movwf	(??_readLSM9_accel+1)& (0+255),c
  3560  001EBE  500B               	movf	??_readLSM9_accel+1,w,c
  3561  001EC0  6E0D               	movwf	(??_readLSM9_accel+3)& (0+255),c
  3562  001EC2  6A0C               	clrf	(??_readLSM9_accel+2)& (0+255),c
  3563  001EC4  6E0E               	movwf	(??_readLSM9_accel+4)& (0+255),c
  3564  001EC6  0E2C               	movlw	44
  3565  001EC8  6E07               	movwf	?_xmReadByte,c
  3566  001ECA  500E               	movf	(??_readLSM9_accel+4)& (0+255),w,c
  3567  001ECC  ECB3  F012         	call	_xmReadByte	;wreg free
  3568  001ED0  6E0F               	movwf	(??_readLSM9_accel+5)& (0+255),c
  3569  001ED2  500F               	movf	??_readLSM9_accel+5,w,c
  3570  001ED4  120C               	iorwf	??_readLSM9_accel+2,f,c
  3571  001ED6  0E00               	movlw	0
  3572  001ED8  120D               	iorwf	??_readLSM9_accel+3,f,c
  3573  001EDA  EE20 F004          	lfsr	2,4
  3574  001EDE  5008               	movf	readLSM9_accel@dest,w,c
  3575  001EE0  26D9               	addwf	fsr2l,f,c
  3576  001EE2  5009               	movf	readLSM9_accel@dest+1,w,c
  3577  001EE4  22DA               	addwfc	fsr2h,f,c
  3578  001EE6  C00C  FFDE         	movff	??_readLSM9_accel+2,postinc2
  3579  001EEA  C00D  FFDD         	movff	??_readLSM9_accel+3,postdec2
  3580  001EEE  0012               	return	
  3581  001EF0                     __end_of_readLSM9_accel:
  3582                           	opt stack 0
  3583                           tblptru	equ	0xFF8
  3584                           tblptrh	equ	0xFF7
  3585                           tblptrl	equ	0xFF6
  3586                           tablat	equ	0xFF5
  3587                           prodh	equ	0xFF4
  3588                           prodl	equ	0xFF3
  3589                           wreg	equ	0xFE8
  3590                           indf2	equ	0xFDF
  3591                           postinc2	equ	0xFDE
  3592                           postdec2	equ	0xFDD
  3593                           fsr2h	equ	0xFDA
  3594                           fsr2l	equ	0xFD9
  3595                           status	equ	0xFD8
  3596                           
  3597 ;; *************** function _openLSM9 *****************
  3598 ;; Defined at:
  3599 ;;		line 5 in file "LSM9DS0.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  _xmadd          1    7[COMRAM] unsigned char 
  3602 ;;  _gadd           1    8[COMRAM] unsigned char 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  xmtest          1   12[COMRAM] unsigned char 
  3605 ;;  gtest           1   11[COMRAM] unsigned char 
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  2    7[COMRAM] unsigned int 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2, status,0, cstack
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3617 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;Total ram usage:        6 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; Hardware stack levels required when called:    3
  3622 ;; This function calls:
  3623 ;;		_xmReadByte
  3624 ;;		_gReadByte
  3625 ;;		_openLSM9_accel
  3626 ;;		_openLSM9_gyro
  3627 ;;		_openLSM9_mag
  3628 ;; This function is called by:
  3629 ;;		_main
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           	psect	text19
  3634  002148                     __ptext19:
  3635                           	opt stack 0
  3636  002148                     _openLSM9:
  3637                           	opt stack 27
  3638                           
  3639                           ;LSM9DS0.c: 6: char gtest=0,xmtest=0;
  3640                           
  3641                           ;incstack = 0
  3642                           ;incstack = 0
  3643  002148  6E0A               	movwf	??_openLSM9& (0+255),c
  3644  00214A  0E00               	movlw	0
  3645  00214C  6E0C               	movwf	openLSM9@gtest,c
  3646  00214E  500A               	movf	??_openLSM9& (0+255),w,c
  3647  002150  6E0A               	movwf	??_openLSM9& (0+255),c
  3648  002152  0E00               	movlw	0
  3649  002154  6E0D               	movwf	openLSM9@xmtest,c
  3650  002156  500A               	movf	??_openLSM9& (0+255),w,c
  3651                           
  3652                           ;LSM9DS0.c: 8: _xmaddress=_xmadd<<1;
  3653  002158  5008               	movf	openLSM9@_xmadd,w,c
  3654  00215A  2408               	addwf	openLSM9@_xmadd,w,c
  3655  00215C  0100               	movlb	0	; () banked
  3656  00215E  0100               	movlb	0	; () banked
  3657  002160  6FBD               	movwf	__xmaddress& (0+255),b
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;LSM9DS0.c: 9: _gaddress=_gadd<<1;
  3661  002162  5009               	movf	openLSM9@_gadd,w,c
  3662  002164  2409               	addwf	openLSM9@_gadd,w,c
  3663  002166  0100               	movlb	0	; () banked
  3664  002168  0100               	movlb	0	; () banked
  3665  00216A  6FBC               	movwf	__gaddress& (0+255),b
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;LSM9DS0.c: 11: xmtest = xmReadByte(0x0F);
  3669  00216C  6E0A               	movwf	??_openLSM9& (0+255),c
  3670  00216E  0E0F               	movlw	15
  3671  002170  6E07               	movwf	?_xmReadByte,c
  3672  002172  500A               	movf	??_openLSM9& (0+255),w,c
  3673  002174  ECB3  F012         	call	_xmReadByte	;wreg free
  3674  002178  6E0D               	movwf	openLSM9@xmtest,c
  3675                           
  3676                           ;LSM9DS0.c: 12: gtest = gReadByte(0x0F);
  3677  00217A  6E0A               	movwf	??_openLSM9& (0+255),c
  3678  00217C  0E0F               	movlw	15
  3679  00217E  6E07               	movwf	?_gReadByte,c
  3680  002180  500A               	movf	??_openLSM9& (0+255),w,c
  3681  002182  ECA9  F012         	call	_gReadByte	;wreg free
  3682  002186  6E0C               	movwf	openLSM9@gtest,c
  3683                           
  3684                           ;LSM9DS0.c: 14: openLSM9_accel();
  3685  002188  EC2C  F011         	call	_openLSM9_accel	;wreg free
  3686                           
  3687                           ;LSM9DS0.c: 15: openLSM9_gyro();
  3688  00218C  EC71  F010         	call	_openLSM9_gyro	;wreg free
  3689                           
  3690                           ;LSM9DS0.c: 16: openLSM9_mag();
  3691  002190  EC3E  F010         	call	_openLSM9_mag	;wreg free
  3692                           
  3693                           ;LSM9DS0.c: 18: return (xmtest<<8)+gtest;
  3694  002194  500D               	movf	openLSM9@xmtest,w,c
  3695  002196  6E0B               	movwf	(??_openLSM9+1)& (0+255),c
  3696  002198  6A0A               	clrf	??_openLSM9& (0+255),c
  3697  00219A  500C               	movf	openLSM9@gtest,w,c
  3698  00219C  240A               	addwf	??_openLSM9,w,c
  3699  00219E  6E08               	movwf	?_openLSM9,c
  3700  0021A0  0E00               	movlw	0
  3701  0021A2  200B               	addwfc	??_openLSM9+1,w,c
  3702  0021A4  6E09               	movwf	?_openLSM9+1,c
  3703  0021A6  0012               	return	
  3704  0021A8                     __end_of_openLSM9:
  3705                           	opt stack 0
  3706                           tblptru	equ	0xFF8
  3707                           tblptrh	equ	0xFF7
  3708                           tblptrl	equ	0xFF6
  3709                           tablat	equ	0xFF5
  3710                           prodh	equ	0xFF4
  3711                           prodl	equ	0xFF3
  3712                           wreg	equ	0xFE8
  3713                           indf2	equ	0xFDF
  3714                           postinc2	equ	0xFDE
  3715                           postdec2	equ	0xFDD
  3716                           fsr2h	equ	0xFDA
  3717                           fsr2l	equ	0xFD9
  3718                           status	equ	0xFD8
  3719                           
  3720 ;; *************** function _openLSM9_mag *****************
  3721 ;; Defined at:
  3722 ;;		line 121 in file "LSM9DS0.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;		None
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;		None
  3727 ;; Return value:  Size  Location     Type
  3728 ;;		None               void
  3729 ;; Registers used:
  3730 ;;		wreg, status,2, status,0, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3740 ;;Total ram usage:        2 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    2
  3743 ;; This function calls:
  3744 ;;		_xmWriteByte
  3745 ;; This function is called by:
  3746 ;;		_openLSM9
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text20
  3751  00207C                     __ptext20:
  3752                           	opt stack 0
  3753  00207C                     _openLSM9_mag:
  3754                           	opt stack 27
  3755                           
  3756                           ;LSM9DS0.c: 132: xmWriteByte(0x24, 0b00010100);
  3757                           
  3758                           ;incstack = 0
  3759                           ;incstack = 0
  3760  00207C  6E05               	movwf	??_openLSM9_mag& (0+255),c
  3761  00207E  0E24               	movlw	36
  3762  002080  6E03               	movwf	?_xmWriteByte,c
  3763  002082  5005               	movf	??_openLSM9_mag& (0+255),w,c
  3764  002084  6E06               	movwf	(??_openLSM9_mag+1)& (0+255),c
  3765  002086  0E14               	movlw	20
  3766  002088  6E04               	movwf	?_xmWriteByte+1,c
  3767  00208A  5006               	movf	(??_openLSM9_mag+1)& (0+255),w,c
  3768  00208C  EC5F  F012         	call	_xmWriteByte	;wreg free
  3769                           
  3770                           ;LSM9DS0.c: 138: xmWriteByte(0x25, 0x01);
  3771  002090  6E05               	movwf	??_openLSM9_mag& (0+255),c
  3772  002092  0E25               	movlw	37
  3773  002094  6E03               	movwf	?_xmWriteByte,c
  3774  002096  5005               	movf	??_openLSM9_mag& (0+255),w,c
  3775  002098  6E06               	movwf	(??_openLSM9_mag+1)& (0+255),c
  3776  00209A  0E01               	movlw	1
  3777  00209C  6E04               	movwf	?_xmWriteByte+1,c
  3778  00209E  5006               	movf	(??_openLSM9_mag+1)& (0+255),w,c
  3779  0020A0  EC5F  F012         	call	_xmWriteByte	;wreg free
  3780                           
  3781                           ;LSM9DS0.c: 152: xmWriteByte(0x26, 0b00000000);
  3782  0020A4  6E05               	movwf	??_openLSM9_mag& (0+255),c
  3783  0020A6  0E26               	movlw	38
  3784  0020A8  6E03               	movwf	?_xmWriteByte,c
  3785  0020AA  5005               	movf	??_openLSM9_mag& (0+255),w,c
  3786  0020AC  6E06               	movwf	(??_openLSM9_mag+1)& (0+255),c
  3787  0020AE  0E00               	movlw	0
  3788  0020B0  6E04               	movwf	?_xmWriteByte+1,c
  3789  0020B2  5006               	movf	(??_openLSM9_mag+1)& (0+255),w,c
  3790  0020B4  EC5F  F012         	call	_xmWriteByte	;wreg free
  3791                           
  3792                           ;LSM9DS0.c: 157: xmWriteByte(0x23, 0x04);
  3793  0020B8  6E05               	movwf	??_openLSM9_mag& (0+255),c
  3794  0020BA  0E23               	movlw	35
  3795  0020BC  6E03               	movwf	?_xmWriteByte,c
  3796  0020BE  5005               	movf	??_openLSM9_mag& (0+255),w,c
  3797  0020C0  6E06               	movwf	(??_openLSM9_mag+1)& (0+255),c
  3798  0020C2  0E04               	movlw	4
  3799  0020C4  6E04               	movwf	?_xmWriteByte+1,c
  3800  0020C6  5006               	movf	(??_openLSM9_mag+1)& (0+255),w,c
  3801  0020C8  EC5F  F012         	call	_xmWriteByte	;wreg free
  3802                           
  3803                           ;LSM9DS0.c: 170: xmWriteByte(0x12, 0x09);
  3804  0020CC  6E05               	movwf	??_openLSM9_mag& (0+255),c
  3805  0020CE  0E12               	movlw	18
  3806  0020D0  6E03               	movwf	?_xmWriteByte,c
  3807  0020D2  5005               	movf	??_openLSM9_mag& (0+255),w,c
  3808  0020D4  6E06               	movwf	(??_openLSM9_mag+1)& (0+255),c
  3809  0020D6  0E09               	movlw	9
  3810  0020D8  6E04               	movwf	?_xmWriteByte+1,c
  3811  0020DA  5006               	movf	(??_openLSM9_mag+1)& (0+255),w,c
  3812  0020DC  EC5F  F012         	call	_xmWriteByte	;wreg free
  3813  0020E0  0012               	return	
  3814  0020E2                     __end_of_openLSM9_mag:
  3815                           	opt stack 0
  3816                           tblptru	equ	0xFF8
  3817                           tblptrh	equ	0xFF7
  3818                           tblptrl	equ	0xFF6
  3819                           tablat	equ	0xFF5
  3820                           prodh	equ	0xFF4
  3821                           prodl	equ	0xFF3
  3822                           wreg	equ	0xFE8
  3823                           indf2	equ	0xFDF
  3824                           postinc2	equ	0xFDE
  3825                           postdec2	equ	0xFDD
  3826                           fsr2h	equ	0xFDA
  3827                           fsr2l	equ	0xFD9
  3828                           status	equ	0xFD8
  3829                           
  3830 ;; *************** function _openLSM9_gyro *****************
  3831 ;; Defined at:
  3832 ;;		line 64 in file "LSM9DS0.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;		None
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;		None               void
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;Total ram usage:        2 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:    2
  3853 ;; This function calls:
  3854 ;;		_gWriteByte
  3855 ;; This function is called by:
  3856 ;;		_openLSM9
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text21
  3861  0020E2                     __ptext21:
  3862                           	opt stack 0
  3863  0020E2                     _openLSM9_gyro:
  3864                           	opt stack 27
  3865                           
  3866                           ;LSM9DS0.c: 73: gWriteByte(0x20, 0x0F);
  3867                           
  3868                           ;incstack = 0
  3869                           ;incstack = 0
  3870  0020E2  6E05               	movwf	??_openLSM9_gyro& (0+255),c
  3871  0020E4  0E20               	movlw	32
  3872  0020E6  6E03               	movwf	?_gWriteByte,c
  3873  0020E8  5005               	movf	??_openLSM9_gyro& (0+255),w,c
  3874  0020EA  6E06               	movwf	(??_openLSM9_gyro+1)& (0+255),c
  3875  0020EC  0E0F               	movlw	15
  3876  0020EE  6E04               	movwf	?_gWriteByte+1,c
  3877  0020F0  5006               	movf	(??_openLSM9_gyro+1)& (0+255),w,c
  3878  0020F2  EC4C  F012         	call	_gWriteByte	;wreg free
  3879                           
  3880                           ;LSM9DS0.c: 83: gWriteByte(0x21, 0x00);
  3881  0020F6  6E05               	movwf	??_openLSM9_gyro& (0+255),c
  3882  0020F8  0E21               	movlw	33
  3883  0020FA  6E03               	movwf	?_gWriteByte,c
  3884  0020FC  5005               	movf	??_openLSM9_gyro& (0+255),w,c
  3885  0020FE  6E06               	movwf	(??_openLSM9_gyro+1)& (0+255),c
  3886  002100  0E00               	movlw	0
  3887  002102  6E04               	movwf	?_gWriteByte+1,c
  3888  002104  5006               	movf	(??_openLSM9_gyro+1)& (0+255),w,c
  3889  002106  EC4C  F012         	call	_gWriteByte	;wreg free
  3890                           
  3891                           ;LSM9DS0.c: 96: gWriteByte(0x22, 0x88);
  3892  00210A  6E05               	movwf	??_openLSM9_gyro& (0+255),c
  3893  00210C  0E22               	movlw	34
  3894  00210E  6E03               	movwf	?_gWriteByte,c
  3895  002110  5005               	movf	??_openLSM9_gyro& (0+255),w,c
  3896  002112  6E06               	movwf	(??_openLSM9_gyro+1)& (0+255),c
  3897  002114  0E88               	movlw	136
  3898  002116  6E04               	movwf	?_gWriteByte+1,c
  3899  002118  5006               	movf	(??_openLSM9_gyro+1)& (0+255),w,c
  3900  00211A  EC4C  F012         	call	_gWriteByte	;wreg free
  3901                           
  3902                           ;LSM9DS0.c: 108: gWriteByte(0x23, 0x00);
  3903  00211E  6E05               	movwf	??_openLSM9_gyro& (0+255),c
  3904  002120  0E23               	movlw	35
  3905  002122  6E03               	movwf	?_gWriteByte,c
  3906  002124  5005               	movf	??_openLSM9_gyro& (0+255),w,c
  3907  002126  6E06               	movwf	(??_openLSM9_gyro+1)& (0+255),c
  3908  002128  0E00               	movlw	0
  3909  00212A  6E04               	movwf	?_gWriteByte+1,c
  3910  00212C  5006               	movf	(??_openLSM9_gyro+1)& (0+255),w,c
  3911  00212E  EC4C  F012         	call	_gWriteByte	;wreg free
  3912                           
  3913                           ;LSM9DS0.c: 117: gWriteByte(0x24, 0x00);
  3914  002132  6E05               	movwf	??_openLSM9_gyro& (0+255),c
  3915  002134  0E24               	movlw	36
  3916  002136  6E03               	movwf	?_gWriteByte,c
  3917  002138  5005               	movf	??_openLSM9_gyro& (0+255),w,c
  3918  00213A  6E06               	movwf	(??_openLSM9_gyro+1)& (0+255),c
  3919  00213C  0E00               	movlw	0
  3920  00213E  6E04               	movwf	?_gWriteByte+1,c
  3921  002140  5006               	movf	(??_openLSM9_gyro+1)& (0+255),w,c
  3922  002142  EC4C  F012         	call	_gWriteByte	;wreg free
  3923  002146  0012               	return	
  3924  002148                     __end_of_openLSM9_gyro:
  3925                           	opt stack 0
  3926                           tblptru	equ	0xFF8
  3927                           tblptrh	equ	0xFF7
  3928                           tblptrl	equ	0xFF6
  3929                           tablat	equ	0xFF5
  3930                           prodh	equ	0xFF4
  3931                           prodl	equ	0xFF3
  3932                           wreg	equ	0xFE8
  3933                           indf2	equ	0xFDF
  3934                           postinc2	equ	0xFDE
  3935                           postdec2	equ	0xFDD
  3936                           fsr2h	equ	0xFDA
  3937                           fsr2l	equ	0xFD9
  3938                           status	equ	0xFD8
  3939                           
  3940 ;; *************** function _gWriteByte *****************
  3941 ;; Defined at:
  3942 ;;		line 242 in file "LSM9DS0.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  subadd          1    2[COMRAM] unsigned char 
  3945 ;;  data            1    3[COMRAM] unsigned char 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;		None               void
  3950 ;; Registers used:
  3951 ;;		wreg, status,2, status,0, cstack
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3961 ;;Total ram usage:        2 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    1
  3964 ;; This function calls:
  3965 ;;		_WriteI2C1
  3966 ;; This function is called by:
  3967 ;;		_openLSM9_gyro
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           	psect	text22
  3972  002498                     __ptext22:
  3973                           	opt stack 0
  3974  002498                     _gWriteByte:
  3975                           	opt stack 27
  3976                           
  3977                           ;LSM9DS0.c: 243: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  3978                           
  3979                           ;incstack = 0
  3980                           ;incstack = 0
  3981  002498  80C5               	bsf	4037,0,c	;volatile
  3982  00249A                     l145:
  3983  00249A  B0C5               	btfsc	4037,0,c	;volatile
  3984  00249C  D7FE               	goto	l145
  3985                           
  3986                           ;LSM9DS0.c: 244: WriteI2C1(_gaddress);
  3987  00249E  C0BC  F001         	movff	__gaddress,?_WriteI2C1
  3988  0024A2  EC08  F010         	call	_WriteI2C1	;wreg free
  3989                           
  3990                           ;LSM9DS0.c: 246: WriteI2C1(subadd);
  3991  0024A6  C003  F001         	movff	gWriteByte@subadd,?_WriteI2C1
  3992  0024AA  EC08  F010         	call	_WriteI2C1	;wreg free
  3993                           
  3994                           ;LSM9DS0.c: 248: WriteI2C1(data);
  3995  0024AE  C004  F001         	movff	gWriteByte@data,?_WriteI2C1
  3996  0024B2  EC08  F010         	call	_WriteI2C1	;wreg free
  3997                           
  3998                           ;LSM9DS0.c: 250: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  3999  0024B6  84C5               	bsf	4037,2,c	;volatile
  4000  0024B8                     l148:
  4001  0024B8  A4C5               	btfss	4037,2,c	;volatile
  4002  0024BA  0012               	return	
  4003  0024BC  D7FD               	goto	l148
  4004  0024BE                     __end_of_gWriteByte:
  4005                           	opt stack 0
  4006                           tblptru	equ	0xFF8
  4007                           tblptrh	equ	0xFF7
  4008                           tblptrl	equ	0xFF6
  4009                           tablat	equ	0xFF5
  4010                           prodh	equ	0xFF4
  4011                           prodl	equ	0xFF3
  4012                           wreg	equ	0xFE8
  4013                           indf2	equ	0xFDF
  4014                           postinc2	equ	0xFDE
  4015                           postdec2	equ	0xFDD
  4016                           fsr2h	equ	0xFDA
  4017                           fsr2l	equ	0xFD9
  4018                           status	equ	0xFD8
  4019                           
  4020 ;; *************** function _openLSM9_accel *****************
  4021 ;; Defined at:
  4022 ;;		line 22 in file "LSM9DS0.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;		None
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;		None               void
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4040 ;;Total ram usage:        2 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; Hardware stack levels required when called:    2
  4043 ;; This function calls:
  4044 ;;		_xmWriteByte
  4045 ;; This function is called by:
  4046 ;;		_openLSM9
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text23
  4051  002258                     __ptext23:
  4052                           	opt stack 0
  4053  002258                     _openLSM9_accel:
  4054                           	opt stack 27
  4055                           
  4056                           ;LSM9DS0.c: 31: xmWriteByte(0x1F, 0x00);
  4057                           
  4058                           ;incstack = 0
  4059                           ;incstack = 0
  4060  002258  6E05               	movwf	??_openLSM9_accel& (0+255),c
  4061  00225A  0E1F               	movlw	31
  4062  00225C  6E03               	movwf	?_xmWriteByte,c
  4063  00225E  5005               	movf	??_openLSM9_accel& (0+255),w,c
  4064  002260  6E06               	movwf	(??_openLSM9_accel+1)& (0+255),c
  4065  002262  0E00               	movlw	0
  4066  002264  6E04               	movwf	?_xmWriteByte+1,c
  4067  002266  5006               	movf	(??_openLSM9_accel+1)& (0+255),w,c
  4068  002268  EC5F  F012         	call	_xmWriteByte	;wreg free
  4069                           
  4070                           ;LSM9DS0.c: 44: xmWriteByte(0x20,0b10010111 );
  4071  00226C  6E05               	movwf	??_openLSM9_accel& (0+255),c
  4072  00226E  0E20               	movlw	32
  4073  002270  6E03               	movwf	?_xmWriteByte,c
  4074  002272  5005               	movf	??_openLSM9_accel& (0+255),w,c
  4075  002274  6E06               	movwf	(??_openLSM9_accel+1)& (0+255),c
  4076  002276  0E97               	movlw	151
  4077  002278  6E04               	movwf	?_xmWriteByte+1,c
  4078  00227A  5006               	movf	(??_openLSM9_accel+1)& (0+255),w,c
  4079  00227C  EC5F  F012         	call	_xmWriteByte	;wreg free
  4080                           
  4081                           ;LSM9DS0.c: 57: xmWriteByte(0x21, 0b11010000);
  4082  002280  6E05               	movwf	??_openLSM9_accel& (0+255),c
  4083  002282  0E21               	movlw	33
  4084  002284  6E03               	movwf	?_xmWriteByte,c
  4085  002286  5005               	movf	??_openLSM9_accel& (0+255),w,c
  4086  002288  6E06               	movwf	(??_openLSM9_accel+1)& (0+255),c
  4087  00228A  0ED0               	movlw	208
  4088  00228C  6E04               	movwf	?_xmWriteByte+1,c
  4089  00228E  5006               	movf	(??_openLSM9_accel+1)& (0+255),w,c
  4090  002290  EC5F  F012         	call	_xmWriteByte	;wreg free
  4091                           
  4092                           ;LSM9DS0.c: 60: xmWriteByte(0x22, 0x04);
  4093  002294  6E05               	movwf	??_openLSM9_accel& (0+255),c
  4094  002296  0E22               	movlw	34
  4095  002298  6E03               	movwf	?_xmWriteByte,c
  4096  00229A  5005               	movf	??_openLSM9_accel& (0+255),w,c
  4097  00229C  6E06               	movwf	(??_openLSM9_accel+1)& (0+255),c
  4098  00229E  0E04               	movlw	4
  4099  0022A0  6E04               	movwf	?_xmWriteByte+1,c
  4100  0022A2  5006               	movf	(??_openLSM9_accel+1)& (0+255),w,c
  4101  0022A4  EC5F  F012         	call	_xmWriteByte	;wreg free
  4102  0022A8  0012               	return	
  4103  0022AA                     __end_of_openLSM9_accel:
  4104                           	opt stack 0
  4105                           tblptru	equ	0xFF8
  4106                           tblptrh	equ	0xFF7
  4107                           tblptrl	equ	0xFF6
  4108                           tablat	equ	0xFF5
  4109                           prodh	equ	0xFF4
  4110                           prodl	equ	0xFF3
  4111                           wreg	equ	0xFE8
  4112                           indf2	equ	0xFDF
  4113                           postinc2	equ	0xFDE
  4114                           postdec2	equ	0xFDD
  4115                           fsr2h	equ	0xFDA
  4116                           fsr2l	equ	0xFD9
  4117                           status	equ	0xFD8
  4118                           
  4119 ;; *************** function _xmWriteByte *****************
  4120 ;; Defined at:
  4121 ;;		line 253 in file "LSM9DS0.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  subadd          1    2[COMRAM] unsigned char 
  4124 ;;  data            1    3[COMRAM] unsigned char 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;		None               void
  4129 ;; Registers used:
  4130 ;;		wreg, status,2, status,0, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4140 ;;Total ram usage:        2 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:    1
  4143 ;; This function calls:
  4144 ;;		_WriteI2C1
  4145 ;; This function is called by:
  4146 ;;		_openLSM9_accel
  4147 ;;		_openLSM9_mag
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text24
  4152  0024BE                     __ptext24:
  4153                           	opt stack 0
  4154  0024BE                     _xmWriteByte:
  4155                           	opt stack 27
  4156                           
  4157                           ;LSM9DS0.c: 254: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  4158                           
  4159                           ;incstack = 0
  4160                           ;incstack = 0
  4161  0024BE  80C5               	bsf	4037,0,c	;volatile
  4162  0024C0                     l154:
  4163  0024C0  B0C5               	btfsc	4037,0,c	;volatile
  4164  0024C2  D7FE               	goto	l154
  4165                           
  4166                           ;LSM9DS0.c: 255: WriteI2C1(_xmaddress);
  4167  0024C4  C0BD  F001         	movff	__xmaddress,?_WriteI2C1
  4168  0024C8  EC08  F010         	call	_WriteI2C1	;wreg free
  4169                           
  4170                           ;LSM9DS0.c: 257: WriteI2C1(subadd);
  4171  0024CC  C003  F001         	movff	xmWriteByte@subadd,?_WriteI2C1
  4172  0024D0  EC08  F010         	call	_WriteI2C1	;wreg free
  4173                           
  4174                           ;LSM9DS0.c: 259: WriteI2C1(data);
  4175  0024D4  C004  F001         	movff	xmWriteByte@data,?_WriteI2C1
  4176  0024D8  EC08  F010         	call	_WriteI2C1	;wreg free
  4177                           
  4178                           ;LSM9DS0.c: 261: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  4179  0024DC  84C5               	bsf	4037,2,c	;volatile
  4180  0024DE                     l157:
  4181  0024DE  A4C5               	btfss	4037,2,c	;volatile
  4182  0024E0  0012               	return	
  4183  0024E2  D7FD               	goto	l157
  4184  0024E4                     __end_of_xmWriteByte:
  4185                           	opt stack 0
  4186                           tblptru	equ	0xFF8
  4187                           tblptrh	equ	0xFF7
  4188                           tblptrl	equ	0xFF6
  4189                           tablat	equ	0xFF5
  4190                           prodh	equ	0xFF4
  4191                           prodl	equ	0xFF3
  4192                           wreg	equ	0xFE8
  4193                           indf2	equ	0xFDF
  4194                           postinc2	equ	0xFDE
  4195                           postdec2	equ	0xFDD
  4196                           fsr2h	equ	0xFDA
  4197                           fsr2l	equ	0xFD9
  4198                           status	equ	0xFD8
  4199                           
  4200 ;; *************** function _gReadByte *****************
  4201 ;; Defined at:
  4202 ;;		line 195 in file "LSM9DS0.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  subadd          1    6[COMRAM] unsigned char 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;		None
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  1    wreg      unsigned char 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0, cstack
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4216 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4220 ;;Total ram usage:        1 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    2
  4223 ;; This function calls:
  4224 ;;		_I2CReadByte
  4225 ;; This function is called by:
  4226 ;;		_openLSM9
  4227 ;;		_readLSM9_gyro
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text25
  4232  002552                     __ptext25:
  4233                           	opt stack 0
  4234  002552                     _gReadByte:
  4235                           	opt stack 27
  4236                           
  4237                           ;LSM9DS0.c: 196: return (I2CReadByte(_gaddress>>1,subadd));
  4238                           
  4239                           ;incstack = 0
  4240                           ;incstack = 0
  4241  002552  0100               	movlb	0	; () banked
  4242  002554  0100               	movlb	0	; () banked
  4243  002556  90D8               	bcf	status,0,c
  4244  002558  31BC               	rrcf	__gaddress& (0+255),w,b
  4245  00255A  6E03               	movwf	?_I2CReadByte,c
  4246  00255C  C007  F004         	movff	gReadByte@subadd,?_I2CReadByte+1
  4247  002560  ECD4  F010         	call	_I2CReadByte	;wreg free
  4248  002564  0012               	return	
  4249  002566                     __end_of_gReadByte:
  4250                           	opt stack 0
  4251                           tblptru	equ	0xFF8
  4252                           tblptrh	equ	0xFF7
  4253                           tblptrl	equ	0xFF6
  4254                           tablat	equ	0xFF5
  4255                           prodh	equ	0xFF4
  4256                           prodl	equ	0xFF3
  4257                           wreg	equ	0xFE8
  4258                           indf2	equ	0xFDF
  4259                           postinc2	equ	0xFDE
  4260                           postdec2	equ	0xFDD
  4261                           fsr2h	equ	0xFDA
  4262                           fsr2l	equ	0xFD9
  4263                           status	equ	0xFD8
  4264                           
  4265 ;; *************** function _xmReadByte *****************
  4266 ;; Defined at:
  4267 ;;		line 217 in file "LSM9DS0.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;  subadd          1    6[COMRAM] unsigned char 
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;		None
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  1    wreg      unsigned char 
  4274 ;; Registers used:
  4275 ;;		wreg, status,2, status,0, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4281 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4284 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;Total ram usage:        1 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; Hardware stack levels required when called:    2
  4288 ;; This function calls:
  4289 ;;		_I2CReadByte
  4290 ;; This function is called by:
  4291 ;;		_openLSM9
  4292 ;;		_readLSM9_accel
  4293 ;;		_readLSM9_mag
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text26
  4298  002566                     __ptext26:
  4299                           	opt stack 0
  4300  002566                     _xmReadByte:
  4301                           	opt stack 27
  4302                           
  4303                           ;LSM9DS0.c: 218: return (I2CReadByte(_xmaddress>>1,subadd));
  4304                           
  4305                           ;incstack = 0
  4306                           ;incstack = 0
  4307  002566  0100               	movlb	0	; () banked
  4308  002568  0100               	movlb	0	; () banked
  4309  00256A  90D8               	bcf	status,0,c
  4310  00256C  31BD               	rrcf	__xmaddress& (0+255),w,b
  4311  00256E  6E03               	movwf	?_I2CReadByte,c
  4312  002570  C007  F004         	movff	xmReadByte@subadd,?_I2CReadByte+1
  4313  002574  ECD4  F010         	call	_I2CReadByte	;wreg free
  4314  002578  0012               	return	
  4315  00257A                     __end_of_xmReadByte:
  4316                           	opt stack 0
  4317                           tblptru	equ	0xFF8
  4318                           tblptrh	equ	0xFF7
  4319                           tblptrl	equ	0xFF6
  4320                           tablat	equ	0xFF5
  4321                           prodh	equ	0xFF4
  4322                           prodl	equ	0xFF3
  4323                           wreg	equ	0xFE8
  4324                           indf2	equ	0xFDF
  4325                           postinc2	equ	0xFDE
  4326                           postdec2	equ	0xFDD
  4327                           fsr2h	equ	0xFDA
  4328                           fsr2l	equ	0xFD9
  4329                           status	equ	0xFD8
  4330                           
  4331 ;; *************** function _I2CReadByte *****************
  4332 ;; Defined at:
  4333 ;;		line 5 in file "I2C_mat.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  add             1    2[COMRAM] unsigned char 
  4336 ;;  subadd          1    3[COMRAM] unsigned char 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  _temp           1    5[COMRAM] unsigned char 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      unsigned char 
  4341 ;; Registers used:
  4342 ;;		wreg, status,2, status,0, cstack
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4348 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4350 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;Total ram usage:        4 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; Hardware stack levels required when called:    1
  4355 ;; This function calls:
  4356 ;;		_WriteI2C1
  4357 ;;		_ReadI2C1
  4358 ;; This function is called by:
  4359 ;;		_gReadByte
  4360 ;;		_xmReadByte
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           	psect	text27
  4365  0021A8                     __ptext27:
  4366                           	opt stack 0
  4367  0021A8                     _I2CReadByte:
  4368                           	opt stack 27
  4369                           
  4370                           ;I2C_mat.c: 6: unsigned char _temp=0;
  4371                           
  4372                           ;incstack = 0
  4373                           ;incstack = 0
  4374  0021A8  6E05               	movwf	??_I2CReadByte& (0+255),c
  4375  0021AA  0E00               	movlw	0
  4376  0021AC  6E06               	movwf	I2CReadByte@_temp,c
  4377  0021AE  5005               	movf	??_I2CReadByte& (0+255),w,c
  4378                           
  4379                           ;I2C_mat.c: 7: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  4380  0021B0  80C5               	bsf	4037,0,c	;volatile
  4381  0021B2                     l169:
  4382  0021B2  B0C5               	btfsc	4037,0,c	;volatile
  4383  0021B4  D7FE               	goto	l169
  4384  0021B6                     l2839:
  4385  0021B6  5003               	movf	I2CReadByte@add,w,c
  4386  0021B8  2403               	addwf	I2CReadByte@add,w,c
  4387  0021BA  6E01               	movwf	?_WriteI2C1,c
  4388  0021BC  EC08  F010         	call	_WriteI2C1	;wreg free
  4389  0021C0  0900               	iorlw	0
  4390  0021C2  A4D8               	btfss	status,2,c
  4391  0021C4  D7F8               	goto	l2839
  4392  0021C6                     l2841:
  4393  0021C6  C004  F001         	movff	I2CReadByte@subadd,?_WriteI2C1
  4394  0021CA  EC08  F010         	call	_WriteI2C1	;wreg free
  4395  0021CE  0900               	iorlw	0
  4396  0021D0  A4D8               	btfss	status,2,c
  4397  0021D2  D7F9               	goto	l2841
  4398                           
  4399                           ;I2C_mat.c: 10: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN);
  4400  0021D4  82C5               	bsf	4037,1,c	;volatile
  4401  0021D6                     l178:
  4402  0021D6  B2C5               	btfsc	4037,1,c	;volatile
  4403  0021D8  D7FE               	goto	l178
  4404  0021DA                     l2843:
  4405  0021DA  80D8               	bsf	status,0,c
  4406  0021DC  3403               	rlcf	I2CReadByte@add,w,c
  4407  0021DE  6E01               	movwf	?_WriteI2C1,c
  4408  0021E0  EC08  F010         	call	_WriteI2C1	;wreg free
  4409  0021E4  0900               	iorlw	0
  4410  0021E6  A4D8               	btfss	status,2,c
  4411  0021E8  D7F8               	goto	l2843
  4412                           
  4413                           ;I2C_mat.c: 12: _temp=ReadI2C1();
  4414  0021EA  EC85  F012         	call	_ReadI2C1	;wreg free
  4415  0021EE  6E06               	movwf	I2CReadByte@_temp,c
  4416                           
  4417                           ;I2C_mat.c: 13: SSP1CON2bits.ACKDT=1, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  4418  0021F0  8AC5               	bsf	4037,5,c	;volatile
  4419  0021F2  88C5               	bsf	4037,4,c	;volatile
  4420  0021F4                     l184:
  4421  0021F4  B8C5               	btfsc	4037,4,c	;volatile
  4422  0021F6  D7FE               	goto	l184
  4423                           
  4424                           ;I2C_mat.c: 14: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  4425  0021F8  84C5               	bsf	4037,2,c	;volatile
  4426  0021FA                     l187:
  4427  0021FA  B4C5               	btfsc	4037,2,c	;volatile
  4428  0021FC  D7FE               	goto	l187
  4429                           
  4430                           ;I2C_mat.c: 15: return _temp;
  4431  0021FE  5006               	movf	I2CReadByte@_temp,w,c
  4432  002200  0012               	return	
  4433  002202                     __end_of_I2CReadByte:
  4434                           	opt stack 0
  4435                           tblptru	equ	0xFF8
  4436                           tblptrh	equ	0xFF7
  4437                           tblptrl	equ	0xFF6
  4438                           tablat	equ	0xFF5
  4439                           prodh	equ	0xFF4
  4440                           prodl	equ	0xFF3
  4441                           wreg	equ	0xFE8
  4442                           indf2	equ	0xFDF
  4443                           postinc2	equ	0xFDE
  4444                           postdec2	equ	0xFDD
  4445                           fsr2h	equ	0xFDA
  4446                           fsr2l	equ	0xFD9
  4447                           status	equ	0xFD8
  4448                           
  4449 ;; *************** function _ReadI2C1 *****************
  4450 ;; Defined at:
  4451 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\i2c\i2c1read.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;		None
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;		None
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      unsigned char 
  4458 ;; Registers used:
  4459 ;;		wreg, status,2, status,0
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;Total ram usage:        0 bytes
  4470 ;; Hardware stack levels used:    1
  4471 ;; This function calls:
  4472 ;;		Nothing
  4473 ;; This function is called by:
  4474 ;;		_I2CReadByte
  4475 ;;		_gReadBytes
  4476 ;;		_getsI2C1
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           	psect	text28
  4481  00250A                     __ptext28:
  4482                           	opt stack 0
  4483  00250A                     _ReadI2C1:
  4484                           	opt stack 27
  4485                           
  4486                           ;incstack = 0
  4487                           ;incstack = 0
  4488  00250A  50C6               	movf	4038,w,c	;volatile
  4489  00250C  0B0F               	andlw	15
  4490  00250E  0A08               	xorlw	8
  4491  002510  B4D8               	btfsc	status,2,c
  4492  002512  D004               	goto	l416
  4493  002514  50C6               	movf	4038,w,c	;volatile
  4494  002516  0B0F               	andlw	15
  4495  002518  0A0B               	xorlw	11
  4496  00251A  B4D8               	btfsc	status,2,c
  4497  00251C                     l416:
  4498  00251C  86C5               	bsf	4037,3,c	;volatile
  4499  00251E                     l417:
  4500  00251E  A0C7               	btfss	4039,0,c	;volatile
  4501  002520  D7FE               	goto	l417
  4502  002522  50C9               	movf	4041,w,c	;volatile
  4503  002524  0012               	return	
  4504  002526                     __end_of_ReadI2C1:
  4505                           	opt stack 0
  4506                           tblptru	equ	0xFF8
  4507                           tblptrh	equ	0xFF7
  4508                           tblptrl	equ	0xFF6
  4509                           tablat	equ	0xFF5
  4510                           prodh	equ	0xFF4
  4511                           prodl	equ	0xFF3
  4512                           wreg	equ	0xFE8
  4513                           indf2	equ	0xFDF
  4514                           postinc2	equ	0xFDE
  4515                           postdec2	equ	0xFDD
  4516                           fsr2h	equ	0xFDA
  4517                           fsr2l	equ	0xFD9
  4518                           status	equ	0xFD8
  4519                           
  4520 ;; *************** function _WriteI2C1 *****************
  4521 ;; Defined at:
  4522 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\i2c\i2c1writ.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;  data_out        1    0[COMRAM] unsigned char 
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;		None
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  1    wreg      char 
  4529 ;; Registers used:
  4530 ;;		wreg, status,2, status,0
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4536 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;Total ram usage:        2 bytes
  4541 ;; Hardware stack levels used:    1
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		_gWriteByte
  4546 ;;		_xmWriteByte
  4547 ;;		_I2CReadByte
  4548 ;;		_gReadBytes
  4549 ;;		_xmReadBytes
  4550 ;;		_I2CWriteByte
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           	psect	text29
  4555  002010                     __ptext29:
  4556                           	opt stack 0
  4557  002010                     _WriteI2C1:
  4558                           	opt stack 27
  4559                           
  4560                           ;incstack = 0
  4561                           ;incstack = 0
  4562  002010  C001  FFC9         	movff	WriteI2C1@data_out,4041	;volatile
  4563  002014  AEC6               	btfss	4038,7,c	;volatile
  4564  002016  D002               	goto	l2537
  4565  002018  0EFF               	movlw	255
  4566  00201A  0012               	return	
  4567  00201C                     l2537:
  4568  00201C  50C6               	movf	4038,w,c	;volatile
  4569  00201E  0B0F               	andlw	15
  4570  002020  0A08               	xorlw	8
  4571  002022  B4D8               	btfsc	status,2,c
  4572  002024  D00F               	goto	l2555
  4573  002026  50C6               	movf	4038,w,c	;volatile
  4574  002028  0B0F               	andlw	15
  4575  00202A  0A0B               	xorlw	11
  4576  00202C  B4D8               	btfsc	status,2,c
  4577  00202E  D00A               	goto	l2555
  4578  002030  88C6               	bsf	4038,4,c	;volatile
  4579  002032                     l441:
  4580  002032  A69E               	btfss	3998,3,c	;volatile
  4581  002034  D7FE               	goto	l441
  4582  002036  A4C7               	btfss	4039,2,c	;volatile
  4583  002038  B0C7               	btfsc	4039,0,c	;volatile
  4584  00203A  D002               	goto	l2551
  4585  00203C  0EFE               	movlw	254
  4586  00203E  0012               	return	
  4587  002040                     l2551:
  4588  002040  0E00               	movlw	0
  4589  002042  0012               	return	
  4590  002044                     l2555:
  4591  002044  50C6               	movf	4038,w,c	;volatile
  4592  002046  0B0F               	andlw	15
  4593  002048  0A08               	xorlw	8
  4594  00204A  B4D8               	btfsc	status,2,c
  4595  00204C  D005               	goto	l450
  4596  00204E  50C6               	movf	4038,w,c	;volatile
  4597  002050  0B0F               	andlw	15
  4598  002052  0A0B               	xorlw	11
  4599  002054  A4D8               	btfss	status,2,c
  4600  002056  0012               	return	
  4601  002058                     l450:
  4602  002058  B0C7               	btfsc	4039,0,c	;volatile
  4603  00205A  D7FE               	goto	l450
  4604  00205C                     l2559:
  4605  00205C  30C7               	rrcf	4039,w,c	;volatile
  4606  00205E  32E8               	rrcf	wreg,f,c
  4607  002060  0B01               	andlw	1
  4608  002062  6E02               	movwf	??_WriteI2C1& (0+255),c
  4609  002064  50C5               	movf	4037,w,c	;volatile
  4610  002066  0B1F               	andlw	31
  4611  002068  1002               	iorwf	??_WriteI2C1,w,c
  4612  00206A  0900               	iorlw	0
  4613  00206C  A4D8               	btfss	status,2,c
  4614  00206E  D7F6               	goto	l2559
  4615  002070  ACC5               	btfss	4037,6,c	;volatile
  4616  002072  D002               	goto	l2567
  4617  002074  0EFE               	movlw	254
  4618  002076  0012               	return	
  4619  002078                     l2567:
  4620  002078  0E00               	movlw	0
  4621  00207A  0012               	return	
  4622  00207C                     __end_of_WriteI2C1:
  4623                           	opt stack 0
  4624                           tblptru	equ	0xFF8
  4625                           tblptrh	equ	0xFF7
  4626                           tblptrl	equ	0xFF6
  4627                           tablat	equ	0xFF5
  4628                           prodh	equ	0xFF4
  4629                           prodl	equ	0xFF3
  4630                           wreg	equ	0xFE8
  4631                           indf2	equ	0xFDF
  4632                           postinc2	equ	0xFDE
  4633                           postdec2	equ	0xFDD
  4634                           fsr2h	equ	0xFDA
  4635                           fsr2l	equ	0xFD9
  4636                           status	equ	0xFD8
  4637                           
  4638 ;; *************** function _Tomcat_Setup *****************
  4639 ;; Defined at:
  4640 ;;		line 8 in file "Tomcat_driver.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;		None
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;		None
  4645 ;; Return value:  Size  Location     Type
  4646 ;;		None               void
  4647 ;; Registers used:
  4648 ;;		wreg, status,2, status,0, cstack
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;Total ram usage:        2 bytes
  4659 ;; Hardware stack levels used:    1
  4660 ;; Hardware stack levels required when called:    1
  4661 ;; This function calls:
  4662 ;;		_OpenI2C1
  4663 ;;		_Open1USART
  4664 ;; This function is called by:
  4665 ;;		_main
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text30
  4670  002438                     __ptext30:
  4671                           	opt stack 0
  4672  002438                     _Tomcat_Setup:
  4673                           	opt stack 29
  4674                           
  4675                           ;Tomcat_driver.c: 10: ANSELC = 0;
  4676                           
  4677                           ;incstack = 0
  4678                           ;incstack = 0
  4679  002438  0E00               	movlw	0
  4680  00243A  010F               	movlb	15	; () banked
  4681  00243C  010F               	movlb	15	; () banked
  4682  00243E  6F3A               	movwf	58,b	;volatile
  4683                           
  4684                           ; BSR set to: 15
  4685                           ;Tomcat_driver.c: 11: SSP1CON1 &=0xDF;
  4686  002440  9AC6               	bcf	4038,5,c	;volatile
  4687                           
  4688                           ; BSR set to: 15
  4689                           ;Tomcat_driver.c: 12: OpenI2C1(0b00001000,0b10000000);
  4690  002442  6E04               	movwf	??_Tomcat_Setup& (0+255),c
  4691  002444  0E08               	movlw	8
  4692  002446  6E01               	movwf	?_OpenI2C1,c
  4693  002448  5004               	movf	??_Tomcat_Setup& (0+255),w,c
  4694  00244A  6E05               	movwf	(??_Tomcat_Setup+1)& (0+255),c
  4695  00244C  0E80               	movlw	128
  4696  00244E  6E02               	movwf	?_OpenI2C1+1,c
  4697  002450  5005               	movf	(??_Tomcat_Setup+1)& (0+255),w,c
  4698  002452  EC93  F012         	call	_OpenI2C1	;wreg free
  4699                           
  4700                           ;Tomcat_driver.c: 13: SSP1ADD=49;
  4701  002456  0E31               	movlw	49
  4702  002458  6EC8               	movwf	4040,c	;volatile
  4703                           
  4704                           ;Tomcat_driver.c: 14: Open1USART(0b01111111 &
  4705                           ;Tomcat_driver.c: 15: 0b11111111 &
  4706                           ;Tomcat_driver.c: 16: 0b11111110 &
  4707                           ;Tomcat_driver.c: 17: 0b11111101 &
  4708                           ;Tomcat_driver.c: 18: 0b11111111 &
  4709                           ;Tomcat_driver.c: 19: 0b11111111, 131);
  4710  00245A  6E04               	movwf	??_Tomcat_Setup& (0+255),c
  4711  00245C  0E7C               	movlw	124
  4712  00245E  6E01               	movwf	?_Open1USART,c
  4713  002460  5004               	movf	??_Tomcat_Setup& (0+255),w,c
  4714  002462  0E00               	movlw	0
  4715  002464  6E03               	movwf	?_Open1USART+2,c
  4716  002466  0E83               	movlw	131
  4717  002468  6E02               	movwf	?_Open1USART+1,c
  4718  00246A  EC55  F011         	call	_Open1USART	;wreg free
  4719  00246E  0012               	return	
  4720  002470                     __end_of_Tomcat_Setup:
  4721                           	opt stack 0
  4722                           tblptru	equ	0xFF8
  4723                           tblptrh	equ	0xFF7
  4724                           tblptrl	equ	0xFF6
  4725                           tablat	equ	0xFF5
  4726                           prodh	equ	0xFF4
  4727                           prodl	equ	0xFF3
  4728                           wreg	equ	0xFE8
  4729                           indf2	equ	0xFDF
  4730                           postinc2	equ	0xFDE
  4731                           postdec2	equ	0xFDD
  4732                           fsr2h	equ	0xFDA
  4733                           fsr2l	equ	0xFD9
  4734                           status	equ	0xFD8
  4735                           
  4736 ;; *************** function _Open1USART *****************
  4737 ;; Defined at:
  4738 ;;		line 125 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\u1open.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  config          1    0[COMRAM] unsigned char 
  4741 ;;  spbrg           2    1[COMRAM] unsigned int 
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;		None
  4744 ;; Return value:  Size  Location     Type
  4745 ;;		None               void
  4746 ;; Registers used:
  4747 ;;		wreg, status,2
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4753 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;Total ram usage:        3 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_Tomcat_Setup
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           	psect	text31
  4767  0022AA                     __ptext31:
  4768                           	opt stack 0
  4769  0022AA                     _Open1USART:
  4770                           	opt stack 29
  4771                           
  4772                           ;incstack = 0
  4773                           ;incstack = 0
  4774  0022AA  0E00               	movlw	0
  4775  0022AC  6EAC               	movwf	4012,c	;volatile
  4776  0022AE  0E00               	movlw	0
  4777  0022B0  6EAB               	movwf	4011,c	;volatile
  4778  0022B2  B001               	btfsc	Open1USART@config,0,c
  4779  0022B4  88AC               	bsf	4012,4,c	;volatile
  4780  0022B6  A201               	btfss	Open1USART@config,1,c
  4781  0022B8  D002               	goto	l336
  4782  0022BA  8CAC               	bsf	4012,6,c	;volatile
  4783  0022BC  8CAB               	bsf	4011,6,c	;volatile
  4784  0022BE                     l336:
  4785  0022BE  B401               	btfsc	Open1USART@config,2,c
  4786  0022C0  8EAC               	bsf	4012,7,c	;volatile
  4787  0022C2  A601               	btfss	Open1USART@config,3,c
  4788  0022C4  D002               	goto	l338
  4789  0022C6  88AB               	bsf	4011,4,c	;volatile
  4790  0022C8  D001               	goto	l339
  4791  0022CA                     l338:
  4792  0022CA  8AAB               	bsf	4011,5,c	;volatile
  4793  0022CC                     l339:
  4794  0022CC  B801               	btfsc	Open1USART@config,4,c
  4795  0022CE  84AC               	bsf	4012,2,c	;volatile
  4796  0022D0  BA01               	btfsc	Open1USART@config,5,c
  4797  0022D2  86AB               	bsf	4011,3,c	;volatile
  4798  0022D4  AC01               	btfss	Open1USART@config,6,c
  4799  0022D6  D002               	goto	l342
  4800  0022D8  8A9D               	bsf	3997,5,c	;volatile
  4801  0022DA  D001               	goto	l343
  4802  0022DC                     l342:
  4803  0022DC  9A9D               	bcf	3997,5,c	;volatile
  4804  0022DE                     l343:
  4805  0022DE  AE01               	btfss	Open1USART@config,7,c
  4806  0022E0  D002               	goto	l344
  4807  0022E2  889D               	bsf	3997,4,c	;volatile
  4808  0022E4  D001               	goto	l345
  4809  0022E6                     l344:
  4810  0022E6  989D               	bcf	3997,4,c	;volatile
  4811  0022E8                     l345:
  4812  0022E8  C002  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  4813  0022EC  5003               	movf	Open1USART@spbrg+1,w,c
  4814  0022EE  6EB0               	movwf	4016,c	;volatile
  4815  0022F0  8AAC               	bsf	4012,5,c	;volatile
  4816  0022F2  8EAB               	bsf	4011,7,c	;volatile
  4817  0022F4  0012               	return	
  4818  0022F6                     __end_of_Open1USART:
  4819                           	opt stack 0
  4820                           tblptru	equ	0xFF8
  4821                           tblptrh	equ	0xFF7
  4822                           tblptrl	equ	0xFF6
  4823                           tablat	equ	0xFF5
  4824                           prodh	equ	0xFF4
  4825                           prodl	equ	0xFF3
  4826                           wreg	equ	0xFE8
  4827                           indf2	equ	0xFDF
  4828                           postinc2	equ	0xFDE
  4829                           postdec2	equ	0xFDD
  4830                           fsr2h	equ	0xFDA
  4831                           fsr2l	equ	0xFD9
  4832                           status	equ	0xFD8
  4833                           
  4834 ;; *************** function _OpenI2C1 *****************
  4835 ;; Defined at:
  4836 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\i2c\i2c1open.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  sync_mode       1    0[COMRAM] unsigned char 
  4839 ;;  slew            1    1[COMRAM] unsigned char 
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;		None
  4842 ;; Return value:  Size  Location     Type
  4843 ;;		None               void
  4844 ;; Registers used:
  4845 ;;		wreg, status,2, status,0
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4855 ;;Total ram usage:        2 bytes
  4856 ;; Hardware stack levels used:    1
  4857 ;; This function calls:
  4858 ;;		Nothing
  4859 ;; This function is called by:
  4860 ;;		_Tomcat_Setup
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           	psect	text32
  4865  002526                     __ptext32:
  4866                           	opt stack 0
  4867  002526                     _OpenI2C1:
  4868                           	opt stack 29
  4869                           
  4870                           ;incstack = 0
  4871                           ;incstack = 0
  4872  002526  0E3F               	movlw	63
  4873  002528  16C7               	andwf	4039,f,c	;volatile
  4874  00252A  0E00               	movlw	0
  4875  00252C  6EC6               	movwf	4038,c	;volatile
  4876  00252E  0E00               	movlw	0
  4877  002530  6EC5               	movwf	4037,c	;volatile
  4878  002532  5001               	movf	OpenI2C1@sync_mode,w,c
  4879  002534  12C6               	iorwf	4038,f,c	;volatile
  4880  002536  5002               	movf	OpenI2C1@slew,w,c
  4881  002538  12C7               	iorwf	4039,f,c	;volatile
  4882  00253A  8AC6               	bsf	4038,5,c	;volatile
  4883  00253C  0012               	return	
  4884  00253E                     __end_of_OpenI2C1:
  4885                           	opt stack 0
  4886                           tblptru	equ	0xFF8
  4887                           tblptrh	equ	0xFF7
  4888                           tblptrl	equ	0xFF6
  4889                           tablat	equ	0xFF5
  4890                           prodh	equ	0xFF4
  4891                           prodl	equ	0xFF3
  4892                           wreg	equ	0xFE8
  4893                           indf2	equ	0xFDF
  4894                           postinc2	equ	0xFDE
  4895                           postdec2	equ	0xFDD
  4896                           fsr2h	equ	0xFDA
  4897                           fsr2l	equ	0xFD9
  4898                           status	equ	0xFD8
  4899                           
  4900 ;; *************** function ___ftneg *****************
  4901 ;; Defined at:
  4902 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\ftneg.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;  f1              3   15[COMRAM] float 
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;		None
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  3   15[COMRAM] float 
  4909 ;; Registers used:
  4910 ;;		wreg, status,2, status,0
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4916 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;Total ram usage:        3 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; This function calls:
  4923 ;;		Nothing
  4924 ;; This function is called by:
  4925 ;;		_main
  4926 ;;		_atan
  4927 ;;		_fabs
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           	psect	text33
  4932  0024E4                     __ptext33:
  4933                           	opt stack 0
  4934  0024E4                     ___ftneg:
  4935                           	opt stack 30
  4936                           
  4937                           ;incstack = 0
  4938                           ;incstack = 0
  4939  0024E4  0E7F               	movlw	127
  4940  0024E6  1412               	andwf	___ftneg@f1+2,w,c
  4941  0024E8  1011               	iorwf	___ftneg@f1+1,w,c
  4942  0024EA  1010               	iorwf	___ftneg@f1,w,c
  4943  0024EC  B4D8               	btfsc	status,2,c
  4944  0024EE  D006               	goto	l873
  4945  0024F0  0E00               	movlw	0
  4946  0024F2  1A10               	xorwf	___ftneg@f1,f,c
  4947  0024F4  0E00               	movlw	0
  4948  0024F6  1A11               	xorwf	___ftneg@f1+1,f,c
  4949  0024F8  0E80               	movlw	128
  4950  0024FA  1A12               	xorwf	___ftneg@f1+2,f,c
  4951  0024FC                     l873:
  4952  0024FC  C010  F010         	movff	___ftneg@f1,?___ftneg
  4953  002500  C011  F011         	movff	___ftneg@f1+1,?___ftneg+1
  4954  002504  C012  F012         	movff	___ftneg@f1+2,?___ftneg+2
  4955  002508  0012               	return	
  4956  00250A                     __end_of___ftneg:
  4957                           	opt stack 0
  4958                           tblptru	equ	0xFF8
  4959                           tblptrh	equ	0xFF7
  4960                           tblptrl	equ	0xFF6
  4961                           tablat	equ	0xFF5
  4962                           prodh	equ	0xFF4
  4963                           prodl	equ	0xFF3
  4964                           wreg	equ	0xFE8
  4965                           indf2	equ	0xFDF
  4966                           postinc2	equ	0xFDE
  4967                           postdec2	equ	0xFDD
  4968                           fsr2h	equ	0xFDA
  4969                           fsr2l	equ	0xFD9
  4970                           status	equ	0xFD8
  4971                           
  4972 ;; *************** function ___ftge *****************
  4973 ;; Defined at:
  4974 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\ftge.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;  ff1             3    0[COMRAM] float 
  4977 ;;  ff2             3    3[COMRAM] float 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;		None
  4980 ;; Return value:  Size  Location     Type
  4981 ;;		None               void
  4982 ;; Registers used:
  4983 ;;		wreg, status,2, status,0
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4989 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4993 ;;Total ram usage:        9 bytes
  4994 ;; Hardware stack levels used:    1
  4995 ;; This function calls:
  4996 ;;		Nothing
  4997 ;; This function is called by:
  4998 ;;		_atan
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           	psect	text34
  5003  001F80                     __ptext34:
  5004                           	opt stack 0
  5005  001F80                     ___ftge:
  5006                           	opt stack 29
  5007                           
  5008                           ;incstack = 0
  5009                           ;incstack = 0
  5010  001F80  AE03               	btfss	___ftge@ff1+2,7,c
  5011  001F82  D016               	goto	l2773
  5012  001F84  C001  F007         	movff	___ftge@ff1,??___ftge
  5013  001F88  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  5014  001F8C  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  5015  001F90  1E07               	comf	??___ftge,f,c
  5016  001F92  1E08               	comf	??___ftge+1,f,c
  5017  001F94  1E09               	comf	??___ftge+2,f,c
  5018  001F96  2A07               	incf	??___ftge,f,c
  5019  001F98  0E00               	movlw	0
  5020  001F9A  2208               	addwfc	??___ftge+1,f,c
  5021  001F9C  2209               	addwfc	??___ftge+2,f,c
  5022  001F9E  0E00               	movlw	0
  5023  001FA0  2407               	addwf	??___ftge,w,c
  5024  001FA2  6E01               	movwf	___ftge@ff1,c
  5025  001FA4  0E00               	movlw	0
  5026  001FA6  2008               	addwfc	??___ftge+1,w,c
  5027  001FA8  6E02               	movwf	___ftge@ff1+1,c
  5028  001FAA  0E80               	movlw	128
  5029  001FAC  2009               	addwfc	??___ftge+2,w,c
  5030  001FAE  6E03               	movwf	___ftge@ff1+2,c
  5031  001FB0                     l2773:
  5032  001FB0  AE06               	btfss	___ftge@ff2+2,7,c
  5033  001FB2  D016               	goto	l2777
  5034  001FB4  C004  F007         	movff	___ftge@ff2,??___ftge
  5035  001FB8  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  5036  001FBC  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  5037  001FC0  1E07               	comf	??___ftge,f,c
  5038  001FC2  1E08               	comf	??___ftge+1,f,c
  5039  001FC4  1E09               	comf	??___ftge+2,f,c
  5040  001FC6  2A07               	incf	??___ftge,f,c
  5041  001FC8  0E00               	movlw	0
  5042  001FCA  2208               	addwfc	??___ftge+1,f,c
  5043  001FCC  2209               	addwfc	??___ftge+2,f,c
  5044  001FCE  0E00               	movlw	0
  5045  001FD0  2407               	addwf	??___ftge,w,c
  5046  001FD2  6E04               	movwf	___ftge@ff2,c
  5047  001FD4  0E00               	movlw	0
  5048  001FD6  2008               	addwfc	??___ftge+1,w,c
  5049  001FD8  6E05               	movwf	___ftge@ff2+1,c
  5050  001FDA  0E80               	movlw	128
  5051  001FDC  2009               	addwfc	??___ftge+2,w,c
  5052  001FDE  6E06               	movwf	___ftge@ff2+2,c
  5053  001FE0                     l2777:
  5054  001FE0  0E00               	movlw	0
  5055  001FE2  1A01               	xorwf	___ftge@ff1,f,c
  5056  001FE4  0E00               	movlw	0
  5057  001FE6  1A02               	xorwf	___ftge@ff1+1,f,c
  5058  001FE8  0E80               	movlw	128
  5059  001FEA  1A03               	xorwf	___ftge@ff1+2,f,c
  5060  001FEC  0E00               	movlw	0
  5061  001FEE  1A04               	xorwf	___ftge@ff2,f,c
  5062  001FF0  0E00               	movlw	0
  5063  001FF2  1A05               	xorwf	___ftge@ff2+1,f,c
  5064  001FF4  0E80               	movlw	128
  5065  001FF6  1A06               	xorwf	___ftge@ff2+2,f,c
  5066  001FF8  5004               	movf	___ftge@ff2,w,c
  5067  001FFA  5C01               	subwf	___ftge@ff1,w,c
  5068  001FFC  5005               	movf	___ftge@ff2+1,w,c
  5069  001FFE  5802               	subwfb	___ftge@ff1+1,w,c
  5070  002000  5006               	movf	___ftge@ff2+2,w,c
  5071  002002  5803               	subwfb	___ftge@ff1+2,w,c
  5072  002004  B0D8               	btfsc	status,0,c
  5073  002006  D002               	goto	l2783
  5074  002008  90D8               	bcf	status,0,c
  5075  00200A  0012               	return	
  5076  00200C                     l2783:
  5077  00200C  80D8               	bsf	status,0,c
  5078  00200E  0012               	return	
  5079  002010                     __end_of___ftge:
  5080                           	opt stack 0
  5081                           tblptru	equ	0xFF8
  5082                           tblptrh	equ	0xFF7
  5083                           tblptrl	equ	0xFF6
  5084                           tablat	equ	0xFF5
  5085                           prodh	equ	0xFF4
  5086                           prodl	equ	0xFF3
  5087                           wreg	equ	0xFE8
  5088                           indf2	equ	0xFDF
  5089                           postinc2	equ	0xFDE
  5090                           postdec2	equ	0xFDD
  5091                           fsr2h	equ	0xFDA
  5092                           fsr2l	equ	0xFD9
  5093                           status	equ	0xFD8
  5094                           
  5095 ;; *************** function ___wmul *****************
  5096 ;; Defined at:
  5097 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\wmul.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;  multiplier      2    9[COMRAM] unsigned int 
  5100 ;;  multiplicand    2   11[COMRAM] unsigned int 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  product         2   13[COMRAM] unsigned int 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  2    9[COMRAM] unsigned int 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0, prodl, prodh
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5112 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5113 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;Total ram usage:        6 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_main
  5122 ;;		_eval_poly
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           	psect	text35
  5127  0023FE                     __ptext35:
  5128                           	opt stack 0
  5129  0023FE                     ___wmul:
  5130                           	opt stack 30
  5131                           
  5132                           ;incstack = 0
  5133                           ;incstack = 0
  5134  0023FE  500A               	movf	___wmul@multiplier,w,c
  5135  002400  020C               	mulwf	___wmul@multiplicand,c
  5136  002402  CFF3 F00E          	movff	prodl,___wmul@product
  5137  002406  CFF4 F00F          	movff	prodh,___wmul@product+1
  5138  00240A  500A               	movf	___wmul@multiplier,w,c
  5139  00240C  020D               	mulwf	___wmul@multiplicand+1,c
  5140  00240E  CFF3 FFF4          	movff	prodl,prodh
  5141  002412  6AF3               	clrf	prodl,c
  5142  002414  50F3               	movf	prodl,w,c
  5143  002416  260E               	addwf	___wmul@product,f,c
  5144  002418  50F4               	movf	prodh,w,c
  5145  00241A  220F               	addwfc	___wmul@product+1,f,c
  5146  00241C  500B               	movf	___wmul@multiplier+1,w,c
  5147  00241E  020C               	mulwf	___wmul@multiplicand,c
  5148  002420  CFF3 FFF4          	movff	prodl,prodh
  5149  002424  6AF3               	clrf	prodl,c
  5150  002426  50F3               	movf	prodl,w,c
  5151  002428  260E               	addwf	___wmul@product,f,c
  5152  00242A  50F4               	movf	prodh,w,c
  5153  00242C  220F               	addwfc	___wmul@product+1,f,c
  5154  00242E  C00E  F00A         	movff	___wmul@product,?___wmul
  5155  002432  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
  5156  002436  0012               	return	
  5157  002438                     __end_of___wmul:
  5158                           	opt stack 0
  5159                           tblptru	equ	0xFF8
  5160                           tblptrh	equ	0xFF7
  5161                           tblptrl	equ	0xFF6
  5162                           tablat	equ	0xFF5
  5163                           prodh	equ	0xFF4
  5164                           prodl	equ	0xFF3
  5165                           wreg	equ	0xFE8
  5166                           indf2	equ	0xFDF
  5167                           postinc2	equ	0xFDE
  5168                           postdec2	equ	0xFDD
  5169                           fsr2h	equ	0xFDA
  5170                           fsr2l	equ	0xFD9
  5171                           status	equ	0xFD8
  5172                           
  5173 ;; *************** function ___ftmul *****************
  5174 ;; Defined at:
  5175 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\ftmul.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;  f1              3   55[COMRAM] float 
  5178 ;;  f2              3   58[COMRAM] float 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  f3_as_produc    3   67[COMRAM] unsigned um
  5181 ;;  sign            1   71[COMRAM] unsigned char 
  5182 ;;  cntr            1   70[COMRAM] unsigned char 
  5183 ;;  exp             1   66[COMRAM] unsigned char 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  3   55[COMRAM] float 
  5186 ;; Registers used:
  5187 ;;		wreg, status,2, status,0, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5193 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;Total ram usage:       17 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    1
  5200 ;; This function calls:
  5201 ;;		___ftpack
  5202 ;; This function is called by:
  5203 ;;		_main
  5204 ;;		___asftmul
  5205 ;;		_atan
  5206 ;;		_eval_poly
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           	psect	text36
  5211  0017F6                     __ptext36:
  5212                           	opt stack 0
  5213  0017F6                     ___ftmul:
  5214                           	opt stack 29
  5215                           
  5216                           ;incstack = 0
  5217                           ;incstack = 0
  5218  0017F6  0E0F               	movlw	15
  5219  0017F8  6E3E               	movwf	??___ftmul& (0+255),c
  5220  0017FA  C038  F03F         	movff	___ftmul@f1,??___ftmul+1
  5221  0017FE  C039  F040         	movff	___ftmul@f1+1,??___ftmul+2
  5222  001802  C03A  F041         	movff	___ftmul@f1+2,??___ftmul+3
  5223  001806  283E               	incf	??___ftmul,w,c
  5224  001808  6E42               	movwf	(??___ftmul+4)& (0+255),c
  5225  00180A  D004               	goto	u2370
  5226  00180C                     u2375:
  5227  00180C  90D8               	bcf	status,0,c
  5228  00180E  3241               	rrcf	??___ftmul+3,f,c
  5229  001810  3240               	rrcf	??___ftmul+2,f,c
  5230  001812  323F               	rrcf	??___ftmul+1,f,c
  5231  001814                     u2370:
  5232  001814  2E42               	decfsz	(??___ftmul+4)& (0+255),f,c
  5233  001816  D7FA               	goto	u2375
  5234  001818  503F               	movf	??___ftmul+1,w,c
  5235  00181A  6E43               	movwf	___ftmul@exp,c
  5236  00181C  6643               	tstfsz	___ftmul@exp& (0+255),c
  5237  00181E  D007               	goto	l2861
  5238  001820  0E00               	movlw	0
  5239  001822  6E38               	movwf	?___ftmul,c
  5240  001824  0E00               	movlw	0
  5241  001826  6E39               	movwf	?___ftmul+1,c
  5242  001828  0E00               	movlw	0
  5243  00182A  6E3A               	movwf	?___ftmul+2,c
  5244  00182C  0012               	return	
  5245  00182E                     l2861:
  5246  00182E  0E0F               	movlw	15
  5247  001830  6E3E               	movwf	??___ftmul& (0+255),c
  5248  001832  C03B  F03F         	movff	___ftmul@f2,??___ftmul+1
  5249  001836  C03C  F040         	movff	___ftmul@f2+1,??___ftmul+2
  5250  00183A  C03D  F041         	movff	___ftmul@f2+2,??___ftmul+3
  5251  00183E  283E               	incf	??___ftmul,w,c
  5252  001840  6E42               	movwf	(??___ftmul+4)& (0+255),c
  5253  001842  D004               	goto	u2390
  5254  001844                     u2395:
  5255  001844  90D8               	bcf	status,0,c
  5256  001846  3241               	rrcf	??___ftmul+3,f,c
  5257  001848  3240               	rrcf	??___ftmul+2,f,c
  5258  00184A  323F               	rrcf	??___ftmul+1,f,c
  5259  00184C                     u2390:
  5260  00184C  2E42               	decfsz	(??___ftmul+4)& (0+255),f,c
  5261  00184E  D7FA               	goto	u2395
  5262  001850  503F               	movf	??___ftmul+1,w,c
  5263  001852  6E48               	movwf	___ftmul@sign,c
  5264  001854  6648               	tstfsz	___ftmul@sign& (0+255),c
  5265  001856  D007               	goto	l2867
  5266  001858  0E00               	movlw	0
  5267  00185A  6E38               	movwf	?___ftmul,c
  5268  00185C  0E00               	movlw	0
  5269  00185E  6E39               	movwf	?___ftmul+1,c
  5270  001860  0E00               	movlw	0
  5271  001862  6E3A               	movwf	?___ftmul+2,c
  5272  001864  0012               	return	
  5273  001866                     l2867:
  5274  001866  5048               	movf	___ftmul@sign,w,c
  5275  001868  0F7B               	addlw	123
  5276  00186A  2643               	addwf	___ftmul@exp,f,c
  5277  00186C  C03A  F048         	movff	___ftmul@f1+2,___ftmul@sign
  5278  001870  503D               	movf	(___ftmul@f2+2)& (0+255),w,c
  5279  001872  1A48               	xorwf	___ftmul@sign,f,c
  5280  001874  0E80               	movlw	128
  5281  001876  1648               	andwf	___ftmul@sign,f,c
  5282  001878  8E39               	bsf	___ftmul@f1+1,7,c
  5283  00187A  8E3C               	bsf	___ftmul@f2+1,7,c
  5284  00187C  0EFF               	movlw	255
  5285  00187E  163B               	andwf	___ftmul@f2,f,c
  5286  001880  0EFF               	movlw	255
  5287  001882  163C               	andwf	___ftmul@f2+1,f,c
  5288  001884  0E00               	movlw	0
  5289  001886  163D               	andwf	___ftmul@f2+2,f,c
  5290  001888  0E00               	movlw	0
  5291  00188A  6E44               	movwf	___ftmul@f3_as_product,c
  5292  00188C  0E00               	movlw	0
  5293  00188E  6E45               	movwf	___ftmul@f3_as_product+1,c
  5294  001890  0E00               	movlw	0
  5295  001892  6E46               	movwf	___ftmul@f3_as_product+2,c
  5296  001894  6E3E               	movwf	??___ftmul& (0+255),c
  5297  001896  0E07               	movlw	7
  5298  001898  6E47               	movwf	___ftmul@cntr,c
  5299  00189A  503E               	movf	??___ftmul& (0+255),w,c
  5300  00189C                     l2881:
  5301  00189C  A038               	btfss	___ftmul@f1,0,c
  5302  00189E  D006               	goto	l2885
  5303  0018A0  503B               	movf	___ftmul@f2,w,c
  5304  0018A2  2644               	addwf	___ftmul@f3_as_product,f,c
  5305  0018A4  503C               	movf	___ftmul@f2+1,w,c
  5306  0018A6  2245               	addwfc	___ftmul@f3_as_product+1,f,c
  5307  0018A8  503D               	movf	___ftmul@f2+2,w,c
  5308  0018AA  2246               	addwfc	___ftmul@f3_as_product+2,f,c
  5309  0018AC                     l2885:
  5310  0018AC  90D8               	bcf	status,0,c
  5311  0018AE  323A               	rrcf	___ftmul@f1+2,f,c
  5312  0018B0  3239               	rrcf	___ftmul@f1+1,f,c
  5313  0018B2  3238               	rrcf	___ftmul@f1,f,c
  5314  0018B4  90D8               	bcf	status,0,c
  5315  0018B6  363B               	rlcf	___ftmul@f2,f,c
  5316  0018B8  363C               	rlcf	___ftmul@f2+1,f,c
  5317  0018BA  363D               	rlcf	___ftmul@f2+2,f,c
  5318  0018BC  2E47               	decfsz	___ftmul@cntr,f,c
  5319  0018BE  D7EE               	goto	l2881
  5320  0018C0  6E3E               	movwf	??___ftmul& (0+255),c
  5321  0018C2  0E09               	movlw	9
  5322  0018C4  6E47               	movwf	___ftmul@cntr,c
  5323  0018C6  503E               	movf	??___ftmul& (0+255),w,c
  5324  0018C8                     l2891:
  5325  0018C8  A038               	btfss	___ftmul@f1,0,c
  5326  0018CA  D006               	goto	l2895
  5327  0018CC  503B               	movf	___ftmul@f2,w,c
  5328  0018CE  2644               	addwf	___ftmul@f3_as_product,f,c
  5329  0018D0  503C               	movf	___ftmul@f2+1,w,c
  5330  0018D2  2245               	addwfc	___ftmul@f3_as_product+1,f,c
  5331  0018D4  503D               	movf	___ftmul@f2+2,w,c
  5332  0018D6  2246               	addwfc	___ftmul@f3_as_product+2,f,c
  5333  0018D8                     l2895:
  5334  0018D8  90D8               	bcf	status,0,c
  5335  0018DA  323A               	rrcf	___ftmul@f1+2,f,c
  5336  0018DC  3239               	rrcf	___ftmul@f1+1,f,c
  5337  0018DE  3238               	rrcf	___ftmul@f1,f,c
  5338  0018E0  90D8               	bcf	status,0,c
  5339  0018E2  3246               	rrcf	___ftmul@f3_as_product+2,f,c
  5340  0018E4  3245               	rrcf	___ftmul@f3_as_product+1,f,c
  5341  0018E6  3244               	rrcf	___ftmul@f3_as_product,f,c
  5342  0018E8  2E47               	decfsz	___ftmul@cntr,f,c
  5343  0018EA  D7EE               	goto	l2891
  5344  0018EC  C044  F001         	movff	___ftmul@f3_as_product,?___ftpack
  5345  0018F0  C045  F002         	movff	___ftmul@f3_as_product+1,?___ftpack+1
  5346  0018F4  C046  F003         	movff	___ftmul@f3_as_product+2,?___ftpack+2
  5347  0018F8  C043  F004         	movff	___ftmul@exp,?___ftpack+3
  5348  0018FC  C048  F005         	movff	___ftmul@sign,?___ftpack+4
  5349  001900  EC08  F00E         	call	___ftpack	;wreg free
  5350  001904  C003  F03A         	movff	?___ftpack+2,?___ftmul+2
  5351  001908  C002  F039         	movff	?___ftpack+1,?___ftmul+1
  5352  00190C  C001  F038         	movff	?___ftpack,?___ftmul
  5353  001910  0012               	return	
  5354  001912                     __end_of___ftmul:
  5355                           	opt stack 0
  5356                           tblptru	equ	0xFF8
  5357                           tblptrh	equ	0xFF7
  5358                           tblptrl	equ	0xFF6
  5359                           tablat	equ	0xFF5
  5360                           prodh	equ	0xFF4
  5361                           prodl	equ	0xFF3
  5362                           wreg	equ	0xFE8
  5363                           indf2	equ	0xFDF
  5364                           postinc2	equ	0xFDE
  5365                           postdec2	equ	0xFDD
  5366                           fsr2h	equ	0xFDA
  5367                           fsr2l	equ	0xFD9
  5368                           status	equ	0xFD8
  5369                           tblptru	equ	0xFF8
  5370                           tblptrh	equ	0xFF7
  5371                           tblptrl	equ	0xFF6
  5372                           tablat	equ	0xFF5
  5373                           prodh	equ	0xFF4
  5374                           prodl	equ	0xFF3
  5375                           wreg	equ	0xFE8
  5376                           indf2	equ	0xFDF
  5377                           postinc2	equ	0xFDE
  5378                           postdec2	equ	0xFDD
  5379                           fsr2h	equ	0xFDA
  5380                           fsr2l	equ	0xFD9
  5381                           status	equ	0xFD8
  5382                           
  5383                           	psect	rparam
  5384  0000                     tblptru	equ	0xFF8
  5385                           tblptrh	equ	0xFF7
  5386                           tblptrl	equ	0xFF6
  5387                           tablat	equ	0xFF5
  5388                           prodh	equ	0xFF4
  5389                           prodl	equ	0xFF3
  5390                           wreg	equ	0xFE8
  5391                           indf2	equ	0xFDF
  5392                           postinc2	equ	0xFDE
  5393                           postdec2	equ	0xFDD
  5394                           fsr2h	equ	0xFDA
  5395                           fsr2l	equ	0xFD9
  5396                           status	equ	0xFD8


Data Sizes:
    Strings     10
    Constant    43
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     91      94
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ?_eval_poly	 size(2) Largest target is 3
		 -> atan@val(BANK0[3]), 

    ?_fabs	 size(2) Largest target is 0

    ?___asftmul	float  size(2) Largest target is 3
		 -> atan@val(BANK0[3]), 

    ?___ftpack	float  size(2) Largest target is 0

    ?___lwmod	unsigned int  size(2) Largest target is 0

    ?___lwdiv	unsigned int  size(2) Largest target is 0

    ?___wmul	unsigned int  size(2) Largest target is 0

    ?___awdiv	int  size(2) Largest target is 0

    ?___fttol	long  size(2) Largest target is 0

    ?___ftadd	float  size(2) Largest target is 0

    ?___ftneg	float  size(2) Largest target is 3
		 -> atan@val(BANK0[3]), 

    ?___ftmul	float  size(2) Largest target is 0

    ?___ftdiv	float  size(2) Largest target is 0

    ?___awtoft	float  size(2) Largest target is 0

    ?_atan	float  size(2) Largest target is 3
		 -> atan@val(BANK0[3]), 

    ?_openLSM9	unsigned int  size(2) Largest target is 0

    eval_poly@d	PTR const  size(2) Largest target is 18
		 -> atan@coeff_a(CODE[18]), atan@coeff_b(CODE[15]), 

    __asftmul@f1p	PTR float  size(2) Largest target is 3
		 -> atan@val(BANK0[3]), 

    putrs1USART@data	PTR const unsigned char  size(2) Largest target is 30
		 -> main@buff(BANK0[30]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> main@buff(BANK0[30]), 

    ?_sprintf	int  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S574$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    readLSM9_gyro@dest	PTR unsigned int  size(2) Largest target is 6
		 -> main@gyro(BANK0[6]), 

    readLSM9_mag@dest	PTR unsigned int  size(2) Largest target is 6
		 -> main@mag(BANK0[6]), 

    readLSM9_accel@dest	PTR unsigned int  size(2) Largest target is 6
		 -> main@accel(BANK0[6]), 


Critical Paths under _main in COMRAM

    ___fttol->___ftneg
    ___awtoft->___fttol
    _atan->_eval_poly
    _eval_poly->___ftadd
    ___ftadd->___ftmul
    _fabs->___fttol
    ___asftmul->___ftmul
    ___ftdiv->___awtoft
    _putrs1USART->_Write1USART
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _readLSM9_mag->_xmReadByte
    _readLSM9_gyro->_gReadByte
    _readLSM9_accel->_xmReadByte
    _openLSM9->_xmReadByte
    _openLSM9->_gReadByte
    _openLSM9_mag->_xmWriteByte
    _openLSM9_gyro->_gWriteByte
    _gWriteByte->_WriteI2C1
    _openLSM9_accel->_xmWriteByte
    _xmWriteByte->_WriteI2C1
    _gReadByte->_I2CReadByte
    _xmReadByte->_I2CReadByte
    _I2CReadByte->_WriteI2C1
    _Tomcat_Setup->_Open1USART
    ___ftneg->___wmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv

Critical Paths under _main in BANK0

    _main->_atan
    _atan->_eval_poly

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                73    73      0   11102
                                             93 COMRAM     2     2      0
                                             24 BANK0     67    67      0
                       _Tomcat_Setup
                           _openLSM9
                     _readLSM9_accel
                      _readLSM9_gyro
                       _readLSM9_mag
                            _sprintf
                        _putrs1USART
                               _atan
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___awdiv
                           ___awtoft
                            ___ftneg
                            ___fttol
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     252
                                             18 COMRAM    15    11      4
                           ___ftpack (ARG)
                            ___awdiv (ARG)
                             ___ftge (ARG)
                            ___ftneg (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             5     2      3     300
                                             33 COMRAM     5     2      3
                           ___ftpack
                            ___awdiv (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     300
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) _atan                                                16    13      3    5227
                                              8 BANK0     16    13      3
                            ___ftadd
                            ___ftdiv
                          ___asftmul
                            ___ftmul
                               _fabs
                          _eval_poly
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                             ___ftge
                            ___ftneg
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           15     8      7    1921
                                             86 COMRAM     7     0      7
                                              0 BANK0      8     8      0
                            ___ftadd
                            ___ftmul
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             14     8      6    1049
                                             72 COMRAM    14     8      6
                           ___ftpack
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _fabs                                                 3     0      3     111
                                             33 COMRAM     3     0      3
                            ___ftneg
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___asftmul                                            5     0      5     601
                                             72 COMRAM     5     0      5
                            ___ftdiv (ARG)
                            ___ftmul
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             17    11      6     489
                                             38 COMRAM    17    11      6
                           ___ftpack
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5     209
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _putrs1USART                                          2     0      2      66
                                              1 COMRAM     2     0      2
                        _Write1USART
 ---------------------------------------------------------------------------------
 (2) _Write1USART                                          1     0      1      22
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    12     10     798
                                             14 COMRAM    22    12     10
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     159
                                              8 COMRAM     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     162
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _readLSM9_mag                                         8     6      2     200
                                              7 COMRAM     8     6      2
                         _xmReadByte
 ---------------------------------------------------------------------------------
 (1) _readLSM9_gyro                                        8     6      2     200
                                              7 COMRAM     8     6      2
                          _gReadByte
 ---------------------------------------------------------------------------------
 (1) _readLSM9_accel                                       8     6      2     200
                                              7 COMRAM     8     6      2
                         _xmReadByte
 ---------------------------------------------------------------------------------
 (1) _openLSM9                                             6     4      2     558
                                              7 COMRAM     6     4      2
                         _xmReadByte
                          _gReadByte
                     _openLSM9_accel
                      _openLSM9_gyro
                       _openLSM9_mag
 ---------------------------------------------------------------------------------
 (2) _openLSM9_mag                                         2     2      0      66
                                              4 COMRAM     2     2      0
                        _xmWriteByte
 ---------------------------------------------------------------------------------
 (2) _openLSM9_gyro                                        2     2      0      66
                                              4 COMRAM     2     2      0
                         _gWriteByte
 ---------------------------------------------------------------------------------
 (3) _gWriteByte                                           2     0      2      66
                                              2 COMRAM     2     0      2
                          _WriteI2C1
 ---------------------------------------------------------------------------------
 (2) _openLSM9_accel                                       2     2      0      66
                                              4 COMRAM     2     2      0
                        _xmWriteByte
 ---------------------------------------------------------------------------------
 (3) _xmWriteByte                                          2     0      2      66
                                              2 COMRAM     2     0      2
                          _WriteI2C1
 ---------------------------------------------------------------------------------
 (2) _gReadByte                                            1     0      1     134
                                              6 COMRAM     1     0      1
                        _I2CReadByte
 ---------------------------------------------------------------------------------
 (2) _xmReadByte                                           1     0      1     134
                                              6 COMRAM     1     0      1
                        _I2CReadByte
 ---------------------------------------------------------------------------------
 (3) _I2CReadByte                                          4     2      2     112
                                              2 COMRAM     4     2      2
                          _WriteI2C1
                           _ReadI2C1
 ---------------------------------------------------------------------------------
 (4) _ReadI2C1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _WriteI2C1                                            2     1      1      22
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Tomcat_Setup                                         2     2      0     264
                                              3 COMRAM     2     2      0
                           _OpenI2C1
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     0      3     220
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _OpenI2C1                                             2     0      2      44
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3      45
                                             15 COMRAM     3     0      3
                           ___ftpack (ARG)
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     136
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     159
                                              9 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             17    11      6     535
                                             55 COMRAM    17    11      6
                           ___ftpack
                            ___ftdiv (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Tomcat_Setup
     _OpenI2C1
     _Open1USART
   _openLSM9
     _xmReadByte
       _I2CReadByte
         _WriteI2C1
         _ReadI2C1
     _gReadByte
       _I2CReadByte
         _WriteI2C1
         _ReadI2C1
     _openLSM9_accel
       _xmWriteByte
         _WriteI2C1
     _openLSM9_gyro
       _gWriteByte
         _WriteI2C1
     _openLSM9_mag
       _xmWriteByte
         _WriteI2C1
   _readLSM9_accel
     _xmReadByte
       _I2CReadByte
         _WriteI2C1
         _ReadI2C1
   _readLSM9_gyro
     _gReadByte
       _I2CReadByte
         _WriteI2C1
         _ReadI2C1
   _readLSM9_mag
     _xmReadByte
       _I2CReadByte
         _WriteI2C1
         _ReadI2C1
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _putrs1USART
     _Write1USART
   _atan
     ___ftadd
       ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___awdiv (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___awdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___awdiv (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___fttol (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___ftge (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___awdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___awdiv (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
       ___awdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___ftdiv
       ___ftpack
       ___awdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___asftmul
       ___ftdiv (ARG)
         ___ftpack
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___awdiv (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___awdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___awdiv (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___fttol (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___ftge (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___awdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___awdiv (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
     ___ftmul
       ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___awdiv (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
     _fabs
       ___ftneg
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
     _eval_poly
       ___ftadd
         ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___awdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___awdiv (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___fttol (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___ftge (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___awdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___awdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___awdiv (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___awdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
               ___fttol (ARG)
                 ___ftpack (ARG)
                 ___awdiv (ARG)
                 ___ftge (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___awdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___fttol (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___ftge (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___awdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___awdiv (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___fttol (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___ftge (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___awdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___awdiv (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftmul
         ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___awdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___awdiv (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___fttol (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___ftge (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___awdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___awdiv (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___awdiv (ARG)
     ___awtoft (ARG)
       ___ftpack
       ___awdiv (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___ftge (ARG)
     ___ftneg (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___fttol (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___ftge (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
   ___ftadd
     ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___awdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___ftmul (ARG)
       ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___awdiv (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___fttol (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___ftge (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
               ___awdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
     ___awdiv (ARG)
     ___awtoft (ARG)
       ___ftpack
       ___awdiv (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___ftneg (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___fttol (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___ftge (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
   ___ftdiv
     ___ftpack
     ___awdiv (ARG)
     ___awtoft (ARG)
       ___ftpack
       ___awdiv (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___ftneg (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___fttol (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___ftge (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
   ___ftmul
     ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___awdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___awdiv (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___fttol (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___ftge (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
             ___awdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___awtoft (ARG)
       ___ftpack
       ___awdiv (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
           ___awdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___ftneg (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___fttol (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___ftge (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
   ___awdiv
   ___awtoft
     ___ftpack
     ___awdiv (ARG)
     ___ftneg (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___fttol (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___ftge (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
   ___ftneg
     ___ftpack (ARG)
     ___awdiv (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
   ___fttol
     ___ftpack (ARG)
     ___awdiv (ARG)
     ___ftge (ARG)
     ___ftneg (ARG)
       ___ftpack (ARG)
       ___awdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
   ___wmul
     ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5B      5E       5       58.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       4       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BD      12        0.0%
DATA                 0      0      C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Fri Apr 11 16:50:27 2014

            _xmWriteByte 24BE   __end_of_openLSM9_accel 22AA    __end_of_openLSM9_gyro 2148  
                     l25 1086             ___awdiv@sign 0007      ___wmul@multiplicand 000C  
   __size_of_I2CReadByte 005A             ___asftmul@f2 004B             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
           ___ftadd@exp1 0056             ___ftadd@exp2 0055             ___ftadd@sign 0054  
                    l145 249A                      l154 24C0                      l148 24B8  
                    l157 24DE                      l342 22DC                      l343 22DE  
                    l344 22E6                      l336 22BE                      l416 251C  
                    l184 21F4                      l345 22E8                      l441 2032  
                    l417 251E                      l169 21B2                      l338 22CA  
                    l450 2058                      l178 21D6                      l354 2470  
                    l339 22CC                      l187 21FA                      l367 254C  
                    l707 23B4                      l820 1546                      l831 15EA  
                    l840 1606                      l816 151C                      l850 19C4  
                    l594 1370                      l851 19EA                      l873 24FC  
                    l991 224E             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
            _putrs1USART 2470                      wreg 000FE8               _TXSTA1bits 000FAC  
          ___asftmul@f1p 0049             __CFG_LVP$OFF 000000             ___ftdiv@cntr 0032  
           ___ftdiv@sign 0037                     l1001 2332                     l3041 1982  
                   l3035 194A                     l3203 165A                     l3115 1ABE  
                   l3213 1B6E                     l3133 1B0C                     l3125 1AE6  
                   l3151 1554                     l3215 1BFA                     l3223 1314  
                   l3127 1AF2                     l3119 1ACE                     l3145 152A  
                   l3241 1496                     l3129 1AF6                     l2701 1C38  
                   l3173 15A4                     l3237 146A                     l2551 2040  
                   l2711 1C94                     l2703 1C56                     l3175 15AE  
                   l3167 1586                     l3087 2358                     l3271 11DE  
                   l2537 201C                     l3193 1622                     l3185 15DA  
                   l3177 15B6                     l3097 1A58                     l2555 2044  
                   l2707 1C6C                     l3187 15E4                     l3179 15BC  
                   l2805 2244                     l2709 1C8A                     l2733 1F0C  
                   l2567 2078                     l2559 205C                     l2911 2314  
                   l2841 21C6                     l2745 1F36                     l2761 1F68  
                   l2843 21DA                     l2915 2328                     l2907 2308  
                   l2747 1F3E                     l2739 1F1C                     l2861 182E  
                   l2773 1FB0                     l2909 2310                     l2933 16A4  
                   l2765 1F76                     l2757 1F5E                     l2749 1F42  
                   l2783 200C                     l2839 21B6                     l2927 168A  
                   l2695 1C20                     l2881 189C                     l2777 1FE0  
                   l2793 221C                     l2891 18C8                     l2867 1866  
                   l2795 2224                     l2971 1766                     l2963 1748  
                   l2939 16DE                     l2699 1C2E                     l2885 18AC  
                   l2797 2228                     l2949 1706                     l2981 17E8  
                   l2895 18D8                     l2977 17BE                     l2969 1760  
                   l2979 17C6                     STR_1 102B                     u3007 12C0  
                   u2370 1814                     u2700 14D2                     u2620 1A3A  
                   u2605 2392                     u2390 184C                     u2550 1930  
                   u2710 14F8                     u2375 180C                     u2640 1A76  
                   u2705 14CA                     u2625 1A32                     u2570 1968  
                   u2395 1844                     u2555 1928                     u2715 14F0  
                   u2645 1A6E                     u2575 1960                     u2930 1338  
                   u2936 133A                     u2965 1484                     u2987 12A0  
                   u2997 12B0                     _fabs 2380                     _atan 12CC  
                   _main 1036             ___ftpack@arg 0001             ___ftpack@exp 0004  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
          __CFG_BORV$190 000000   __size_of_readLSM9_gyro 00B8                     prodh 000FF4  
                   prodl 000FF3                     start 0000            __CFG_IESO$OFF 000000  
           ___ftmul@cntr 0047             ___ftmul@sign 0048          ?_openLSM9_accel 0001  
           ___fttol@exp1 0021             ___fttol@lval 001D                    ?_fabs 0022  
                  ?_atan 0068                    ?_main 0001          __end_of___awdiv 1F80  
        __end_of___ftadd 1680          __end_of___ftdiv 1A1C          __end_of___ftneg 250A  
        __end_of___ftmul 1912          ___awdiv@divisor 0003          __end_of___fttol 1B1E  
        __end_of___lwdiv 2258          __end_of___lwmod 233C          ___awdiv@counter 0006  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000            ___awtoft@sign 0026          __end_of_dpowers 100A  
                  fabs@d 0022  __size_of_readLSM9_accel 00B8                    atan@f 0068  
                  atan@x 006E                    atan@y 006B            ?_readLSM9_mag 0008  
     __CFG_MCLRE$EXTMCLR 000000            ___ftpack@sign 0005                    main@a 0096  
         __CFG_BOREN$OFF 000000         gWriteByte@subadd 0003                    tablat 000FF5  
                  status 000FD8          __end_of_sprintf 17F6           __CFG_HFOFST$ON 000000  
         __CFG_FOSC$HSHP 000000           __CFG_PBADEN$ON 000000          __initialization 257A  
           __end_of_fabs 23C2             __end_of_atan 14B4             __end_of_main 12CC  
       __end_of_ReadI2C1 2526         __end_of_OpenI2C1 253E               _Open1USART 22AA  
                 ??_fabs 0025                   ??_atan 005E          xmWriteByte@data 0004  
                 ??_main 005E            ___fttol@sign1 001C            _readLSM9_gyro 1D80  
          __activetblptr 000003           ??_readLSM9_mag 000A                   _CCPR1L 000FBE  
                 _CCPR2L 000F67                   _CCPR3L 000F5E                   _CCPR4L 000F58  
       ___awdiv@dividend 0001         __end_of___awtoft 2380                   _ANSELC 000F3A  
       __end_of___ftpack 1CC8           __CFG_WDTEN$OFF 000000                   _RCSTA1 000FAB  
                 _SPBRG1 000FAF           I2CReadByte@add 0003                   _TXREG1 000FAD  
                 _TXSTA1 000FAC           __CFG_XINST$OFF 000000            openLSM9@_gadd 0009  
                 ___ftge 1F80            openLSM9@gtest 000C                   ___wmul 23FE  
              ??___awdiv 0005                ??___ftadd 004F                ??___ftdiv 002D  
              ??___ftneg 0013                ??___ftmul 003E                ??___fttol 0017  
              ??___lwdiv 0005                ??___lwmod 000D         ___awdiv@quotient 0008  
         ?_readLSM9_gyro 0008         __end_of_openLSM9 21A8    ___ftmul@f3_as_product 0044  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_sprintf 0019       __size_of_gReadByte 0014  
     __size_of___asftmul 003C       __size_of_WriteI2C1 006C               __accesstop 0060  
__end_of__initialization 2582               ___ftadd@f1 0049               ___ftadd@f2 004C  
             ___ftge@ff1 0001               ___ftge@ff2 0004        readLSM9_gyro@dest 0008  
           eval_poly@res 0065               ___ftdiv@f1 0027               ___ftdiv@f2 002A  
             ___ftdiv@f3 0033               ___ftneg@f1 0010               ___awtoft@c 0022  
             ___ftmul@f1 0038               ___ftmul@f2 003B               ___fttol@f1 0013  
           ?_xmWriteByte 0003           __pcstackCOMRAM 0001            ?_openLSM9_mag 0001  
            ?_Open1USART 0001             ?_putrs1USART 0002           _readLSM9_accel 1E38  
              ?_ReadI2C1 0001               __pbssBANK0 00BB               _gWriteByte 2498  
     __size_of_eval_poly 00F2          __CFG_PLLCFG$OFF 000000            ??_Write1USART 0002  
              ?_OpenI2C1 0001         ??_openLSM9_accel 0005           ??_openLSM9_mag 0005  
     __CFG_CCP2MX$PORTC1 000000                  ?___ftge 0001            ??_I2CReadByte 0005  
           OpenI2C1@slew 0002                  ?___wmul 000A       __CFG_CCP3MX$PORTB5 000000  
   __end_of_readLSM9_mag 1D80       readLSM9_accel@dest 0008        __end_of_gReadByte 2566  
        ??_readLSM9_gyro 000A                  _CCP1CON 000FBD                  _CCP2CON 000F66  
                _CCP3CON 000F5D                  _CCP4CON 000F57        __end_of___asftmul 23FE  
              ?___awtoft 0022                ?___ftpack 0001        __end_of_WriteI2C1 207C  
       Open1USART@config 0001               __xmaddress 00BD   __end_of_readLSM9_accel 1EF0  
                _SPBRGH1 000FB0                  _SSP1ADD 000FC8                  _SSP1BUF 000FC9  
             ??_ReadI2C1 0001   __size_of_openLSM9_gyro 0066               ??_OpenI2C1 0003  
    __size_of_Open1USART 004C                ?_openLSM9 0008          __CFG_PWRTEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000      __end_of_Write1USART 2552  
         openLSM9@_xmadd 0008          __size_of___ftge 0090                  ___awdiv 1EF0  
                ___ftadd 14B4                  ___ftdiv 1912                  ___ftneg 24E4  
        __size_of___wmul 003A                  ___ftmul 17F6                  ___fttol 1A1C  
                ___lwdiv 2202                  ___lwmod 22F6             __psmallconst 1000  
        __CFG_STVREN$OFF 000000                  __pcinit 257A               ??___awtoft 0025  
             ??___ftpack 0006        __end_of_eval_poly 1C10                  __ramtop 1000  
         openLSM9@xmtest 000D                  __ptext0 1036                  __ptext1 1A1C  
                __ptext2 233C                  __ptext3 1EF0                  __ptext4 12CC  
                __ptext5 1B1E                  __ptext6 14B4                  __ptext7 2380  
                __ptext8 23C2                  __ptext9 1912      __end_of_I2CReadByte 2202  
                _dpowers 1000          atan@val_squared 0072          ?_readLSM9_accel 0008  
                atan@val 0075                  main@hdg 009E                  main@mag 00B5  
                _sprintf 1680     end_of_initialization 2582              ?_gWriteByte 0003  
          ?_Tomcat_Setup 0001               ??_openLSM9 000A               _xmReadByte 2566  
                postdec2 000FDD                  postinc2 000FDE            _openLSM9_gyro 20E2  
   __size_of_xmWriteByte 0026     __size_of_putrs1USART 0028     __end_of_openLSM9_mag 20E2  
      I2CReadByte@subadd 0004           ??_Tomcat_Setup 0004              _Write1USART 253E  
            ___ftdiv@exp 0036           gWriteByte@data 0004    __size_of_readLSM9_mag 00B8  
            ___ftmul@exp 0043           ?_openLSM9_gyro 0001              _I2CReadByte 21A8  
         __end_of___ftge 2010           __end_of___wmul 2438             ??_Open1USART 0004  
    __size_of_gWriteByte 0026      start_initialization 257A               eval_poly@d 005A  
             eval_poly@n 005C               eval_poly@x 0057             _readLSM9_mag 1CC8  
      __size_of_ReadI2C1 001C       __end_of_Open1USART 22F6        __size_of_OpenI2C1 0018  
            ?_xmReadByte 0007         readLSM9_mag@dest 0008                 ??___ftge 0007  
               ??___wmul 000E        xmWriteByte@subadd 0003                _gReadByte 2552  
      __size_of___awtoft 0044        __size_of___ftpack 00B8                ___asftmul 23C2  
              _WriteI2C1 2010            __pcstackBANK0 0060                __gaddress 00BC  
    __end_of__stringdata 1035              sprintf@_val 001F              sprintf@flag 001D  
            sprintf@prec 001E                _main$2313 00A6                _main$2314 00A9  
              _main$2315 00AC                _main$2316 00AF                _main$2317 00B2  
       ___lwdiv@dividend 0001          gReadByte@subadd 0007          ??_openLSM9_gyro 0005  
      __size_of_openLSM9 0060                 ?___awdiv 0001                 ?___ftadd 0049  
               ?___ftdiv 0027                 ?___ftneg 0010                 ?___ftmul 0038  
               ?___fttol 0013                 ?___lwdiv 0001                 ?___lwmod 0009  
       ??_readLSM9_accel 000A          Open1USART@spbrg 0002    __end_of_readLSM9_gyro 1E38  
       __CFG_PRICLKEN$ON 000000    __size_of_openLSM9_mag 0066               ?_gReadByte 0007  
   __end_of_Tomcat_Setup 2470              __smallconst 1000               ?___asftmul 0049  
              _eval_poly 1B1E               ?_WriteI2C1 0001      __size_of_xmReadByte 0014  
       ___lwdiv@quotient 0006                 ?_sprintf 000F          Write1USART@data 0001  
           ??_gWriteByte 0005           ___wmul@product 000E                 _LATCbits 000F8B  
              atan@recip 0071                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
               _PIR2bits 000FA1         __CFG_WDTPS$32768 000000             _openLSM9_mag 207C  
               _SSP1CON1 000FC6                 _SSP1CON2 000FC5                 _SSP1STAT 000FC7  
       I2CReadByte@_temp 0006  __size_of_openLSM9_accel 0052              __stringdata 102B  
     __end_of_gWriteByte 24BE        ___wmul@multiplier 000A                main@accel 00A0  
             ?_eval_poly 0057      __end_ofatan@coeff_a 101C      __end_ofatan@coeff_b 102B  
               _ReadI2C1 250A             ?_Write1USART 0001                 _OpenI2C1 2526  
               __Hrparam 0000            ??_xmWriteByte 0005                 __Lrparam 0000  
      __CFG_P2BMX$PORTD2 000000             ?_I2CReadByte 0003         __size_of___awdiv 0090  
       __size_of___ftadd 01CC         __size_of___ftdiv 010A         __size_of___ftneg 0026  
       __size_of___ftmul 011C         __size_of___fttol 0102         __size_of___lwdiv 0056  
       __size_of___lwmod 0046                 ___awtoft 233C                 ___ftpack 1C10  
            ??_gReadByte 0008            ??_putrs1USART 0004              ??___asftmul 004E  
            ??_WriteI2C1 0002          ___lwdiv@divisor 0003          ___lwdiv@counter 0008  
               __ptext10 1C10                 __ptext11 2470                 __ptext20 207C  
               __ptext12 253E                 __ptext21 20E2                 __ptext13 1680  
               __ptext30 2438                 __ptext22 2498                 __ptext14 22F6  
               __ptext31 22AA                 __ptext23 2258                 __ptext15 2202  
               __ptext32 2526                 __ptext24 24BE                 __ptext16 1CC8  
               __ptext33 24E4                 __ptext25 2552                 __ptext17 1D80  
               __ptext34 1F80                 __ptext26 2566                 __ptext18 1E38  
               __ptext35 23FE                 __ptext27 21A8                 __ptext19 2148  
               __ptext36 17F6                 __ptext28 250A                 __ptext29 2010  
           _SSP1CON1bits 000FC6             _SSP1CON2bits 000FC5         __size_of_sprintf 0176  
          __size_of_fabs 0042            __size_of_atan 01E8            __size_of_main 0296  
               _openLSM9 2148        WriteI2C1@data_out 0001             ??_xmReadByte 0008  
  __size_of_Tomcat_Setup 0038                 main@buff 0078             _SSP1STATbits 000FC7  
               main@gyro 0098      __end_of_xmWriteByte 24E4              atan@coeff_a 100A  
            atan@coeff_b 101C        OpenI2C1@sync_mode 0001            _USART1_Status 00BB  
        putrs1USART@data 0002              ??_eval_poly 0060      __end_of_putrs1USART 2498  
     __end_of_xmReadByte 257A                sprintf@ap 001B                sprintf@sp 000F  
       ___lwmod@dividend 0009         xmReadByte@subadd 0007               _RCSTA1bits 000FAB  
           _Tomcat_Setup 2438           _openLSM9_accel 2258                 sprintf@c 0024  
               sprintf@f 0011          ___lwmod@divisor 000B          ___lwmod@counter 000E  
      __CFG_T3CMX$PORTC0 000000     __size_of_Write1USART 0014  
