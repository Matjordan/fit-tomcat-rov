

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Wed Feb 26 14:53:10 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     _ADCON1	set	4033
    17  0000                     _INTCONbits	set	4082
    18  0000                     _LATBbits	set	3978
    19  0000                     _LATDbits	set	3980
    20  0000                     _PIE1	set	3997
    21  0000                     _PIE1bits	set	3997
    22  0000                     _PIR1bits	set	3998
    23  0000                     _PORTBbits	set	3969
    24  0000                     _PORTDbits	set	3971
    25  0000                     _RCREG	set	4014
    26  0000                     _RCSTA	set	4011
    27  0000                     _RCSTAbits	set	4011
    28  0000                     _SPBRG	set	4015
    29  0000                     _SPBRGH	set	4016
    30  0000                     _TRISBbits	set	3987
    31  0000                     _TRISCbits	set	3988
    32  0000                     _TRISDbits	set	3989
    33  0000                     _TXREG	set	4013
    34  0000                     _TXSTA	set	4012
    35  0000                     _TXSTAbits	set	4012
    36                           
    37                           	psect	intcode_body
    38  0000AC                     __pintcode_body:
    39                           	opt stack 0
    40                           
    41                           ; #config settings
    42  0000AC                     int_func:
    43                           	opt stack 28
    44  0000AC  0006               	pop		; remove dummy address from shadow register refresh
    45  0000AE  CFE9 F004          	movff	fsr0l,??_isr+3
    46  0000B2  CFEA F005          	movff	fsr0h,??_isr+4
    47  0000B6  CFE1 F006          	movff	fsr1l,??_isr+5
    48  0000BA  CFE2 F007          	movff	fsr1h,??_isr+6
    49  0000BE  CFD9 F008          	movff	fsr2l,??_isr+7
    50  0000C2  CFDA F009          	movff	fsr2h,??_isr+8
    51  0000C6  CFF3 F00A          	movff	prodl,??_isr+9
    52  0000CA  CFF4 F00B          	movff	prodh,??_isr+10
    53  0000CE  CFF6 F00C          	movff	tblptrl,??_isr+11
    54  0000D2  CFF7 F00D          	movff	tblptrh,??_isr+12
    55  0000D6  CFF8 F00E          	movff	tblptru,??_isr+13
    56  0000DA  CFF5 F00F          	movff	tablat,??_isr+14
    57  0000DE                     
    58                           ;C_main.c: 78: INTCONbits.GIE=0;
    59  0000DE  9EF2               	bcf	intcon,7,c	;volatile
    60                           
    61                           ;C_main.c: 80: if (PIR1bits.RCIF) {
    62  0000E0  AA9E               	btfss	3998,5,c	;volatile
    63  0000E2  D001               	goto	i2u1_41
    64  0000E4  D001               	goto	i2u1_40
    65  0000E6                     i2u1_41:
    66  0000E6  D00D               	goto	i2l694
    67  0000E8                     i2u1_40:
    68  0000E8                     
    69                           ;C_main.c: 81: recv_buff = RCREG;
    70  0000E8  CFAE F022          	movff	4014,_recv_buff	;volatile
    71  0000EC                     
    72                           ;C_main.c: 82: if (recv_buff == 0xff)recv_flag = 1;
    73  0000EC  2822               	incf	_recv_buff,w,c
    74  0000EE  A4D8               	btfss	status,2,c
    75  0000F0  D001               	goto	i2u2_41
    76  0000F2  D001               	goto	i2u2_40
    77  0000F4                     i2u2_41:
    78  0000F4  D006               	goto	i2l694
    79  0000F6                     i2u2_40:
    80  0000F6  6E01               	movwf	??_isr& (0+255),c
    81  0000F8  0E01               	movlw	1
    82  0000FA  6E23               	movwf	_recv_flag,c
    83  0000FC  5001               	movf	??_isr& (0+255),w,c
    84  0000FE  D001               	goto	i2l694
    85  000100  D000               	goto	i2l694
    86  000102                     i2l694:
    87                           
    88                           ;C_main.c: 83: }
    89                           ;C_main.c: 85: INTCONbits.GIE=1;
    90  000102  8EF2               	bsf	intcon,7,c	;volatile
    91  000104  C00F  FFF5         	movff	??_isr+14,tablat
    92  000108  C00E  FFF8         	movff	??_isr+13,tblptru
    93  00010C  C00D  FFF7         	movff	??_isr+12,tblptrh
    94  000110  C00C  FFF6         	movff	??_isr+11,tblptrl
    95  000114  C00B  FFF4         	movff	??_isr+10,prodh
    96  000118  C00A  FFF3         	movff	??_isr+9,prodl
    97  00011C  C009  FFDA         	movff	??_isr+8,fsr2h
    98  000120  C008  FFD9         	movff	??_isr+7,fsr2l
    99  000124  C007  FFE2         	movff	??_isr+6,fsr1h
   100  000128  C006  FFE1         	movff	??_isr+5,fsr1l
   101  00012C  C005  FFEA         	movff	??_isr+4,fsr0h
   102  000130  C004  FFE9         	movff	??_isr+3,fsr0l
   103  000134  C003  FFFB         	movff	??_isr+2,pclatu
   104  000138  C002  FFFA         	movff	??_isr+1,pclath
   105  00013C  0011               	retfie		f
   106  00013E                     __end_of_isr:
   107                           	opt stack 0
   108  0000                     pclatu	equ	0xFFB
   109                           pclath	equ	0xFFA
   110                           tblptru	equ	0xFF8
   111                           tblptrh	equ	0xFF7
   112                           tblptrl	equ	0xFF6
   113                           tablat	equ	0xFF5
   114                           prodh	equ	0xFF4
   115                           prodl	equ	0xFF3
   116                           intcon	equ	0xFF2
   117                           fsr0h	equ	0xFEA
   118                           fsr0l	equ	0xFE9
   119                           fsr1h	equ	0xFE2
   120                           fsr1l	equ	0xFE1
   121                           fsr2h	equ	0xFDA
   122                           fsr2l	equ	0xFD9
   123                           status	equ	0xFD8
   124                           
   125                           	psect	cinit
   126  0001E4                     __pcinit:
   127                           	opt stack 0
   128  0001E4                     start_initialization:
   129                           	opt stack 0
   130  0001E4                     __initialization:
   131                           	opt stack 0
   132                           
   133                           ; Clear objects allocated to COMRAM (4 bytes)
   134  0001E4  6A23               	clrf	(__pbssCOMRAM+3)& (0+255),c
   135  0001E6  6A22               	clrf	(__pbssCOMRAM+2)& (0+255),c
   136  0001E8  6A21               	clrf	(__pbssCOMRAM+1)& (0+255),c
   137  0001EA  6A20               	clrf	__pbssCOMRAM& (0+255),c
   138  0001EC                     end_of_initialization:
   139                           	opt stack 0
   140  0001EC                     __end_of__initialization:
   141                           	opt stack 0
   142  0001EC  0100               	movlb	0
   143  0001EE  EF0C  F000         	goto	_main	;jump to C main() function
   144                           pclatu	equ	0xFFB
   145                           pclath	equ	0xFFA
   146                           tblptru	equ	0xFF8
   147                           tblptrh	equ	0xFF7
   148                           tblptrl	equ	0xFF6
   149                           tablat	equ	0xFF5
   150                           prodh	equ	0xFF4
   151                           prodl	equ	0xFF3
   152                           intcon	equ	0xFF2
   153                           fsr0h	equ	0xFEA
   154                           fsr0l	equ	0xFE9
   155                           fsr1h	equ	0xFE2
   156                           fsr1l	equ	0xFE1
   157                           fsr2h	equ	0xFDA
   158                           fsr2l	equ	0xFD9
   159                           status	equ	0xFD8
   160                           
   161                           	psect	bssCOMRAM
   162  000020                     __pbssCOMRAM:
   163                           	opt stack 0
   164  000020                     _USART_Status:
   165                           	opt stack 0
   166  000020                     	ds	1
   167  000021                     _n:
   168                           	opt stack 0
   169  000021                     	ds	1
   170  000022                     _recv_buff:
   171                           	opt stack 0
   172  000022                     	ds	1
   173  000023                     _recv_flag:
   174                           	opt stack 0
   175  000023                     	ds	1
   176                           pclatu	equ	0xFFB
   177                           pclath	equ	0xFFA
   178                           tblptru	equ	0xFF8
   179                           tblptrh	equ	0xFF7
   180                           tblptrl	equ	0xFF6
   181                           tablat	equ	0xFF5
   182                           prodh	equ	0xFF4
   183                           prodl	equ	0xFF3
   184                           intcon	equ	0xFF2
   185                           fsr0h	equ	0xFEA
   186                           fsr0l	equ	0xFE9
   187                           fsr1h	equ	0xFE2
   188                           fsr1l	equ	0xFE1
   189                           fsr2h	equ	0xFDA
   190                           fsr2l	equ	0xFD9
   191                           status	equ	0xFD8
   192                           
   193                           	psect	cstackCOMRAM
   194  000001                     __pcstackCOMRAM:
   195                           	opt stack 0
   196  000001                     ??_isr:
   197  000001                     
   198                           ; 0 bytes @ 0x0
   199  000001                     	ds	15
   200  000010                     ?_OpenUSART:
   201                           	opt stack 0
   202  000010                     ?_WriteUSART:
   203                           	opt stack 0
   204  000010                     OpenUSART@config:
   205                           	opt stack 0
   206  000010                     WriteUSART@data:
   207                           	opt stack 0
   208                           
   209                           ; 1 bytes @ 0xF
   210  000010                     	ds	1
   211  000011                     ?_tx_chars:
   212                           	opt stack 0
   213  000011                     tx_chars@tx_buff:
   214                           	opt stack 0
   215  000011                     OpenUSART@spbrg:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0x10
   219  000011                     	ds	2
   220  000013                     tx_chars@num_bytes:
   221                           	opt stack 0
   222                           
   223                           ; 1 bytes @ 0x12
   224  000013                     	ds	1
   225  000014                     ??_tx_chars:
   226                           
   227                           ; 0 bytes @ 0x13
   228  000014                     	ds	1
   229  000015                     tx_chars@k:
   230                           	opt stack 0
   231                           
   232                           ; 1 bytes @ 0x14
   233  000015                     	ds	1
   234  000016                     ??_main:
   235                           
   236                           ; 0 bytes @ 0x15
   237  000016                     	ds	1
   238  000017                     main@buff:
   239                           	opt stack 0
   240                           
   241                           ; 9 bytes @ 0x16
   242  000017                     	ds	9
   243                           pclatu	equ	0xFFB
   244                           pclath	equ	0xFFA
   245                           tblptru	equ	0xFF8
   246                           tblptrh	equ	0xFF7
   247                           tblptrl	equ	0xFF6
   248                           tablat	equ	0xFF5
   249                           prodh	equ	0xFF4
   250                           prodl	equ	0xFF3
   251                           intcon	equ	0xFF2
   252                           fsr0h	equ	0xFEA
   253                           fsr0l	equ	0xFE9
   254                           fsr1h	equ	0xFE2
   255                           fsr1l	equ	0xFE1
   256                           fsr2h	equ	0xFDA
   257                           fsr2l	equ	0xFD9
   258                           status	equ	0xFD8
   259                           
   260 ;;
   261 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   262 ;;
   263 ;; *************** function _main *****************
   264 ;; Defined at:
   265 ;;		line 88 in file "C_main.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;		None
   268 ;; Auto vars:     Size  Location     Type
   269 ;;  buff            9   22[COMRAM] unsigned char [9]
   270 ;; Return value:  Size  Location     Type
   271 ;;		None               void
   272 ;; Registers used:
   273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   274 ;; Tracked objects:
   275 ;;		On entry : 0/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   279 ;;      Params:         0       0       0       0       0       0       0
   280 ;;      Locals:         9       0       0       0       0       0       0
   281 ;;      Temps:          1       0       0       0       0       0       0
   282 ;;      Totals:        10       0       0       0       0       0       0
   283 ;;Total ram usage:       10 bytes
   284 ;; Hardware stack levels required when called:    3
   285 ;; This function calls:
   286 ;;		_OpenUSART
   287 ;;		_tx_chars
   288 ;; This function is called by:
   289 ;;		Startup code after reset
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293                           	psect	text0
   294  000018                     __ptext0:
   295                           	opt stack 0
   296  000018                     _main:
   297                           	opt stack 28
   298                           
   299                           ;C_main.c: 89: char buff[9];
   300                           ;C_main.c: 92: PIE1 = 0b00110000;
   301                           
   302                           ;incstack = 0
   303                           ;incstack = 0
   304  000018  0E30               	movlw	48
   305  00001A  6E9D               	movwf	3997,c	;volatile
   306                           
   307                           ;C_main.c: 93: ADCON1 = 0b00001111;
   308  00001C  0E0F               	movlw	15
   309  00001E  6EC1               	movwf	4033,c	;volatile
   310                           
   311                           ;C_main.c: 95: OpenUSART(0b01111111 &
   312                           ;C_main.c: 96: 0b11111111 &
   313                           ;C_main.c: 97: 0b11111110 &
   314                           ;C_main.c: 98: 0b11111101 &
   315                           ;C_main.c: 99: 0b11111111 &
   316                           ;C_main.c: 100: 0b11111111, 131);
   317  000020  6E16               	movwf	??_main& (0+255),c
   318  000022  0E7C               	movlw	124
   319  000024  6E10               	movwf	?_OpenUSART,c
   320  000026  5016               	movf	??_main& (0+255),w,c
   321  000028  0E00               	movlw	0
   322  00002A  6E12               	movwf	?_OpenUSART+2,c
   323  00002C  0E83               	movlw	131
   324  00002E  6E11               	movwf	?_OpenUSART+1,c
   325  000030  EC9F  F000         	call	_OpenUSART	;wreg free
   326                           
   327                           ;C_main.c: 103: TRISBbits.RB0 = 1;
   328  000034  8093               	bsf	3987,0,c	;volatile
   329                           
   330                           ;C_main.c: 104: TRISBbits.RB1 = 1;
   331  000036  8293               	bsf	3987,1,c	;volatile
   332                           
   333                           ;C_main.c: 105: TRISBbits.RB2 = 1;
   334  000038  8493               	bsf	3987,2,c	;volatile
   335                           
   336                           ;C_main.c: 106: TRISBbits.RB3 = 1;
   337  00003A  8693               	bsf	3987,3,c	;volatile
   338                           
   339                           ;C_main.c: 107: TRISBbits.RB4 = 1;
   340  00003C  8893               	bsf	3987,4,c	;volatile
   341                           
   342                           ;C_main.c: 108: TRISBbits.RB5 = 1;
   343  00003E  8A93               	bsf	3987,5,c	;volatile
   344                           
   345                           ;C_main.c: 109: TRISDbits.RD6 = 1;
   346  000040  8C95               	bsf	3989,6,c	;volatile
   347                           
   348                           ;C_main.c: 110: TRISDbits.RD7 = 1;
   349  000042  8E95               	bsf	3989,7,c	;volatile
   350                           
   351                           ;C_main.c: 111: LATBbits.LATB0 = 0;
   352  000044  908A               	bcf	3978,0,c	;volatile
   353                           
   354                           ;C_main.c: 112: LATBbits.LATB1 = 0;
   355  000046  928A               	bcf	3978,1,c	;volatile
   356                           
   357                           ;C_main.c: 113: LATBbits.LATB2 = 0;
   358  000048  948A               	bcf	3978,2,c	;volatile
   359                           
   360                           ;C_main.c: 114: LATBbits.LATB3 = 0;
   361  00004A  968A               	bcf	3978,3,c	;volatile
   362                           
   363                           ;C_main.c: 115: LATBbits.LATB4 = 0;
   364  00004C  988A               	bcf	3978,4,c	;volatile
   365                           
   366                           ;C_main.c: 116: LATBbits.LATB5 = 0;
   367  00004E  9A8A               	bcf	3978,5,c	;volatile
   368                           
   369                           ;C_main.c: 117: LATDbits.LATD6 = 0;
   370  000050  9C8C               	bcf	3980,6,c	;volatile
   371                           
   372                           ;C_main.c: 118: LATDbits.LATD7 = 0;
   373  000052  9E8C               	bcf	3980,7,c	;volatile
   374  000054                     l732:
   375                           
   376                           ;C_main.c: 122: buff[0] = 0xff;
   377  000054  6817               	setf	main@buff,c
   378                           
   379                           ;C_main.c: 123: buff[1] = PORTBbits.RB0;
   380  000056  0E00               	movlw	0
   381  000058  B081               	btfsc	3969,0,c	;volatile
   382  00005A  0E01               	movlw	1
   383  00005C  6E18               	movwf	main@buff+1,c
   384                           
   385                           ;C_main.c: 124: buff[2] = PORTBbits.RB1;
   386  00005E  0E00               	movlw	0
   387  000060  B281               	btfsc	3969,1,c	;volatile
   388  000062  0E01               	movlw	1
   389  000064  6E19               	movwf	main@buff+2,c
   390                           
   391                           ;C_main.c: 125: buff[3] = PORTBbits.RB2;
   392  000066  0E00               	movlw	0
   393  000068  B481               	btfsc	3969,2,c	;volatile
   394  00006A  0E01               	movlw	1
   395  00006C  6E1A               	movwf	main@buff+3,c
   396                           
   397                           ;C_main.c: 126: buff[4] = PORTBbits.RB3;
   398  00006E  0E00               	movlw	0
   399  000070  B681               	btfsc	3969,3,c	;volatile
   400  000072  0E01               	movlw	1
   401  000074  6E1B               	movwf	main@buff+4,c
   402                           
   403                           ;C_main.c: 127: buff[5] = PORTBbits.RB4;
   404  000076  0E00               	movlw	0
   405  000078  B881               	btfsc	3969,4,c	;volatile
   406  00007A  0E01               	movlw	1
   407  00007C  6E1C               	movwf	main@buff+5,c
   408                           
   409                           ;C_main.c: 128: buff[6] = PORTBbits.RB5;
   410  00007E  0E00               	movlw	0
   411  000080  BA81               	btfsc	3969,5,c	;volatile
   412  000082  0E01               	movlw	1
   413  000084  6E1D               	movwf	main@buff+6,c
   414                           
   415                           ;C_main.c: 129: buff[7] = PORTDbits.RD6;
   416  000086  0E00               	movlw	0
   417  000088  BC83               	btfsc	3971,6,c	;volatile
   418  00008A  0E01               	movlw	1
   419  00008C  6E1E               	movwf	main@buff+7,c
   420                           
   421                           ;C_main.c: 130: buff[8] = PORTDbits.RD7;
   422  00008E  0E00               	movlw	0
   423  000090  BE83               	btfsc	3971,7,c	;volatile
   424  000092  0E01               	movlw	1
   425  000094  6E1F               	movwf	main@buff+8,c
   426                           
   427                           ;C_main.c: 133: tx_chars(buff,9);
   428  000096  0E00               	movlw	high main@buff
   429  000098  6E12               	movwf	?_tx_chars+1,c
   430  00009A  0E17               	movlw	low main@buff
   431  00009C  6E11               	movwf	?_tx_chars,c
   432  00009E  6E16               	movwf	??_main& (0+255),c
   433  0000A0  0E09               	movlw	9
   434  0000A2  6E13               	movwf	?_tx_chars+2,c
   435  0000A4  5016               	movf	??_main& (0+255),w,c
   436  0000A6  ECCD  F000         	call	_tx_chars	;wreg free
   437  0000AA  D7D4               	goto	l732
   438  0000AC                     __end_of_main:
   439                           	opt stack 0
   440                           pclatu	equ	0xFFB
   441                           pclath	equ	0xFFA
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           prodh	equ	0xFF4
   447                           prodl	equ	0xFF3
   448                           intcon	equ	0xFF2
   449                           fsr0h	equ	0xFEA
   450                           fsr0l	equ	0xFE9
   451                           fsr1h	equ	0xFE2
   452                           fsr1l	equ	0xFE1
   453                           fsr2h	equ	0xFDA
   454                           fsr2l	equ	0xFD9
   455                           status	equ	0xFD8
   456                           
   457 ;; *************** function _tx_chars *****************
   458 ;; Defined at:
   459 ;;		line 140 in file "C_main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;  tx_buff         2   16[COMRAM] PTR unsigned char 
   462 ;;		 -> main@buff(9), 
   463 ;;  num_bytes       1   18[COMRAM] unsigned char 
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  k               1   20[COMRAM] unsigned char 
   466 ;; Return value:  Size  Location     Type
   467 ;;		None               void
   468 ;; Registers used:
   469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   475 ;;      Params:         3       0       0       0       0       0       0
   476 ;;      Locals:         1       0       0       0       0       0       0
   477 ;;      Temps:          1       0       0       0       0       0       0
   478 ;;      Totals:         5       0       0       0       0       0       0
   479 ;;Total ram usage:        5 bytes
   480 ;; Hardware stack levels used:    1
   481 ;; Hardware stack levels required when called:    2
   482 ;; This function calls:
   483 ;;		_WriteUSART
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text1
   490  00019A                     __ptext1:
   491                           	opt stack 0
   492  00019A                     _tx_chars:
   493                           	opt stack 28
   494                           
   495                           ;C_main.c: 141: char k=0;
   496                           
   497                           ;incstack = 0
   498                           ;incstack = 0
   499  00019A  6E14               	movwf	??_tx_chars& (0+255),c
   500  00019C  0E00               	movlw	0
   501  00019E  6E15               	movwf	tx_chars@k,c
   502  0001A0  5014               	movf	??_tx_chars& (0+255),w,c
   503                           
   504                           ;C_main.c: 142: for (k = 0; k < num_bytes; k++)
   505  0001A2  6E14               	movwf	??_tx_chars& (0+255),c
   506  0001A4  0E00               	movlw	0
   507  0001A6  6E15               	movwf	tx_chars@k,c
   508  0001A8  5014               	movf	??_tx_chars& (0+255),w,c
   509  0001AA  D00F               	goto	l794
   510  0001AC                     l52:
   511  0001AC  A2AC               	btfss	4012,1,c	;volatile
   512  0001AE  D7FE               	goto	l52
   513                           
   514                           ;C_main.c: 145: WriteUSART(tx_buff[k]);
   515  0001B0  5015               	movf	tx_chars@k,w,c
   516  0001B2  0D01               	mullw	1
   517  0001B4  50F3               	movf	prodl,w,c
   518  0001B6  2411               	addwf	tx_chars@tx_buff,w,c
   519  0001B8  6ED9               	movwf	fsr2l,c
   520  0001BA  50F4               	movf	prodh,w,c
   521  0001BC  2012               	addwfc	tx_chars@tx_buff+1,w,c
   522  0001BE  6EDA               	movwf	fsr2h,c
   523  0001C0  50DF               	movf	indf2,w,c
   524  0001C2  6E10               	movwf	?_WriteUSART,c
   525  0001C4  ECEA  F000         	call	_WriteUSART	;wreg free
   526  0001C8  2A15               	incf	tx_chars@k,f,c
   527  0001CA                     l794:
   528  0001CA  5013               	movf	tx_chars@num_bytes,w,c
   529  0001CC  5C15               	subwf	tx_chars@k,w,c
   530  0001CE  B0D8               	btfsc	status,0,c
   531  0001D0  0012               	return	
   532  0001D2  D7EC               	goto	l52
   533  0001D4                     __end_of_tx_chars:
   534                           	opt stack 0
   535                           pclatu	equ	0xFFB
   536                           pclath	equ	0xFFA
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           prodh	equ	0xFF4
   542                           prodl	equ	0xFF3
   543                           intcon	equ	0xFF2
   544                           fsr0h	equ	0xFEA
   545                           fsr0l	equ	0xFE9
   546                           fsr1h	equ	0xFE2
   547                           fsr1l	equ	0xFE1
   548                           indf2	equ	0xFDF
   549                           fsr2h	equ	0xFDA
   550                           fsr2l	equ	0xFD9
   551                           status	equ	0xFD8
   552                           
   553 ;; *************** function _WriteUSART *****************
   554 ;; Defined at:
   555 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uwrite.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;  data            1   15[COMRAM] unsigned char 
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;		None               void
   562 ;; Registers used:
   563 ;;		None
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   569 ;;      Params:         1       0       0       0       0       0       0
   570 ;;      Locals:         0       0       0       0       0       0       0
   571 ;;      Temps:          0       0       0       0       0       0       0
   572 ;;      Totals:         1       0       0       0       0       0       0
   573 ;;Total ram usage:        1 bytes
   574 ;; Hardware stack levels used:    1
   575 ;; Hardware stack levels required when called:    1
   576 ;; This function calls:
   577 ;;		Nothing
   578 ;; This function is called by:
   579 ;;		_tx_chars
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text2
   584  0001D4                     __ptext2:
   585                           	opt stack 0
   586  0001D4                     _WriteUSART:
   587                           	opt stack 28
   588                           
   589                           ;incstack = 0
   590                           ;incstack = 0
   591  0001D4  ACAC               	btfss	4012,6,c	;volatile
   592  0001D6  D003               	goto	l98
   593  0001D8  90AC               	bcf	4012,0,c	;volatile
   594  0001DA  B220               	btfsc	_USART_Status,1,c
   595  0001DC  80AC               	bsf	4012,0,c	;volatile
   596  0001DE                     l98:
   597  0001DE  C010  FFAD         	movff	WriteUSART@data,4013	;volatile
   598  0001E2  0012               	return	
   599  0001E4                     __end_of_WriteUSART:
   600                           	opt stack 0
   601                           pclatu	equ	0xFFB
   602                           pclath	equ	0xFFA
   603                           tblptru	equ	0xFF8
   604                           tblptrh	equ	0xFF7
   605                           tblptrl	equ	0xFF6
   606                           tablat	equ	0xFF5
   607                           prodh	equ	0xFF4
   608                           prodl	equ	0xFF3
   609                           intcon	equ	0xFF2
   610                           fsr0h	equ	0xFEA
   611                           fsr0l	equ	0xFE9
   612                           fsr1h	equ	0xFE2
   613                           fsr1l	equ	0xFE1
   614                           indf2	equ	0xFDF
   615                           fsr2h	equ	0xFDA
   616                           fsr2l	equ	0xFD9
   617                           status	equ	0xFD8
   618                           
   619 ;; *************** function _OpenUSART *****************
   620 ;; Defined at:
   621 ;;		line 74 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uopen.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;  config          1   15[COMRAM] unsigned char 
   624 ;;  spbrg           2   16[COMRAM] unsigned int 
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;		None               void
   629 ;; Registers used:
   630 ;;		wreg, status,2
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   636 ;;      Params:         3       0       0       0       0       0       0
   637 ;;      Locals:         0       0       0       0       0       0       0
   638 ;;      Temps:          0       0       0       0       0       0       0
   639 ;;      Totals:         3       0       0       0       0       0       0
   640 ;;Total ram usage:        3 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; Hardware stack levels required when called:    1
   643 ;; This function calls:
   644 ;;		Nothing
   645 ;; This function is called by:
   646 ;;		_main
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           	psect	text3
   651  00013E                     __ptext3:
   652                           	opt stack 0
   653  00013E                     _OpenUSART:
   654                           	opt stack 29
   655                           
   656                           ;incstack = 0
   657                           ;incstack = 0
   658  00013E  0E00               	movlw	0
   659  000140  6EAC               	movwf	4012,c	;volatile
   660  000142  0E00               	movlw	0
   661  000144  6EAB               	movwf	4011,c	;volatile
   662  000146  B010               	btfsc	OpenUSART@config,0,c
   663  000148  88AC               	bsf	4012,4,c	;volatile
   664  00014A  A210               	btfss	OpenUSART@config,1,c
   665  00014C  D002               	goto	l78
   666  00014E  8CAC               	bsf	4012,6,c	;volatile
   667  000150  8CAB               	bsf	4011,6,c	;volatile
   668  000152                     l78:
   669  000152  B410               	btfsc	OpenUSART@config,2,c
   670  000154  8EAC               	bsf	4012,7,c	;volatile
   671  000156  A610               	btfss	OpenUSART@config,3,c
   672  000158  D002               	goto	l80
   673  00015A  88AB               	bsf	4011,4,c	;volatile
   674  00015C  D001               	goto	l81
   675  00015E                     l80:
   676  00015E  8AAB               	bsf	4011,5,c	;volatile
   677  000160                     l81:
   678  000160  B810               	btfsc	OpenUSART@config,4,c
   679  000162  84AC               	bsf	4012,2,c	;volatile
   680  000164  989E               	bcf	3998,4,c	;volatile
   681  000166  BA10               	btfsc	OpenUSART@config,5,c
   682  000168  86AB               	bsf	4011,3,c	;volatile
   683  00016A  AC10               	btfss	OpenUSART@config,6,c
   684  00016C  D002               	goto	l84
   685  00016E  8A9D               	bsf	3997,5,c	;volatile
   686  000170  D001               	goto	l85
   687  000172                     l84:
   688  000172  9A9D               	bcf	3997,5,c	;volatile
   689  000174                     l85:
   690  000174  9A9E               	bcf	3998,5,c	;volatile
   691  000176  AE10               	btfss	OpenUSART@config,7,c
   692  000178  D002               	goto	l86
   693  00017A  889D               	bsf	3997,4,c	;volatile
   694  00017C  D001               	goto	l87
   695  00017E                     l86:
   696  00017E  989D               	bcf	3997,4,c	;volatile
   697  000180                     l87:
   698  000180  C011  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
   699  000184  5012               	movf	OpenUSART@spbrg+1,w,c
   700  000186  6EB0               	movwf	4016,c	;volatile
   701  000188  8AAC               	bsf	4012,5,c	;volatile
   702  00018A  8EAB               	bsf	4011,7,c	;volatile
   703  00018C  9C94               	bcf	3988,6,c	;volatile
   704  00018E  8E94               	bsf	3988,7,c	;volatile
   705  000190  B8AC               	btfsc	4012,4,c	;volatile
   706  000192  BEAC               	btfsc	4012,7,c	;volatile
   707  000194  D001               	goto	l89
   708  000196  8C94               	bsf	3988,6,c	;volatile
   709  000198                     l89:
   710  000198  0012               	return	
   711  00019A                     __end_of_OpenUSART:
   712                           	opt stack 0
   713                           pclatu	equ	0xFFB
   714                           pclath	equ	0xFFA
   715                           tblptru	equ	0xFF8
   716                           tblptrh	equ	0xFF7
   717                           tblptrl	equ	0xFF6
   718                           tablat	equ	0xFF5
   719                           prodh	equ	0xFF4
   720                           prodl	equ	0xFF3
   721                           intcon	equ	0xFF2
   722                           fsr0h	equ	0xFEA
   723                           fsr0l	equ	0xFE9
   724                           fsr1h	equ	0xFE2
   725                           fsr1l	equ	0xFE1
   726                           indf2	equ	0xFDF
   727                           fsr2h	equ	0xFDA
   728                           fsr2l	equ	0xFD9
   729                           status	equ	0xFD8
   730                           
   731 ;; *************** function _isr *****************
   732 ;; Defined at:
   733 ;;		line 77 in file "C_main.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;		None               void
   740 ;; Registers used:
   741 ;;		wreg, status,2, status,0
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   747 ;;      Params:         0       0       0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0       0       0
   749 ;;      Temps:         15       0       0       0       0       0       0
   750 ;;      Totals:        15       0       0       0       0       0       0
   751 ;;Total ram usage:       15 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; This function calls:
   754 ;;		Nothing
   755 ;; This function is called by:
   756 ;;		Interrupt level 2
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	intcode
   761  000008                     __pintcode:
   762                           	opt stack 0
   763  000008                     _isr:
   764                           	opt stack 28
   765                           
   766                           ;incstack = 0
   767  000008  CFFA F002          	movff	pclath,??_isr+1
   768  00000C  CFFB F003          	movff	pclatu,??_isr+2
   769  000010  ED56  F000         	call	int_func,f	;refresh shadow registers
   770                           pclatu	equ	0xFFB
   771                           pclath	equ	0xFFA
   772                           tblptru	equ	0xFF8
   773                           tblptrh	equ	0xFF7
   774                           tblptrl	equ	0xFF6
   775                           tablat	equ	0xFF5
   776                           prodh	equ	0xFF4
   777                           prodl	equ	0xFF3
   778                           intcon	equ	0xFF2
   779                           fsr0h	equ	0xFEA
   780                           fsr0l	equ	0xFE9
   781                           fsr1h	equ	0xFE2
   782                           fsr1l	equ	0xFE1
   783                           indf2	equ	0xFDF
   784                           fsr2h	equ	0xFDA
   785                           fsr2l	equ	0xFD9
   786                           status	equ	0xFD8
   787                           pclatu	equ	0xFFB
   788                           pclath	equ	0xFFA
   789                           tblptru	equ	0xFF8
   790                           tblptrh	equ	0xFF7
   791                           tblptrl	equ	0xFF6
   792                           tablat	equ	0xFF5
   793                           prodh	equ	0xFF4
   794                           prodl	equ	0xFF3
   795                           intcon	equ	0xFF2
   796                           fsr0h	equ	0xFEA
   797                           fsr0l	equ	0xFE9
   798                           fsr1h	equ	0xFE2
   799                           fsr1l	equ	0xFE1
   800                           indf2	equ	0xFDF
   801                           fsr2h	equ	0xFDA
   802                           fsr2l	equ	0xFD9
   803                           status	equ	0xFD8
   804                           
   805                           	psect	rparam
   806  0000                     pclatu	equ	0xFFB
   807                           pclath	equ	0xFFA
   808                           tblptru	equ	0xFF8
   809                           tblptrh	equ	0xFF7
   810                           tblptrl	equ	0xFF6
   811                           tablat	equ	0xFF5
   812                           prodh	equ	0xFF4
   813                           prodl	equ	0xFF3
   814                           intcon	equ	0xFF2
   815                           fsr0h	equ	0xFEA
   816                           fsr0l	equ	0xFE9
   817                           fsr1h	equ	0xFE2
   818                           fsr1l	equ	0xFE1
   819                           indf2	equ	0xFDF
   820                           fsr2h	equ	0xFDA
   821                           fsr2l	equ	0xFD9
   822                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     31      35
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    tx_chars@tx_buff	PTR unsigned char  size(2) Largest target is 9
		 -> main@buff(COMRAM[9]), 


Critical Paths under _main in COMRAM

    _main->_tx_chars
    _tx_chars->_WriteUSART

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     360
                                             21 COMRAM    10    10      0
                          _OpenUSART
                           _tx_chars
 ---------------------------------------------------------------------------------
 (1) _tx_chars                                             5     2      3      75
                                             16 COMRAM     5     2      3
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     0      1      15
                                             15 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            3     0      3     150
                                             15 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                 15    15      0       0
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenUSART
   _tx_chars
     _WriteUSART

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1F      23       1       27.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      15        0.0%
DATA                 0      0      25       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Wed Feb 26 14:53:10 2014

                      _n 0021                       l52 01AC                       l80 015E  
                     l81 0160                       l84 0172                       l85 0174  
                     l86 017E                       l78 0152                       l87 0180  
                     l89 0198                       l98 01DE              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000                      l732 0054  
                    l794 01CA             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    _isr 0008             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   ?_isr 0001                     _PIE1 000F9D                     i2l40 0100  
                   i2l41 0104                     i2l39 0102                     _main 0018  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9                     pclat 000FFA                     prodh 000FF4  
                   prodl 000FF3                     start 0014            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000                    ??_isr 0001                    ?_main 0001  
                  i2l690 00EC                    i2l692 00F6                    i2l694 0102  
                  i2l686 00DE                    i2l688 00E8                    _RCREG 000FAE  
                  _RCSTA 000FAB                    _SPBRG 000FAF                    _TXREG 000FAD  
                  _TXSTA 000FAC            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
         __CFG_BOREN$OFF 000000                    tablat 000FF5                    status 000FD8  
         __CFG_PBADEN$ON 000000           WriteUSART@data 0010          __initialization 01E4  
           __end_of_main 00AC                   ??_main 0016            __activetblptr 000000  
                 _ADCON1 000FC1                   _SPBRGH 000FB0                   i2u1_40 00E8  
                 i2u1_41 00E6                   i2u2_40 00F6                   i2u2_41 00F4  
         __CFG_XINST$OFF 000000       __size_of_OpenUSART 005C                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8         __end_of_tx_chars 01D4  
             __accesstop 0080  __end_of__initialization 01EC               _WriteUSART 01D4  
         __pcstackCOMRAM 0001        __end_of_OpenUSART 019A                  __Hparam 0000  
                __Lparam 0000              ?_WriteUSART 0010                ?_tx_chars 0011  
        __CFG_STVREN$OFF 000000                  __pcinit 01E4                  __ramtop 0600  
                __ptext0 0018                  __ptext1 019A                  __ptext2 01D4  
                __ptext3 013E             __size_of_isr 0136           __pintcode_body 00AC  
   end_of_initialization 01EC                  int_func 00AC                _RCSTAbits 000FAB  
             ??_tx_chars 0014                _PORTBbits 000F81                _PORTDbits 000F83  
              _TRISBbits 000F93                _TRISCbits 000F94                _TRISDbits 000F95  
    __size_of_WriteUSART 0010                _TXSTAbits 000FAC        tx_chars@num_bytes 0013  
    start_initialization 01E4              __end_of_isr 013E                _OpenUSART 013E  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0020               ?_OpenUSART 0010  
      __CFG_CCP2MX$PORTC 000000             ??_WriteUSART 0011                __pintcode 0008  
      __size_of_tx_chars 003A       __end_of_WriteUSART 01E4                _recv_flag 0023  
              _recv_buff 0022                 _LATBbits 000F8A                 _LATDbits 000F8C  
               _PIE1bits 000F9D                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
            ??_OpenUSART 0013          OpenUSART@config 0010                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0094                 _tx_chars 019A  
               main@buff 0017          tx_chars@tx_buff 0011               _INTCONbits 000FF2  
         OpenUSART@spbrg 0011                tx_chars@k 0015                 intlevel2 0000  
           _USART_Status 0020  
